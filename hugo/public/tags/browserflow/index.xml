<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>browserflow | David Bieber</title>
    <link>https://davidbieber.com/tags/browserflow/</link>
      <atom:link href="https://davidbieber.com/tags/browserflow/index.xml" rel="self" type="application/rss+xml" />
    <description>browserflow</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 07 Dec 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=true) shape:circle]</url>
      <title>browserflow</title>
      <link>https://davidbieber.com/tags/browserflow/</link>
    </image>
    
    <item>
      <title>The Future of Automation Software</title>
      <link>https://davidbieber.com/snippets/2021-12-07-future-automation-software/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-12-07-future-automation-software/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://browserflow.app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Browserflow&lt;/a&gt; is great.
It&amp;rsquo;s beyond great.
It&amp;rsquo;s one of my favorite tools, because it is so versatile and empowering.&lt;/p&gt;
&lt;p&gt;Nevertheless, there&amp;rsquo;s more that I want from my automation tools.
Here&amp;rsquo;s a summary of what I&amp;rsquo;d like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OS-level actions&lt;/li&gt;
&lt;li&gt;Per-application actions&lt;/li&gt;
&lt;li&gt;Per-website actions&lt;/li&gt;
&lt;li&gt;Computer vision guided actions&lt;/li&gt;
&lt;li&gt;Natural language action specification&lt;/li&gt;
&lt;li&gt;Automatic action discovery&lt;/li&gt;
&lt;li&gt;Automatic automation extraction&lt;/li&gt;
&lt;li&gt;User-triggered, event-triggered and time-triggered automations&lt;/li&gt;
&lt;li&gt;A great sharing experience&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;os-level-actions&#34;&gt;OS-level actions&lt;/h4&gt;
&lt;p&gt;Browserflow is (appropriately) limited in scope.
It allows automating the Browser, and that&amp;rsquo;s it.
I would like to be able to use a Browserflow-like system to automate the Browser as well as everything else on my computer.
In the idealized hypothetical future I&amp;rsquo;m constructing here, I don&amp;rsquo;t need to think about the boundaries between applications and operating system when I construct an automation.&lt;/p&gt;
&lt;p&gt;Example OS-level actions include launching applications, switching between open windows of different applications, closing applications, switching between Desktops, and resizing windows.&lt;/p&gt;
&lt;p&gt;Mac&amp;rsquo;s Automator software is a good example of an automation tool that supports OS-level actions, but (to my knowledge) it does not then also provide a good browser automation experience.&lt;/p&gt;
&lt;p&gt;An example automation that takes advantage of these actions is setting up a series of windows just the way I like them (today achievable with software like 
&lt;a href=&#34;https://manytricks.com/moom/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Moom&lt;/a&gt;).
Combined with per-application actions (next section), these actions allow for powerful multi-application automations.&lt;/p&gt;
&lt;h4 id=&#34;per-application-actions&#34;&gt;Per-application actions&lt;/h4&gt;
&lt;p&gt;The range of activities people perform on computers is extremely wide.
Each application has different actions that are possible to take in it.
I would like for automation software to reflect this.&lt;/p&gt;
&lt;p&gt;Photo editing applications can provide actions for photo editing,
word processing applications should have their own domain-specific actions,
and gaming and music applications should similarly provide their own.&lt;/p&gt;
&lt;p&gt;This is somewhat reflected in the state of things today in Automator.
For some software, there are actions available allowing programmatic control of the application.
Today, these actions must be provided by the application developer.&lt;/p&gt;
&lt;p&gt;We should go beyond this; ordinary users should be able to make actions for a piece of software and share them with other users of that software.
The actions provided by the application developer that Automator can access today are often insufficient.
But developing a new action does not need to be a difficult endeavor.&lt;/p&gt;
&lt;p&gt;An action developer should be able write a parameterized action that (1) verifies the application meets any preconditions necessary for performing the action, (2) uses menu items, buttons, the mouse and keyboard, and visual indicators (3) in order to perform a sequence of sub-actions in the application to achieve the action&amp;rsquo;s overall intended behavior.
Sharing these actions with others who might use them in broader automations should be possible on GitHub or through any other means (e.g. an actions repository or actions store, for example, either of which would allow browsing actions by application.)&lt;/p&gt;
&lt;p&gt;Critically, I would like these OS-level and application-level actions to be available in the same software as the browser-level and website-level actions that a tool like Browserflow provides.&lt;/p&gt;
&lt;p&gt;Much of my computer activity happens in the browser, text editor, and the terminal. If this trend away from desktop applications toward browser-usage is taking place for everyone, OS-level and application-level actions may be less important than what we discuss next: per-website actions, vision-based actions, and automatic action discovery.&lt;/p&gt;
&lt;h4 id=&#34;per-website-actions&#34;&gt;Per-website actions&lt;/h4&gt;
&lt;p&gt;Some applications, particularly browsers, do not have a clear fixed set of actions that make sense, because they can render many websites.
Each website has different things you can do on it.&lt;/p&gt;
&lt;p&gt;So, similar to the per-application actions proposed in the previous section,
I&amp;rsquo;d also like to call for per-website actions.
DK, consider this a Browserflow feature request.&lt;/p&gt;
&lt;p&gt;In Browserflow, a user can define a flow and call that flow from another flow.
This isn&amp;rsquo;t the most well-developed feature of Browserflow;
developing and debugging flows like this requires a lot of clicking around, and it&amp;rsquo;s hard to see what you&amp;rsquo;re doing during development.
Nevertheless, it&amp;rsquo;s a powerful feature that is the seed of per-website actions.&lt;/p&gt;
&lt;p&gt;That you can use a flow as an action in Browserflow means you can define flows
for individual activities you might perform on a website, and use them repeatedly in many different flows pertaining to that website.
Browserflow also allows sharing flows, but there&amp;rsquo;s no central repository of them yet, so it is taking solid but small steps toward the dream of user-friendly discoverable per-website actions.&lt;/p&gt;
&lt;p&gt;Since every website has different actions to perform on it, and website authors do not provide these actions,
it is somewhat surprising that browser automation leads the automation scene in terms of its capabilities. The saving grace here is that websites conform to standards and expose structure that automation software can take advantage of, which desktop applications do not provide. Browser automation software uses CSS and XPATH selectors to take advantage of this uniformity to provide a decent automation experience.
For desktop software, or for websites that are not built in a tool-friendly manner, we turn to our next feature-request for automation software, vision-guided actions.&lt;/p&gt;
&lt;h4 id=&#34;computer-vision-guided-actions&#34;&gt;Computer vision guided actions&lt;/h4&gt;
&lt;p&gt;All the actions in automation software today operate on clearly defined data structures, but there is so much more that&amp;rsquo;s possible using computer vision.
Actions that work on websites rely on CSS or XPATH queries to find the appropriate part of the page to manipulate.
Computer vision based actions can work in places where there is no DOM, and hence no notion of CSS or XPATH selectors.&lt;/p&gt;
&lt;p&gt;An example of a computer vision based action is &amp;ldquo;Find the text X&amp;rdquo;. Here, X is a parameter. When run, the action identifies the location of the screen containing the text X. The beauty is that X doesn&amp;rsquo;t need to be on a webpage or in a text field. Even if X is stylized, part of a pdf, or part of an image, the action will still work. This action can be followed up with &amp;ldquo;Click&amp;rdquo; or &amp;ldquo;Screenshot&amp;rdquo; actions, that use the location found from the &amp;ldquo;Find the text X&amp;rdquo; action as a parameter.&lt;/p&gt;
&lt;p&gt;Another example of a computer vision based action is &amp;ldquo;Find a region visually similar to X&amp;rdquo;. This action is parameterized by an image, and it finds the location of that image (or similar) on the screen. This might be useful for automating a game with a custom graphic that you have to interact with; it doesn&amp;rsquo;t matter if that game doesn&amp;rsquo;t provide any semantic elements like buttons or a DOM, the computer vision actions will still admit automation.&lt;/p&gt;
&lt;p&gt;I found computer vision guided actions useful when building 
&lt;a href=&#34;https://github.com/dbieber/ScrabbleBot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scrab Blebot&lt;/a&gt;, a Scrabble-playing bot that could play Words With Friends on Facebook.
The bot looked for regions of the screen visually similar to an image of a Scrabble tile with a letter on it in order to figure out where to click and drag.
I had to build my own one-off actions for this project though; there was no automation software with vision-based actions available for me to use when developing this project ten (!) years ago.&lt;/p&gt;
&lt;h4 id=&#34;natural-language-action-specification&#34;&gt;Natural language action specification&lt;/h4&gt;
&lt;p&gt;&amp;ldquo;Click the submit button.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Copy the first paragraph.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;So far we have only spoken about allowing developers to define actions. In the next section we will move on to automatic action discovery &amp;ndash; where an action is detected and defined automatically by an algorithm, rather than being defined by a human.
Natural language action specification fits nicely in between these two categories.
The idea here is that we can map human natural language to an action.&lt;/p&gt;
&lt;p&gt;If the user says &amp;ldquo;Click the submit button&amp;rdquo;, we can use machine learning to infer that this translates to a single action &amp;ldquo;Click&amp;rdquo; parameterized by the selector &amp;ldquo;.submit&amp;rdquo; (or whatever the appropriate selector is for the current page).&lt;/p&gt;
&lt;p&gt;If the user says &amp;ldquo;Copy the first paragraph&amp;rdquo;, again machine learning can translate this into one or more actions that achieves the task.
Large language models will be instrumental in making this feature production quality. See for example the 
&lt;a href=&#34;https://www.youtube.com/watch?v=SGUCcjHTmGY&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Codex demo&lt;/a&gt; for a taste of the capabilities of large language models in this domain.&lt;/p&gt;
&lt;h4 id=&#34;automatic-action-discovery&#34;&gt;Automatic action discovery&lt;/h4&gt;
&lt;p&gt;We next move on to a research-level feature request: automatic action discovery.
There are billions of websites and software applications, each with its own user interface and its own set of possible actions.
It&amp;rsquo;s unreasonable to expect that a developer will construct actions for each and every one of these, but that doesn&amp;rsquo;t mean we can&amp;rsquo;t use machine learning to detect actions automatically.&lt;/p&gt;
&lt;p&gt;There are two types of signal that are useful for automatically detecting actions: (1) similarity in user interface to known actions, and (2) observing user behavior.&lt;/p&gt;
&lt;p&gt;(1) Though each website and application has its own UI, there are common patterns. Taking advantage of these common patterns, an algorithm might be able to discern that a website or application provides certain actions simply from its UI elements and arrangement.&lt;/p&gt;
&lt;p&gt;(2) By observing user behavior on a website or application (and comparing it with behaviors exhibited previously), an algorithm might be able to detect actions available on that website or application even when method (1) falls short (or in combination with method (1)).&lt;/p&gt;
&lt;p&gt;Critical to doing automatic action discovery well is figuring out how to parameterize the discovered actions.
In many cases this is easy; when filling out a form on a website, the text typed is the parameter, while the location in the form is a core part of the action.
In other cases, it&amp;rsquo;s less clear cut; in a shell, typing a command is part of an action, while typing an argument to the command is a parameter, but these are comprised of similar low-level actions (typing characters).
This is an interesting research challenge to get right.&lt;/p&gt;
&lt;h4 id=&#34;automatic-automation-extraction&#34;&gt;Automatic automation extraction&lt;/h4&gt;
&lt;p&gt;The pièce de résistance of future automation software is automatic automation extraction.
Software will one day automatically notice when something you&amp;rsquo;re doing can be automated, and it will offer to automate it for you.
It might notice this because (1) you&amp;rsquo;re engaging in a repeated behavior.
Or it might notice this because (2) you&amp;rsquo;re engaging in a behavior similar to one it&amp;rsquo;s seen before (e.g. from data collected from other users earlier).&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s important that anyone working on automatic automation extraction respect user privacy.
The data that would be most useful for this type of project (broad computer usage data) is extremely sensitive.
It is an interesting research direction to work toward this goal of automatic automation extraction in a way that consumes little data, and which can be deployed in a privacy preserving manner.&lt;/p&gt;
&lt;h4 id=&#34;user-triggered-event-triggered-and-time-triggered-automations&#34;&gt;User-triggered, event-triggered and time-triggered automations&lt;/h4&gt;
&lt;p&gt;I conclude with a more modest request than the previous two machine learning based feature requests: triggers.&lt;/p&gt;
&lt;p&gt;As I see it, a good trigger experience is what makes or breaks the value of automation software. This is because the triggers are the largest potential source of friction for a user of automations, outside of constructing the automation to begin with.&lt;/p&gt;
&lt;p&gt;For user-triggered automations (automations instigated by a user),
I really liked the typeahead UI that Browserflow initially used.
I remain hopeful that DK will bring that back.
Keyboard shortcuts are the other clear contender for a good triggering experience.&lt;/p&gt;
&lt;p&gt;Event-triggered automations are also extremely useful.
In my own day-to-day, I use email triggered automations (for handling emails from banks), and chat-triggered automations for all sorts of things.
If-this-than-that is probably an excellent source of inspiration for other events. You can also see 
&lt;a href=&#34;https://davidbieber.com/snippets/2020-02-04-bieber-bot-capabilities/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this list of Bieber Bot&amp;rsquo;s capabilities&lt;/a&gt; which breaks the capabilities down by whether they&amp;rsquo;re timer-triggered, chat-triggered, or credit-card-swipe-triggered.&lt;/p&gt;
&lt;p&gt;Time-triggered automations can be broken down further into one-off automations (e.g. &amp;ldquo;send this email tomorrow morning&amp;rdquo;) and recurring ones (&amp;ldquo;every morning, email me a digest with the news, weather, and a cat video to watch&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Triggers don&amp;rsquo;t need to be provided directly by the same software that allows creating automations, but it is sensible to bundle these two things together, since automations are a common thing to want to trigger. Separate trigger software and automation software is in many ways actually desirable, but it is critical that the experience of setting up triggers for an automation be clean and user friendly.&lt;/p&gt;
&lt;h4 id=&#34;a-great-sharing-experience&#34;&gt;A great sharing experience&lt;/h4&gt;
&lt;p&gt;Finally, automation is a superpower, and so I want to be able to share it with others.
If I write a note-taking automation, I want my fellow note-takers to be able to use it.
If someone writes a Farmville automation tool, other Farmville players should be able to use it too.&lt;/p&gt;
&lt;p&gt;However, sharing comes with concerns: you don&amp;rsquo;t want to give untrustworthy strangers unfettered access to your machine. Arbitrary code execution is dangerous.&lt;/p&gt;
&lt;p&gt;So, my ideal sharing experience is a hybrid of &amp;ldquo;app store&amp;rdquo; and &amp;ldquo;GitHub&amp;rdquo;.
A curated collection of automations that are audited and trustworthy, easy to search, and easy to discover would be very welcome. If automations from this collection were automatically surfaced when I was browsing on a website that had such an automation built for it, I would be delighted.&lt;/p&gt;
&lt;p&gt;Then, for automations that haven&amp;rsquo;t gone through any vetting process, it should still be easy to share. It should be possible to host an automation on GitHub or to send an automation to a friend without ever needing a central body to vet the automation.&lt;/p&gt;
&lt;p&gt;By supporting both of these sharing models, we can ensure a healthy ecosystem of automations
useful both for programmers and automation builders, and for people who simply want to experience the joy of computing using the automations of others.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Interested in working on any of these aspects of automation software? Get in touch. I&amp;rsquo;m always eager to discuss.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Draft Instructions for Flashcard Collection Task</title>
      <link>https://davidbieber.com/snippets/2021-11-23-flashcard-collection-task/</link>
      <pubDate>Tue, 23 Nov 2021 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-11-23-flashcard-collection-task/</guid>
      <description>&lt;p&gt;Hello! This is a draft of instructions I intend to send out to volunteers for the contextual flashcard dataset collection project.
I would love your feedback on the instructions before I send them out more widely.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Welcome to the Contextual Flashcard Dataset Project.
Thank you for volunteering!
By working together, we are assembling a dataset of thousands of in-context flashcards
to help evaluate and improve future automatic flashcard generation projects.&lt;/p&gt;
&lt;p&gt;To get started, install the Browserflow extension and the flow:
&lt;a href=&#34;https://browserflow.app/shared/1b2b5231-5f96-4f73-87a6-006626fa3831&#34;&gt;https://browserflow.app/shared/1b2b5231-5f96-4f73-87a6-006626fa3831&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Your help is requested in creating flashcards to populate the dataset.
Please submit between 5 and 200 flashcards that you believe would be useful or interesting to you.
The flow above will assist you in submitting flashcards to the dataset.&lt;/p&gt;
&lt;p&gt;To submit a flashcard for the dataset:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Browse the web as normal.&lt;/li&gt;
&lt;li&gt;Select some text you consider important.&lt;/li&gt;
&lt;li&gt;Run the 
&lt;a href=&#34;https://browserflow.app/shared/1b2b5231-5f96-4f73-87a6-006626fa3831&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Create Flashcard Entry flow&lt;/a&gt;; it will open the Create Flashcard Entry form and pre-populate it for you.&lt;/li&gt;
&lt;li&gt;Make any desired changes to the &amp;ldquo;Flashcard Front&amp;rdquo; and &amp;ldquo;Flashcard Back&amp;rdquo; fields in the Create Flashcard Entry form.&lt;/li&gt;
&lt;li&gt;Submit the form.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In lieu of using Browserflow, you may also submit 
&lt;a href=&#34;https://forms.gle/vTNWReM6qeEwX6GDA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the data entry form&lt;/a&gt; manually.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;how-will-the-data-be-used&#34;&gt;How will the data be used?&lt;/h3&gt;
&lt;p&gt;The dataset will be cleaned. Personal information or offensive language will be removed. The resulting dataset will be made public for anyone to use.&lt;/p&gt;
&lt;h3 id=&#34;when-are-submissions-open&#34;&gt;When are submissions open?&lt;/h3&gt;
&lt;p&gt;We will begin collecting submissions on December 1, 2021, and leave submissions open for 2 months, closing submissions on January 31, 2022.&lt;/p&gt;
&lt;h3 id=&#34;what-flashcards-should-i-submit&#34;&gt;What flashcards should I submit?&lt;/h3&gt;
&lt;p&gt;That&amp;rsquo;s up to you! Still asking? Here&amp;rsquo;s some guidance:&lt;/p&gt;
&lt;p&gt;Submit any flashcards that you would (1) find personally interesting or useful, and (2) only contain public information.&lt;/p&gt;
&lt;p&gt;Interesting facts from Wikipedia or articles you read online are a good idea.
Private information about close friends is not.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Save my spot! Finer-grained bookmarks for incremental reading</title>
      <link>https://davidbieber.com/snippets/2021-11-20-save-my-spot/</link>
      <pubDate>Sat, 20 Nov 2021 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-11-20-save-my-spot/</guid>
      <description>&lt;p&gt;When I find articles on the web, often I only read a small portion of an article before browsing away.
Instead of giving up on the article, I would like to leave a little visual marker on the page indicating the part of the page that I reached.
I&amp;rsquo;d then also like to automatically add a link to this marker to my notes.
So, if I&amp;rsquo;m ever reviewing my notes, I&amp;rsquo;ll be able to jump right back into the article where I left off.&lt;/p&gt;
&lt;p&gt;If I later continue reading the article, I&amp;rsquo;d like to move the marker to whatever spot I reach. (It&amp;rsquo;s OK if the old links keep linking to the old location, but I want a new link to whatever spot I&amp;rsquo;ve reached.)&lt;/p&gt;
&lt;p&gt;I think this should be possible to build with Browserflow. Let&amp;rsquo;s consider how.
I think I would do this with two flows, one to save my spot on a page (and add it to my notes),
and a second flow to restore to that spot on the page from the link in my notes.&lt;/p&gt;
&lt;p&gt;The biggest decision is how to represent a spot on a page. One option is the scroll position. Another option would be to remember a unique element id. Both approaches have drawbacks. Using scroll position doesn&amp;rsquo;t work well with dynamic content. Element ids aren&amp;rsquo;t guaranteed to be unique. I am leaning toward the scroll position approach to start, and then I&amp;rsquo;ll see how fragile it is. Even though it isn&amp;rsquo;t perfect, it will work in most situations.&lt;/p&gt;
&lt;p&gt;When I run the first flow, it will grab the URL of the current page and the current scroll position, and it will write that into my notes. This requires changing tabs, which is easy to do with Browserflow, but not easy to do with a standard JavaScript script. That flow will be run on the website where I am reading the article.&lt;/p&gt;
&lt;p&gt;The other flow will be run while I&amp;rsquo;m reading my notes. It would be great if just clicking on a link in my notes could trigger this flow and take me to the correct spot in the article, but this isn&amp;rsquo;t possible (by default) with Browserflow today. One way to work around this limitation of Browserflow is to write an always-on flow that listens for when I&amp;rsquo;ve clicked the link. Unfortunately, always-on flows are not great with Browserflow&amp;rsquo;s pricing plans.&lt;/p&gt;
&lt;p&gt;When I run the flow to restore my spot in an old article, the flow will first open a new tab to that article&amp;rsquo;s webpage. Then it will scroll to the specified position. When the flow starts, it will first need a way to determine which of the links on the notes page to follow. With the current version of Browserflow that I have (0.72 I think), you can just click on the link to specify this. This option is removed unfortunately in the latest version of Browserflow. Instead, we can probably use a clever selector to select the user-selected link. This should work in later Browserflow versions.&lt;/p&gt;
&lt;p&gt;Once these two flows are implemented, saving and loading my point in an article to and from my notes will become much easier. The next improvement will be adding in a bit of visual flourish (e.g. a visual marker in the article to draw my eye to where I left off). Certainly a smoother UX is feasible than the one I&amp;rsquo;ve planned here, but I think this Browserflow prototype hits a sweet spot of quality-to-effort ratio, and will be a satisfying prototype to build and use for myself.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GPT-3 for Spaced Repetition</title>
      <link>https://davidbieber.com/snippets/2021-09-08-gpt-3-for-spaced-repetition/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-09-08-gpt-3-for-spaced-repetition/</guid>
      <description>&lt;p&gt;Lately I&amp;rsquo;ve been using Browserflow to create spaced repetition flashcards quickly while browsing the internet.&lt;/p&gt;
&lt;p&gt;To create a card, I highlight a bit of text and press &amp;ldquo;c&amp;rdquo;. This copies the sentence containing the highlight into the card, with the part I highlighted masked out.
It&amp;rsquo;s a cloze task, as in a masked language model.
If instead I push &amp;ldquo;b&amp;rdquo;, it copies the full paragraph containing the highlight, again with the highlight masked out.&lt;/p&gt;
&lt;p&gt;Usually this is a great way to quickly create my flashcards. However, sometimes I get sentences where the subject is unclear without context, e.g. &amp;ldquo;this&amp;rdquo; in &amp;ldquo;Usually this is a great way to quickly create the flashcards.&amp;rdquo; For these, it would be great to automatically rewrite the sentence with the subject pulled in from the surrounding context.&lt;/p&gt;
&lt;p&gt;For example, &amp;ldquo;Usually this is a great way to quickly create the flashcards&amp;rdquo; could be rewritten as &amp;ldquo;Usually &lt;mark&gt;using &amp;ldquo;b&amp;rdquo; and &amp;ldquo;c&amp;rdquo; with Browserflow&lt;/mark&gt; is a great way to quickly create the flashcards.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;As a second example, consider this 
&lt;a href=&#34;http://hyperphysics.phy-astr.gsu.edu/hbase/Solar/meteor.html#c3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HyperPhysics page on the Murchison Meteorite&lt;/a&gt;. Speaking about the Murchison Meteorite, the page says &amp;ldquo;Seventy four amino acids were found in it, compared to the 20 which are characteristic of life.&amp;rdquo; I&amp;rsquo;d love to make a card saying &amp;ldquo;Seventy four &lt;mark&gt;amino acids&lt;/mark&gt; were found in the Murchison Meteorite, compared to the 20 which are characteristic of life.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;However, if I highlight &lt;mark&gt;amino acids&lt;/mark&gt; and press &amp;ldquo;c&amp;rdquo;, the generated card instead reads: &amp;ldquo;Seventy four &lt;mark&gt;amino acids&lt;/mark&gt; were found in &lt;em&gt;it&lt;/em&gt;, compared to the 20 which are characteristic of life.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;So, the challenge I present you with is: write a program that takes a sentence, and it&amp;rsquo;s surrounding context, and rewrites the sentence so that it is clear even out of context.&lt;/p&gt;
&lt;p&gt;Having played with GPT-3 and Codex recently, this seems well within the scope of large pretrained language models. I expect that with some careful prompting, a large language model could excel at this task without even any fine-tuning, just taking advantage of few shot learning. Is this the best or simplest approach? Likely it isn&amp;rsquo;t, but it may be the approach that minimizes development time and is easiest to repurpose for other similar (or dissimilar) projects in the future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Browserflow Note-taking Flow</title>
      <link>https://davidbieber.com/snippets/2021-07-29-note-taking-flow/</link>
      <pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-07-29-note-taking-flow/</guid>
      <description>&lt;p&gt;Quick update on the note-taking Browserflow flow I&amp;rsquo;ve been building: 
&lt;a href=&#34;https://browserflow.app/shared/51b5b7af-3124-4989-9771-36e9f236e1e7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://browserflow.app/shared/51b5b7af-3124-4989-9771-36e9f236e1e7&lt;/a&gt;:&lt;/p&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How it works&lt;/h2&gt;
&lt;p&gt;When you run it, it injects some js into the page you&amp;rsquo;re viewing enabling a handful of keyboard shortcuts to enable clipping text into Roam from anywhere on the web.&lt;/p&gt;
&lt;p&gt;If you navigate to a new page, it will run that js on the new page. So it keeps the keyboard shortcuts active even if you follow links.&lt;/p&gt;
&lt;p&gt;It also removes the status overlay, so you can interact with the page more easily.&lt;/p&gt;
&lt;h2 id=&#34;the-keyboard-shortcuts-currently-are&#34;&gt;The keyboard shortcuts currently are:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enter&lt;/code&gt;: saves the current selection as a note to Roam&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q, !, @, *, &amp;gt;&lt;/code&gt;: saves the current selection as a note to Roam tagged as a {question, &amp;ldquo;Wow&amp;rdquo;, Share, key idea, or block quote} (I don&amp;rsquo;t really use these)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt;: saves the paragraph containing the selection to Roam, with the selection highlighted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt;: Asks for an element in browserflow. Saves a screenshot of the element to Roam. Doesn&amp;rsquo;t work. (hmm&amp;hellip; why not?)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;: saves the sentence containing the selection to Roam, with the selection highlighted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt;: saves the sentence containing the selection to Roam as a &amp;ldquo;cloze&amp;rdquo; (fill-in-the-blank) task for spaced repetition, with the selection as the fill-in-the-blank&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;: (big cloze) saves the paragraph containing the selection to Roam as a &amp;ldquo;cloze&amp;rdquo; (fill-in-the-blank) task for spaced repetition, with the selection as the fill-in-the-blank&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt;: quit (I use this to reenable keyboard shortcuts for tab switching)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;some-feature-requests--debug-things&#34;&gt;Some feature requests / debug things&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Would be nice to keep some status indicator, just in the corner or page title instead of blocking the full page.&lt;/li&gt;
&lt;li&gt;It depends on a couple other flows. Would be nice to be able to share just a single link.&lt;/li&gt;
&lt;li&gt;It switches to the roamresearch.com tab and back whenever you save a note. Would be nice if this worked even if roam were in a different window. The user shouldn&amp;rsquo;t have to care about exactly where roam is open.&lt;/li&gt;
&lt;li&gt;Why doesn&amp;rsquo;t the element screenshotting work?&lt;/li&gt;
&lt;li&gt;Would be nice to allow tab switching in a flow without having to quit the flow.&lt;/li&gt;
&lt;li&gt;For a note-taking flow like this, it can easily be running for hours. Doesn&amp;rsquo;t mix super well with the free tier of billing.&lt;/li&gt;
&lt;li&gt;A few of these could be solved with an &amp;ldquo;Enable interaction with page&amp;rdquo; action&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-dependency-flows-needed-to-check-it-out-are&#34;&gt;The dependency flows needed to check it out are:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://browserflow.app/shared/ba6eb2f0-a3d1-4bc3-9f21-5ca18af0b247&#34;&gt;https://browserflow.app/shared/ba6eb2f0-a3d1-4bc3-9f21-5ca18af0b247&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://browserflow.app/shared/486ef3eb-8d2b-48bf-8fee-22963dc74b88&#34;&gt;https://browserflow.app/shared/486ef3eb-8d2b-48bf-8fee-22963dc74b88&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://browserflow.app/shared/8e066128-2f87-468f-842f-3f006f0a2e71&#34;&gt;https://browserflow.app/shared/8e066128-2f87-468f-842f-3f006f0a2e71&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To try out the flow, you&amp;rsquo;ll need Browserflow, an open Roam tab, and all four flows linked in this snippet. Run the first flow (&amp;ldquo;Roam: Highlights&amp;rdquo;) on a web page (with Roam open in a different tab in the same window). Highlight some text, (say, the words &amp;ldquo;some text&amp;rdquo; in this sentence), and hit enter. You can try any of the shortcuts listed above. Notice as the flow copies your selection into your daily notes organized by time and website.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Browserflow is live!</title>
      <link>https://davidbieber.com/snippets/2021-06-17-browserflow-is-live/</link>
      <pubDate>Thu, 17 Jun 2021 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-06-17-browserflow-is-live/</guid>
      <description>&lt;p&gt;Browserflow is live! Beyond exciting!&lt;/p&gt;
&lt;p&gt;Congratulations to DK on the launch. For those not familiar, Browserflow is a simple low/no-code browser automation chrome extension that DK&amp;rsquo;s been diligently working on for over a year (read his journey over at 
&lt;a href=&#34;https://roadtoramen.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;roadtoramen.com&lt;/a&gt;; he&amp;rsquo;s an excellent writer!). You can automate anything in the browser with it, and it comes with a nice typeahead for launching flows from anywhere, as well as a Browserflow Cloud service that lets you schedule your flows to run in the cloud.&lt;/p&gt;
&lt;p&gt;My favorite use cases for Browserflow are note-taking. Run a flow and then everything you highlight gets copied into Roam. Change the flow a little, and you can use keyboard shortcuts to control how the notes get organized.&lt;/p&gt;
&lt;p&gt;Other people use flows for scraping info off Twitter, or lead generation, or monitoring stock prices. It&amp;rsquo;s a super general purpose tool. There are so many things you can do with it; it really has so much potential.&lt;/p&gt;
&lt;p&gt;Web scraping and browser automation aren&amp;rsquo;t new of course, so what makes Browserflow special? It&amp;rsquo;s got craftsmanship. Browserflow is super easy to use, and it feels good to use all the while. DK has really paid close attention to the details to make it work well.&lt;/p&gt;
&lt;p&gt;Take scraping Twitter, for example. In Browserflow, writing a for loop over all the Tweets on a timeline is trivial. If you were to attempt that with an alternative like Tampermonkey or Selenium, it would be considerably more difficult. You&amp;rsquo;d need to think about how the DOM is changing as you scroll, and which tweets you&amp;rsquo;ve already considered. Browserflow takes care of the details for you so you can focus on writing the logic that matters to you.&lt;/p&gt;
&lt;p&gt;Give it a try today at 
&lt;a href=&#34;https://browserflow.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browserflow.app&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making a Browserflow Flow for Eleven Table Tennis VR</title>
      <link>https://davidbieber.com/snippets/2021-05-01-table-tennis-flow/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-05-01-table-tennis-flow/</guid>
      <description>&lt;p&gt;In this snippet I chronicle making a Cloud flow that tracks my progress in Eleven Table Tennis VR, a virtual reality table tennis game I&amp;rsquo;ve been playing a bunch over the last month.&lt;/p&gt;
&lt;p&gt;I took a first pass at making the flow earlier in the week, and ran into two hiccups I&amp;rsquo;ll need to work around: (1) The css selectors for my ELO, Rank, etc change between visits to the website. How am I going to extract this data in the flow? (2) Some games have three rounds others have two, and the css selectors differ depending on which game we&amp;rsquo;re looking at.&lt;/p&gt;
&lt;h2 id=&#34;challenge-1-stable-css-selectors-across-page-loads&#34;&gt;Challenge 1: Stable CSS Selectors Across Page Loads&lt;/h2&gt;
&lt;p&gt;Browserflow&amp;rsquo;s default CSS selector for the ELO rate on 
&lt;a href=&#34;https://www.elevenvr.net/eleven/413682&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my Eleven TT page&lt;/a&gt; is &lt;code&gt;div:nth-of-type(1) &amp;gt; .jss87 &amp;gt; .MuiTypography-root&lt;/code&gt;. The trouble with this is that the class .jss87 isn&amp;rsquo;t always there. Sometimes when I load the page, the class .jss70 is there instead. I don&amp;rsquo;t know how this class is determined, but it isn&amp;rsquo;t stable enough to use for my flow.&lt;/p&gt;
&lt;p&gt;With a bit of poking around, I was able to use an 
&lt;a href=&#34;https://css-tricks.com/almanac/selectors/n/nth-child/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;nth-child&lt;/code&gt; rule&lt;/a&gt; to write a more stable selector. Here&amp;rsquo;s what I came up with: &lt;code&gt;div.MuiGrid-container &amp;gt; .MuiPaper-root:nth-child(1) .MuiTypography-root&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With this new strategy in place, I can easily complete the first half of the flow (which I&amp;rsquo;ll probably actually split into two flows): regularly logging my Eleven Elo, Rank, Win and Loss count, and Win rate into a spreadsheet automatically.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what the completed flow looks like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://davidbieber.com/snippets/2021-05-01-table-tennis-flow.png&#34; alt=&#34;Complete table tennis ranking tracker flow&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;challenge-2-varying-css-selectors-across-rows&#34;&gt;Challenge 2: Varying CSS Selectors Across Rows&lt;/h2&gt;
&lt;p&gt;Next up I have the challenge of selecting game data from the 
&lt;a href=&#34;https://www.elevenvr.net/eleven/413682&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;same page&lt;/a&gt;. Browserflow makes it easy to loop over the match data with its Loop Elements command. The trouble is that some matches have three rounds while others have just two.&lt;/p&gt;
&lt;p&gt;The default CSS selects for the game data are e.g. &lt;code&gt;$match tr:nth-of-type(1) &amp;gt; td:nth-of-type(3)&lt;/code&gt; for the Match Score. Two of the columns: &amp;ldquo;ELO +-&amp;rdquo; and &amp;ldquo;Round 3&amp;rdquo; only show up in certain matches. &amp;ldquo;ELO +-&amp;rdquo; only shows up for ranked matches, and &amp;ldquo;Round 3&amp;rdquo; only shows up if the first two matches are split between the players.&lt;/p&gt;
&lt;p&gt;I expect that in rare cases there are matches with only 1 round (e.g. because a player leaves early), and that in the future there might be matches with additional rounds too.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; elements themselves don&amp;rsquo;t contain any additional information indicating what column they belong to. I might have to take this slightly painstaking approach:&lt;/p&gt;
&lt;p&gt;First, I&amp;rsquo;ll use &lt;code&gt;Get Element Text&lt;/code&gt; to get the text of the first six column headers, and I&amp;rsquo;ll have it use blank text if there are fewer than six headers. In some cases these will be USERNAME, ELO +-, MATCH SCORE, ROUND 1, ROUND 2, ROUND 3. In other cases it will just be a subset of this information.&lt;/p&gt;
&lt;p&gt;Then, for each player I&amp;rsquo;ll get the first six entries in their row. I&amp;rsquo;ll use the headers to determine what these entries describe.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Brief programming interlude&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve done it. Here&amp;rsquo;s the completed flow. It works like a charm.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://davidbieber.com/snippets/2021-05-01-table-tennis-spreadsheet.png&#34; alt=&#34;Complete table tennis games flow with collected data&#34;&gt;&lt;/p&gt;
&lt;p&gt;I had to make 19 &lt;code&gt;Get Element Text&lt;/code&gt; actions and a &lt;code&gt;Run Script&lt;/code&gt;, even though I only needed data from 13 different elements. Collecting tabular data is a pretty common task, so there&amp;rsquo;s room to make this simpler for future flows.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the script I ended up writing for populating fields based on the header data, just for reference:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let $player1 = $row1field1;
let $player2 = $row2field1;

let $elo1 = &amp;quot;&amp;quot;;
let $elo2 = &amp;quot;&amp;quot;;
let $elo1change = &amp;quot;&amp;quot;;
let $elo2change = &amp;quot;&amp;quot;;
let score_index = 1;

if ($header2 == &amp;quot;ELO +-&amp;quot;) {
  let elo1 = $row1field2;
  let elo2 = $row2field2;
  $elo1 = elo1.split(&amp;quot; &amp;quot;)[0];
  $elo2 = elo2.split(&amp;quot; &amp;quot;)[0];
  let elo1change = elo1.split(&amp;quot; &amp;quot;)[1];
  let elo2change = elo2.split(&amp;quot; &amp;quot;)[1];
  // Remove the parentheses (+16) -&amp;gt; +16.
  $elo1change = elo1change.substring(1, elo1change.length - 1);
  $elo2change = elo2change.substring(1, elo2change.length - 1);
  score_index = 2;
}

var row1fields = [
  $row1field1,
  $row1field2,
  $row1field3,
  $row1field4,
  $row1field5,
  $row1field6,
];
var row2fields = [
  $row2field1,
  $row2field2,
  $row2field3,
  $row2field4,
  $row2field5,
  $row2field6,
];

var $matchscore1 = row1fields[score_index];
var $matchscore2 = row2fields[score_index];
var $round1player1 = row1fields[score_index + 1];
var $round1player2 = row2fields[score_index + 1];
var $round2player1 = row1fields[score_index + 2];
var $round2player2 = row2fields[score_index + 2];
var $round3player1 = row1fields[score_index + 3];
var $round3player2 = row2fields[score_index + 3];

var gameidanddate_parts = $gameidanddate.split(&amp;quot; : &amp;quot;, 2);
let $gameid = gameidanddate_parts[0];
// TODO(dbieber): Parse timestamp.
let $timestamp = gameidanddate_parts[1];

// formatDate definition elided.
let $today = formatDate(new Date());
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;future-challenge-record-every-game-exactly-once&#34;&gt;Future Challenge: Record every game exactly once&lt;/h2&gt;
&lt;p&gt;The current instance of the flow just collects all the games on page 1 into the spreadsheet. What I&amp;rsquo;d really like the flow to do is collect every game once.
My flow will run once a day.&lt;/p&gt;
&lt;p&gt;I could do this by parsing the dates, and having the flow collect all the flows less than one day old each time it runs. This wouldn&amp;rsquo;t be robust to missing a day though.&lt;/p&gt;
&lt;p&gt;Another approach would be to have the flow look in the spreadsheet for the last game collected, and then keep collecting games until that most recently collected game is reached. I&amp;rsquo;ll discuss these options with DK before proceeding. For now, it&amp;rsquo;ll just collect a subset of my games, or collect some games twice if I play fewer than 10 on some day.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;You can find the flows 
&lt;a href=&#34;https://browserflow.app/shared/4a8c4303-ad21-420e-8414-5de57e0692d4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; and 
&lt;a href=&#34;https://browserflow.app/shared/4e3fd160-6665-46b7-ad2b-0a6be9121649&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; if you have Browserflow.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two more Browserflow flows for Roam Research</title>
      <link>https://davidbieber.com/snippets/2021-02-13-flows-for-roam-research/</link>
      <pubDate>Sat, 13 Feb 2021 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-02-13-flows-for-roam-research/</guid>
      <description>&lt;p&gt;I wrote three Browserflow flows for Roam Research today. None of them took me more than 20-30 minutes to write. The first one was for saving the current webpage to Roam. I 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-02-13-saving-urls-to-roam-with-browserflow/&#34;&gt;wrote about that flow here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next flow I wrote is for saving any link you click on to Roam. The idea behind this flow is to prevent doing depth first exploration of the web. Better to look at a bunch of links and then later choose the most interesting, than to dive head first into the first link you click on.&lt;/p&gt;
&lt;p&gt;Video of that flow here:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/KMxnws2Laww&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;And then I also wrote a flow for saving highlights from any web page to Roam. You can see that flow in action here:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MaV0GP4sZoM&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;In this flow, whenever I press enter the text I&amp;rsquo;ve highlighted is saved to my Roam Research Daily Notes page.&lt;/p&gt;
&lt;p&gt;Links to all the flows are in the video descriptions. Browserflow is currently in private beta. Looks like in the short-term DK will likely ask 
&lt;a href=&#34;https://www.notion.so/dkthehuman/Day-404-Choosing-My-Users-2a6b2c9cfc194fd3b561c370a62c60d5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;$20&lt;/a&gt; for access to the private beta. You can join the waitlist at 
&lt;a href=&#34;https://browserflow.app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browserflow.app&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Saving URLs to Roam with Browserflow</title>
      <link>https://davidbieber.com/snippets/2021-02-13-saving-urls-to-roam-with-browserflow/</link>
      <pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-02-13-saving-urls-to-roam-with-browserflow/</guid>
      <description>&lt;p&gt;Using the 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-02-12-javascript-functions-for-inserting-blocks-in-roam/&#34;&gt;Roam JavaScript primitives I wrote yesterday&lt;/a&gt; it was extremely easy (less than 10 minutes, I think) to create a robust Browserflow flow for saving URLs to Roam Research.&lt;/p&gt;
&lt;p&gt;Now when I&amp;rsquo;m browsing the web, I can press cmd-J (Browserflow&amp;rsquo;s keyboard shortcut) and choose &amp;ldquo;Roam: Save URL&amp;rdquo; from the typeahead to save the current URL to my Roam Daily Notes page.&lt;/p&gt;
&lt;p&gt;If there&amp;rsquo;s not already a &amp;ldquo;Saved URLs:&amp;rdquo; block on daily notes, it makes it. Then it nests the URL beneath.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what the flow looks like in action:&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/ORpBuE4UYSA&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Here&amp;rsquo;s what the flow itself looks like:&lt;/p&gt;
&lt;img src=&#34;save-urls-flow.png&#34;/&gt;
&lt;p&gt;Notice there are really only two meaningful lines of code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let urls = await getOrCreateBlockOnPage($page, &#39;Saved URLs:&#39;, -1);
await createChildBlock(urls, $url)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first line creates the &amp;ldquo;Saved URLs:&amp;rdquo; block, but only if it doesn&amp;rsquo;t already exist. It returns the uid of that block. The second line saves the url. Nothing else to it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What does Browserflow do beyond what Tampermonkey does?</title>
      <link>https://davidbieber.com/snippets/2021-02-09-what-does-browserflow-do-beyond-what-tampermonkey-does/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-02-09-what-does-browserflow-do-beyond-what-tampermonkey-does/</guid>
      <description>&lt;p&gt;Someone recently asked me what 
&lt;a href=&#34;https://dkthehuman.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DK&lt;/a&gt;&amp;rsquo;s 
&lt;a href=&#34;http://browserflow.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Browserflow&lt;/a&gt; does beyond what e.g. 
&lt;a href=&#34;https://www.tampermonkey.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tampermonkey&lt;/a&gt; provides. Here&amp;rsquo;s my answer.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;1. &lt;em&gt;&lt;strong&gt;Way&lt;/strong&gt;&lt;/em&gt; easier to use both for programmers and non-programmers&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Allows recording macros or writing them as &amp;ldquo;flows&amp;rdquo;/programs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everything (okay, maybe not &lt;em&gt;everything&lt;/em&gt;) &amp;ldquo;just works&amp;rdquo; &amp;ndash; e.g. if you want to write a for loop over tweets on Twitter, you just do. No need to deal with handling scrolling, or with race conditions about when dom elements appear and disappear, or if twitter decides to reuse dom elements, etc. Browserflow takes care of those details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provides high level commands like taking screenshots of elements, writing to csv, selecting parts of a page, looping over elements, getting input from the user, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy to share flows with other users! Unfortunately there&amp;rsquo;s like ~2 other users right now 😛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The typeahead for running flows is super convenient. cmd-J then type a piece of the flow name, then hit enter. The flow runs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;Really it&amp;rsquo;s (3) that sets it apart. The attention to detail in the product is impressive. Thanks DK.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;My experience with Tampermonkey is limited, so take this with some salt. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>A Flow for Focused Reading</title>
      <link>https://davidbieber.com/snippets/2021-02-05-focused-reading/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-02-05-focused-reading/</guid>
      <description>&lt;p&gt;As you can see from the snippet you&amp;rsquo;re currently reading, I&amp;rsquo;ve implemented a simple tool to help with focused reading. (It&amp;rsquo;s 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-02-02-focused-reading-browserflow-flow-idea/&#34;&gt;the idea from the previous snippet&lt;/a&gt;). The majority of the page is dimmed, except for a few lines above and below your mouse cursor. As you move your mouse, the focused region follows. Give it a try; move your mouse (or touch) over the next paragraph, and watch as the light region follows.&lt;/p&gt;
&lt;p&gt;This is useful for staying focused when reading. If your eyes or mind wander while reading, it&amp;rsquo;s easy to quickly bring your attention back to exactly where you left off.&lt;/p&gt;
&lt;p&gt;For the 
&lt;a href=&#34;https://browserflow.app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Browserflow&lt;/a&gt; users among you (psst&amp;hellip; DK, you need to ship Browserflow so there &lt;em&gt;are&lt;/em&gt; Browserflow users out there), you can enable this effect on any page using 
&lt;a href=&#34;https://browserflow.app/shared/8c2f3de8-2666-4578-8b42-58f5cad105b0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this BrowserFlow flow I made&lt;/a&gt;. Once you get the flow you can simply type cmd-J and select &amp;ldquo;Focus Bar&amp;rdquo; from the typeahead to enable this effect anywhere.&lt;/p&gt;
&lt;p&gt;For everyone else, you can paste this script into your JavaScript console. 🤷&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var mouseY = 0;
var scrollY = 0;
var offset = 50;
var div_below, div_above;

div_below = document.createElement(&amp;quot;div&amp;quot;);
div_below.style.position = &amp;quot;absolute&amp;quot;;
div_below.style.left = &amp;quot;0px&amp;quot;;
div_below.style.top = &amp;quot;0px&amp;quot;;
div_below.style.width = &amp;quot;100%&amp;quot;;
div_below.style.height = &amp;quot;100%&amp;quot;;
div_below.style.background = &amp;quot;black&amp;quot;;
div_below.style.opacity = &amp;quot;30%&amp;quot;;

div_above = document.createElement(&amp;quot;div&amp;quot;);
div_above.style.position = &amp;quot;absolute&amp;quot;;
div_above.style.left = &amp;quot;0px&amp;quot;;
div_above.style.bottom = &amp;quot;0px&amp;quot;;
div_above.style.width = &amp;quot;100%&amp;quot;;
div_above.style.height = &amp;quot;100%&amp;quot;;
div_above.style.background = &amp;quot;black&amp;quot;;
div_above.style.opacity = &amp;quot;30%&amp;quot;;

document.body.appendChild(div_below);
document.body.appendChild(div_above);

function adjust_divs() {
  scrollY = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
  div_below.style.top = (mouseY + offset + scrollY) + &#39;px&#39;;
  div_above.style.bottom = (
      &#39;calc(100% - &#39; + (mouseY - offset + scrollY) + &#39;px&#39;);
  div_below.style.height = (
      &#39;calc(100% - &#39; + (mouseY + offset) + &#39;px&#39;);
}

document.addEventListener(&#39;mousemove&#39;, function(event) {
  mouseY = event.clientY;
  adjust_divs();
}, true);

document.addEventListener(&#39;scroll&#39;, function(event) {
  adjust_divs();
}, true);
document.addEventListener(&#39;touchstart&#39;, function(event) {
  mouseY = event.touches[0].clientY;
  adjust_divs();
}, true);
document.addEventListener(&#39;touchmove&#39;, function(event) {
  mouseY = event.touches[0].clientY;
  adjust_divs();
}, true);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sorry about the jitter. Let me know if you know how to fix it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Focused Reading Browserflow Flow Idea</title>
      <link>https://davidbieber.com/snippets/2021-02-02-focused-reading-browserflow-flow-idea/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-02-02-focused-reading-browserflow-flow-idea/</guid>
      <description>&lt;p&gt;This idea for an assistive technology for focused reading comes from 
&lt;a href=&#34;https://accessibe.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;accessiBe&lt;/a&gt;. I stumbled upon it on 
&lt;a href=&#34;https://www.tasteofhome.com/recipes/homemade-potato-chips/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tasteofhome.com&lt;/a&gt;. The idea is to make the web more accessible to folks with ADHD by dimming the part of the screen they&amp;rsquo;re not actively looking at.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a video of the accessiBe implementation in action on the tasteofhome.com website.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fplayground%2FbF12xbo8EB.gif?alt=media&amp;amp;token=d1cc35a1-8354-4859-9415-7a48e5283310&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the screen is dimmed everywhere except on the lines surrounding the mouse pointer. This helps me to regain focus more quickly if my attention is drawn away from the text I was reading.&lt;/p&gt;
&lt;p&gt;I find this way of reading helpful, and so I&amp;rsquo;m thinking about making it for myself as a Browserflow flow. It should be easy enough to do. When the flow starts, it just has to add two large transparent rectangles to the DOM, and an event handler to update their positions whenever my mouse moves.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll put up another snippet if and when I build this.&lt;/p&gt;
&lt;p&gt;Update Feb 5, 2021: As you may have noticed, I&amp;rsquo;ve now implemented this idea. It&amp;rsquo;s enabled on this page, and also available as a Browserflow flow. 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-02-05-focused-reading&#34;&gt;See the snippet here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spaced Repetition in Roam Research</title>
      <link>https://davidbieber.com/snippets/2021-01-02-spaced-repetition-in-roam-research/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-01-02-spaced-repetition-in-roam-research/</guid>
      <description>&lt;p&gt;There are many ways to do spaced repetition in Roam Research. This post describes mine. I was inspired to start this two months ago by reading 
&lt;a href=&#34;https://ncase.me/remember/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nicky Case&amp;rsquo;s comic on spaced repetition&lt;/a&gt;, and I highly recommend the read.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Spaced repetition&amp;rdquo; just means studying flashcards, studying the cards you know best less often, and study the cards you struggle with more often. It&amp;rsquo;s a powerful technique for learning and remembering material, whether you&amp;rsquo;re a student or a lifelong learner.&lt;/p&gt;
&lt;p&gt;The system I use is based on a classic system called the &amp;ldquo;Leitner Box&amp;rdquo; method. I&amp;rsquo;ll first describe how to use the &amp;ldquo;Leitner Box&amp;rdquo; approach in Roam, and then I&amp;rsquo;ll describe the adjustments I made to improve it.&lt;/p&gt;
&lt;h2 id=&#34;whats-a-leitner-box&#34;&gt;What&amp;rsquo;s a &amp;ldquo;Leitner Box&amp;rdquo;?&lt;/h2&gt;
&lt;p&gt;In the &amp;ldquo;Leitner Box&amp;rdquo; system of spaced repetition, there are seven boxes numbered Box 1 through Box 7. When you create a flashcard, you place it into Box 1. Every day, you use a schedule to determine which boxes of cards to review. The cards in box 1 get reviewed most often, and the cards in box 7 get reviewed least often. When you review a card, you move it up a box (e.g. from box 1 to 2 or from box 4 to 5) if you get the card right. But if you get a card wrong, you move the card back to box 1.&lt;/p&gt;
&lt;p&gt;The default Leitner Box schedule looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fplayground%2FpW7FsufOIr.png?alt=media&amp;amp;token=3cbd07b1-11e5-4389-896d-9a181f6529fc&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;How do you read this schedule?&lt;/p&gt;
&lt;p&gt;The colored circles represent the different Leitner Boxes. The red circles represent Box 1, the orange circles represent Box 2, the yellow circles represent Box 3, all the way up to the final pink circle that represents Box 7.&lt;/p&gt;
&lt;p&gt;The numbers along the bottom are &amp;ldquo;session numbers&amp;rdquo;. For your first review session, you look at the circles above &amp;ldquo;01&amp;rdquo; (Boxes 2 and 1). For your second review session, you look at the circles above &amp;ldquo;02&amp;rdquo; (Boxes 3 and 1). Always review boxes for a given day in order from highest to lowest. After completing session &amp;ldquo;64&amp;rdquo;, the schedule wraps around and your next session is session &amp;ldquo;01&amp;rdquo; again.&lt;/p&gt;
&lt;p&gt;To recap, (1) you put new flashcards into Box 1. (2) When you get a card correct, you move it up a box. (3) When you get a card incorrect, you move it all the way back to Box 1. (4) You use the schedule made of colored dots to decide which boxes to review each day, answering questions in higher boxes first.&lt;/p&gt;
&lt;h2 id=&#34;setting-up-leitner-boxes-in-roam&#34;&gt;Setting up Leitner Boxes in Roam&lt;/h2&gt;
&lt;p&gt;This system is all well and good. How do we put it into practice? Here I&amp;rsquo;ll quickly describe (1) getting set up, (2) creating new flashcards, and (3) how to do a review session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting up:&lt;/strong&gt; You can use my template; simply copy and paste the 
&lt;a href=&#34;https://pastebin.com/GPfhcUug&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;raw&amp;rdquo; text at the bottom of the page here&lt;/a&gt; into Roam Research, e.g. onto a new page named &amp;ldquo;Spaced Repetition&amp;rdquo;. For this to work you need to copy from the region that says &lt;strong&gt;&amp;ldquo;RAW paste data&amp;rdquo;&lt;/strong&gt;. You can 
&lt;a href=&#34;https://pastebin.com/zvjFKZAb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;get the enhanced template (recommended; see below) here&lt;/a&gt;. Again, be sure to copy from the region that says &amp;ldquo;RAW paste data&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The default template creates a page for each of the seven Leitner boxes. It also puts the default schedule on the page, and gives you a place to keep track of what session number you&amp;rsquo;re up to. It will also add two questions to your Leitner Box 1 (one about avocados, and one about Cloze deletions), and includes some basic instructions for how to do spaced repetition in Roam.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Creating New Flashcards:&lt;/strong&gt; You can create a new card anywhere in your Roam graph simply by tagging a note with &amp;ldquo;#[[Leitner Box 1]]&amp;rdquo;. Here are two ways to create cards in Roam:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Put the question on one bullet, and put the answer in the child bullets. Then tag the bullet with the question with &amp;ldquo;#[[Leitner Box 1]]&amp;rdquo; to add it to your spaced repetition system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the syntax {{=: question | answer}} in Roam to create text that remains hidden until clicked. The text &amp;ldquo;answer&amp;rdquo; won&amp;rsquo;t appear until you click on the text &amp;ldquo;question.&amp;rdquo; Again, tag the line with &amp;ldquo;#[[Leitner Box 1]]&amp;rdquo; to add it to your spaced repetition system.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I recommend you 
&lt;a href=&#34;https://andymatuschak.org/prompts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;read Andy Matuschak&amp;rsquo;s notes on &amp;ldquo;How to write good prompts&amp;rdquo;&lt;/a&gt; for tips on how to create good flashcards. 
&lt;a href=&#34;https://ncase.me/remember/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nicky Case&amp;rsquo;s comic: &amp;ldquo;How to Remember Anything Forever-ish&amp;rdquo;&lt;/a&gt; also has good suggestions for how to create good questions for spaced repetition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to do a Review Session:&lt;/strong&gt; Visit your &amp;ldquo;Spaced Repetition&amp;rdquo; page to figure out what session number to do. Increment the session number, and use the schedule to determine which Leitner boxes you&amp;rsquo;ll be looking at in this session. Remember, do the Leitner boxes in decreasing order of their number.&lt;/p&gt;
&lt;p&gt;For each Leitner box, visit its page in Roam. All your questions will appear in the Linked References section of the page.&lt;/p&gt;
&lt;p&gt;Go through the questions one by one. If you get the answer correct, increment the box number by 1. If you get the answer incorrect or struggle with it, set the tag back to &amp;ldquo;#[[Leitner Box 1]]&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t worry about sending things back to box 1; you&amp;rsquo;ll see those questions very often and soon they&amp;rsquo;ll be back in the higher numbered boxes again!&lt;/p&gt;
&lt;h2 id=&#34;enhancements-beyond-the-default-system&#34;&gt;Enhancements Beyond the Default System&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve made several changes to the default Leitner Box system to improve it to my taste. You&amp;rsquo;re welcome to use them!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Leitner Boxes 0 and $\infty$:&lt;/strong&gt; I use an extra box, &amp;ldquo;Leitner Box 0&amp;rdquo; for flashcards that I&amp;rsquo;m not ready to put into my rotation yet. I try to only add at most 10 cards a day to keep the total review workload low. If I have more cards than this, I keep them in Box 0 until I&amp;rsquo;m ready to start studying them, at which point I move them to Box 1.&lt;/p&gt;
&lt;p&gt;Leitner Box $\infty$ is for cards that have graduated from Box 7. In theory, I will remember these cards for the rest of my life.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Extra box 5s, 6s, and 7s:&lt;/strong&gt; I have decided to create two Box 5s (named 5A and 5B), four Box 6s (6A, 6B, 6C, and 6D), and eight Box 7s (7A through 7H). This prevents any individual review session from accumulating too many cards.&lt;/p&gt;
&lt;p&gt;I ran a simulation and under the default system, adding 10 new cards a day and getting 95% of cards correct, some review sessions will require reviewing over 700 cards! Under the enhanced system, the longest review session will only ever be 140 cards (and most review sessions are much shorter than that).&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the modified schedule that allows me to use these extra boxes:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fplayground%2F_dSM-MMp85.png?alt=media&amp;amp;token=b3682748-8ea4-4444-97df-0c4592beb1ff&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fplayground%2FhFRPfzGpwy.png?alt=media&amp;amp;token=20b7f689-4117-4901-a806-846b0d099d7d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To use this enhanced schedule, first use the review session number to figure out which column of colored circles to look at. As before, a red circle indicates Leitner Box 1, a yellow circle indicates Leitner Box 2, etc. If the circle has a letter inside it, that means to review that particular variant of the box. E.g. a blue circle with a &amp;ldquo;B&amp;rdquo; inside means to review Leitner box 5B. The arrow to the right of a box indicates which box you should move the card to if you get it correct. E.g. in review session &amp;ldquo;51&amp;rdquo; you should review box 5B and move correct cards to box 6D; you should then review boxes 2 and 1 as usual.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Embed the box list:&lt;/strong&gt; I use Roam Research&amp;rsquo;s &amp;ldquo;embed block&amp;rdquo; feature to embed a list of all Leitner Boxes onto all my Leitner Box pages. This makes it easy to quickly navigate from any box to any other box. I couldn&amp;rsquo;t think of a good way to include this in the template, so you&amp;rsquo;ll have to add this yourself if you want to include it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enhanced Template&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can 
&lt;a href=&#34;https://pastebin.com/zvjFKZAb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;access the enhanced version of the template here&lt;/a&gt;. It includes more Leitner boxes and the more complicated schedule. To use it, simply paste it into a new page in Roam Research, e.g. &amp;ldquo;Spaced Repetition&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;spaced-repetition-alternatives&#34;&gt;Spaced Repetition Alternatives&lt;/h2&gt;
&lt;p&gt;There are multiple ways of doing spaced repetition in Roam, of which this is just one. Note that most spaced repetition systems in Roam Research use the &amp;ldquo;delta&amp;rdquo; feature. However, we are not using this feature. CortexFutura provides 
&lt;a href=&#34;https://www.cortexfutura.com/preliminary-spaced-repetition-roam/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a way of using the delta feature for spaced repetition here&lt;/a&gt;. Roam Toolkit provides another system for doing spaced repetition in Roam, which you can 
&lt;a href=&#34;https://www.youtube.com/watch?v=08o8q_bOedw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view on YouTube here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of the most popular spaced repetition systems is called 
&lt;a href=&#34;https://apps.ankiweb.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Anki&lt;/a&gt;. It&amp;rsquo;s great for language learning. I&amp;rsquo;d be remiss not to mention it. The reason I prefer doing spaced repetition directly in Roam is that the friction to creating cards is much lower in Roam for me, since I&amp;rsquo;m taking notes and writing my ideas in there already.&lt;/p&gt;
&lt;p&gt;Additionally RemNote, a competitor note-taking tool to Roam, also offers a highly configurable spaced repetition system out-of-the-box.&lt;/p&gt;
&lt;p&gt;For more, consider joining the conversation in the 
&lt;a href=&#34;https://roamresearch.slack.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Roam Research Slack&lt;/a&gt; &amp;ldquo;spaced-repetition&amp;rdquo; channel.&lt;/p&gt;
&lt;h2 id=&#34;two-advantages-of-this-system-over-traditional-spaced-repetition-systems&#34;&gt;Two advantages of this system over traditional spaced repetition systems&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Lower friction:&lt;/strong&gt; Creating cards directly in your note-taking app is substantially easier than needing to task switch to create cards. This lower mental overhead makes it easier to keep using spaced repetition for an extended period of time. I started using it two months ago myself, so finger&amp;rsquo;s crossed it indeed is something I keep up for much longer! 🤞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Robustness to vacations:&lt;/strong&gt; In traditional spaced repetition systems, taking a break for a day, week, or month, can be ruinous to your spaced repetition rhythm. After coming back from the break, you find you have too many cards to review all at once, which can be a real motivation drain. Instead of organizing cards by &lt;strong&gt;date&lt;/strong&gt;, my system organizes them by &lt;strong&gt;review session number.&lt;/strong&gt; This means that if you skip a day or a week, your reviews simply get pushed back. The review session number won&amp;rsquo;t go up while you&amp;rsquo;re away. You can even split a review session over multiple days if you like. No trouble! You&amp;rsquo;ll never be left with a review session that&amp;rsquo;s too big to handle.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://ncase.me/remember/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nicky Case&amp;rsquo;s comic: &amp;ldquo;How to Remember Anything Forever-ish&amp;rdquo;&lt;/a&gt; is what inspired me to start using spaced repetition in my life.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://withorbit.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andy Matuschak&amp;rsquo;s &amp;ldquo;Orbit&amp;rdquo; system&lt;/a&gt; enables writers to incorporate spaced repetition directly into their writing, to help their readers remember what they learned forever. You can read 
&lt;a href=&#34;https://quantum.country/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quantum Country&lt;/a&gt; to learn quantum computing and give it a try. You could also 
&lt;a href=&#34;https://andymatuschak.org/prompts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;read his tips for &amp;ldquo;How to write good prompts&amp;rdquo;&lt;/a&gt;, which is also written with Orbit.&lt;/p&gt;
&lt;p&gt;You can 
&lt;a href=&#34;https://apps.ankiweb.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;get Anki here&lt;/a&gt; or 
&lt;a href=&#34;https://www.remnote.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;try RemNote here&lt;/a&gt;. I also have a dozen+ other 
&lt;a href=&#34;https://davidbieber.com/snippets/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;snippets about Roam here&lt;/a&gt; (
&lt;a href=&#34;https://davidbieber.com/snippets/2019-12-25-introducing-snippets/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what&amp;rsquo;s a “snippet”?&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;get-in-touch&#34;&gt;Get in touch&lt;/h2&gt;
&lt;p&gt;I love a good discussion about spaced repetition. You can email me at 
&lt;a href=&#34;mailto:david810&amp;#43;spaced-repetition@gmail.com&#34;&gt;david810+spaced-repetition@gmail.com&lt;/a&gt;, find me on Twitter (
&lt;a href=&#34;https://twitter.com/@Bieber&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@Bieber&lt;/a&gt;), or join the 
&lt;a href=&#34;https://roamresearch.slack.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Roam slack&lt;/a&gt; to keep the conversation going.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
