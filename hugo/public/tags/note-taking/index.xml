<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>note-taking | David Bieber</title>
    <link>https://davidbieber.com/tags/note-taking/</link>
      <atom:link href="https://davidbieber.com/tags/note-taking/index.xml" rel="self" type="application/rss+xml" />
    <description>note-taking</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 20 Nov 2021 02:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=true) shape:circle]</url>
      <title>note-taking</title>
      <link>https://davidbieber.com/tags/note-taking/</link>
    </image>
    
    <item>
      <title>BIRDS: Bidirectional incremental real-time data synchronizers</title>
      <link>https://davidbieber.com/snippets/2021-11-20-birds/</link>
      <pubDate>Sat, 20 Nov 2021 02:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-11-20-birds/</guid>
      <description>&lt;p&gt;The culmination of my thinking on note-taking interoperability so far is that we need &lt;strong&gt;BIRDS&lt;/strong&gt;. üê¶. Allow me to explain.&lt;/p&gt;
&lt;p&gt;We want an &amp;ldquo;intermediate representation&amp;rdquo; for note-taking systems, to allow them to interoperate.&lt;/p&gt;
&lt;p&gt;Here an &amp;ldquo;intermediate representation&amp;rdquo; means an &lt;strong&gt;in-process&lt;/strong&gt; representation of notes that can do &lt;strong&gt;bidirectional real-time incremental&lt;/strong&gt; syncs with any of the popular note-taking systems (any system with a connector written for it).
The main reason we want this is it allows application developers to write applications once for the IR, and have their application work for users using any note-taking system.
A second reason this is desirable is it allows introducing data into your notes from multiple sources, like your email, news feeds, messages, and social media accounts.&lt;/p&gt;
&lt;p&gt;To bridge a note-taking system with the IR, a connector should be written between the system and the intermediate representation. These connectors, we shall call &lt;strong&gt;birds&lt;/strong&gt;, ü¶§, short for &amp;ldquo;bidirectional incremental real-time data synchronizer&amp;rdquo;. Each bird üêî is a bridge that either pushes, pulls, or pushes-and-pulls data between the &amp;ldquo;intermediate representation&amp;rdquo; notebase and some data source or storage system.&lt;/p&gt;
&lt;p&gt;Birds ü¶ö are bidirectional because they allow pushing or pulling data in either direction.
They are incremental because they are aware of what data is on the other end of the connection, and only transmit changes.
They are real-time, because these changes are transmitted quickly and automatically.
These properties are similar to those of Dropbox or Google Drive, but rather than there being files on either end of the connection, there are notes.&lt;/p&gt;
&lt;p&gt;What are the birds ü¶ú that I would use for my current setup?&lt;/p&gt;
&lt;p&gt;I would use a bidirectional bird ü¶É with Roam Research, since that&amp;rsquo;s my core note-taking location at the moment.
I would use a bird üê§ to connect my email to my notes. Ideally I would also have birds ü¶â for each of the messaging and social media platforms that I use too.
I would use a bird üêß to write my full notebase to disk locally.&lt;/p&gt;
&lt;p&gt;If later I switch away from Roam, I would use a new bird üêì to import my data into whatever new better system I switch to.&lt;/p&gt;
&lt;p&gt;Remarkably, I was able to put a bird ü¶¢ emoji next to every use of the word bird üïäÔ∏è in this snippet, and still not run out of bird ü¶Ü emojis.&lt;/p&gt;
&lt;p&gt;ü¶Ö&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Save my spot! Finer-grained bookmarks for incremental reading</title>
      <link>https://davidbieber.com/snippets/2021-11-20-save-my-spot/</link>
      <pubDate>Sat, 20 Nov 2021 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-11-20-save-my-spot/</guid>
      <description>&lt;p&gt;When I find articles on the web, often I only read a small portion of an article before browsing away.
Instead of giving up on the article, I would like to leave a little visual marker on the page indicating the part of the page that I reached.
I&amp;rsquo;d then also like to automatically add a link to this marker to my notes.
So, if I&amp;rsquo;m ever reviewing my notes, I&amp;rsquo;ll be able to jump right back into the article where I left off.&lt;/p&gt;
&lt;p&gt;If I later continue reading the article, I&amp;rsquo;d like to move the marker to whatever spot I reach. (It&amp;rsquo;s OK if the old links keep linking to the old location, but I want a new link to whatever spot I&amp;rsquo;ve reached.)&lt;/p&gt;
&lt;p&gt;I think this should be possible to build with Browserflow. Let&amp;rsquo;s consider how.
I think I would do this with two flows, one to save my spot on a page (and add it to my notes),
and a second flow to restore to that spot on the page from the link in my notes.&lt;/p&gt;
&lt;p&gt;The biggest decision is how to represent a spot on a page. One option is the scroll position. Another option would be to remember a unique element id. Both approaches have drawbacks. Using scroll position doesn&amp;rsquo;t work well with dynamic content. Element ids aren&amp;rsquo;t guaranteed to be unique. I am leaning toward the scroll position approach to start, and then I&amp;rsquo;ll see how fragile it is. Even though it isn&amp;rsquo;t perfect, it will work in most situations.&lt;/p&gt;
&lt;p&gt;When I run the first flow, it will grab the URL of the current page and the current scroll position, and it will write that into my notes. This requires changing tabs, which is easy to do with Browserflow, but not easy to do with a standard JavaScript script. That flow will be run on the website where I am reading the article.&lt;/p&gt;
&lt;p&gt;The other flow will be run while I&amp;rsquo;m reading my notes. It would be great if just clicking on a link in my notes could trigger this flow and take me to the correct spot in the article, but this isn&amp;rsquo;t possible (by default) with Browserflow today. One way to work around this limitation of Browserflow is to write an always-on flow that listens for when I&amp;rsquo;ve clicked the link. Unfortunately, always-on flows are not great with Browserflow&amp;rsquo;s pricing plans.&lt;/p&gt;
&lt;p&gt;When I run the flow to restore my spot in an old article, the flow will first open a new tab to that article&amp;rsquo;s webpage. Then it will scroll to the specified position. When the flow starts, it will first need a way to determine which of the links on the notes page to follow. With the current version of Browserflow that I have (0.72 I think), you can just click on the link to specify this. This option is removed unfortunately in the latest version of Browserflow. Instead, we can probably use a clever selector to select the user-selected link. This should work in later Browserflow versions.&lt;/p&gt;
&lt;p&gt;Once these two flows are implemented, saving and loading my point in an article to and from my notes will become much easier. The next improvement will be adding in a bit of visual flourish (e.g. a visual marker in the article to draw my eye to where I left off). Certainly a smoother UX is feasible than the one I&amp;rsquo;ve planned here, but I think this Browserflow prototype hits a sweet spot of quality-to-effort ratio, and will be a satisfying prototype to build and use for myself.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Organizing a Twitter Discussion: Gathering Twitter Replies</title>
      <link>https://davidbieber.com/snippets/2021-11-20-twitter-replies/</link>
      <pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-11-20-twitter-replies/</guid>
      <description>&lt;p&gt;I 
&lt;a href=&#34;https://twitter.com/Bieber/status/1461128201485402112&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tweeted&lt;/a&gt; about spaced repetition earlier this week, sharing and summarizing 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-11-02-improvements-to-spaced-repetition/&#34;&gt;my latest snippet on the subject&lt;/a&gt;. A bunch of people left thoughtful replies, and I was quite pleased with the discussion. Now I want to look over the discussion holistically, but I don&amp;rsquo;t see a great way to do this. I don&amp;rsquo;t even see a way to look at all the replies to my thread in one place. I want to see not just this, but also replies to replies. TweetDeck might be able to help, but I don&amp;rsquo;t see how.&lt;/p&gt;
&lt;p&gt;I think what I&amp;rsquo;d like to do is write a little script that takes a tweet as input, and outputs links to all the replies and replies to replies in a little tree that I can put into Roam.
Then I can make notes on the full thread, and even link together different parts of the conversation.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s give this a try.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import twython
from messager import settings

client = twython.Twython(
        settings.TWITTER_CONSUMER_KEY,
        settings.TWITTER_CONSUMER_SECRET,
        settings.TWITTER_ACCESS_TOKEN,
        settings.TWITTER_ACCESS_TOKEN_SECRET)

def get_replies(status_id):
  status = client.lookup_status(id=status_id)[0]
  return get_replies_to_status(status)

def get_replies_to_status(status):
  status_id = status[&#39;id&#39;]
  screen_name = status[&#39;user&#39;][&#39;screen_name&#39;]
  results = client.search(
      q=f&#39;to:{screen_name}&#39;, sinceId=status_id, count=128)
  candidates = results[&#39;statuses&#39;]
  replies = []
  for candidate in candidates:
    if candidate[&#39;in_reply_to_status_id&#39;] == status_id:
      replies.append(candidate)
  return replies

def get_recursive_replies(status_id):
  status = client.lookup_status(id=status_id)[0]
  all_replies = []
  to_search = [status]
  searched = set()
  while to_search:
    status = to_search.pop()
    if status[&#39;id&#39;] not in searched:
      replies = get_replies_to_status(status)
      all_replies.extend(replies)
      to_search.extend(replies)
      searched.add(status[&#39;id&#39;])
  return all_replies

status_id = 1461128201485402112
replies = get_recursive_replies(status_id)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Aside: I would love for this file (the markdown file I&amp;rsquo;m writing this snippet in) to double as a Python file.
When I run it, just the Python code block(s) would get run.&lt;/p&gt;
&lt;p&gt;To my surprise the Twitter API did not make it easy to query for replies to a tweet. So, I&amp;rsquo;m using the workaround on display above.
To get all replies to a tweet, I query for all tweets to the tweet author, and then filter for those that are actually replies.
Since the number of search results is limited, this might not always work; it depends on what order Twitter decides to sort tweets by. If Twitter returns the oldest tweets first, this method will work consistently.&lt;/p&gt;
&lt;p&gt;It does seem to be working for now, fortunately. There are 60 recursive replies to my tweet, and with this method I was able to lay them all out in a row. Pasting the urls into Roam, I find the default rendering of each tweet in Roam takes up a bit too much space though and provides too much context. So, I may need to modify the display a bit more.&lt;/p&gt;
&lt;p&gt;My hope is that I can lay out the entire conversation compactly, and then start marking it up with my own notes, e.g. tagging replies that express similar ideas so I can reply to them together rather than individually.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Machine Learning and Automation Ideas for Note-taking</title>
      <link>https://davidbieber.com/snippets/2021-10-28-ml-and-automation-for-note-taking/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-10-28-ml-and-automation-for-note-taking/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s consider machine learning first, and then automation. For each we brainstorm the potential value for note-taking.&lt;/p&gt;
&lt;h3 id=&#34;the-value-of-markmachine-learningmark-for-note-taking&#34;&gt;The Value of &lt;mark&gt;Machine Learning&lt;/mark&gt; for Note-Taking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Automatic &lt;strong&gt;transcription&lt;/strong&gt; of audio notes
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speaker identification&lt;/strong&gt; during meetings or conversations&lt;/li&gt;
&lt;li&gt;Resurfacing of action items, surfacing relevant information, and performing actions (e.g running a google search or sending a message) in response to audio cues during meetings or conversations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Automatic &lt;strong&gt;categorization&lt;/strong&gt; of notes&lt;/li&gt;
&lt;li&gt;Automatic &lt;strong&gt;categorization of spaced repetition&lt;/strong&gt; flash cards&lt;/li&gt;
&lt;li&gt;Automatic &lt;strong&gt;context-filling&lt;/strong&gt; of spaced repetition flash cards
&lt;ul&gt;
&lt;li&gt;e.g. highlight a phrase to create a flash card; the necessary context is pulled in from surrounding paragraphs to make a coherent standalone flash card.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Automatic &lt;strong&gt;connections&lt;/strong&gt; and graph construction:
&lt;ul&gt;
&lt;li&gt;Textual elements:
&lt;ul&gt;
&lt;li&gt;Entity extraction from notes (&amp;ldquo;implicit nodes&amp;rdquo;, e.g. &amp;ldquo;Bank of America&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Attribute extraction from notes (e.g. &amp;ldquo;incredible presentation by Pierre-Antoine&amp;rdquo; gets tagged as incredible or wow (the canonical form).)&lt;/li&gt;
&lt;li&gt;Relationship extraction (e.g. &amp;ldquo;Diamond Age by Neal Stephenson&amp;rdquo; -&amp;gt; creates an &amp;ldquo;author of&amp;rdquo; relationship)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Background knowledge elements:
&lt;ul&gt;
&lt;li&gt;e.g. knowing that Diamond Age is a book&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Writing prompt generator / &lt;strong&gt;Writing assistant&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Overlap detection&lt;/strong&gt; between people&amp;rsquo;s graphs
&lt;ul&gt;
&lt;li&gt;The Go Note Go &amp;ldquo;clink&amp;rdquo; scenario&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autocomplete&lt;/strong&gt; (e.g. gmail tab completion)&lt;/li&gt;
&lt;li&gt;Improved &lt;strong&gt;spaced repetition algorithms&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Mistake detection / &lt;strong&gt;fact checking&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Summarization&lt;/strong&gt; of notes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Highlight extraction&lt;/strong&gt; from notes&lt;/li&gt;
&lt;li&gt;Suggesting &lt;strong&gt;new ideas&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Suggesting &lt;strong&gt;new online resources&lt;/strong&gt; to read / explore
&lt;ul&gt;
&lt;li&gt;Incl. articles, papers, YouTube videos, Suggesting &lt;strong&gt;people to reach out to&lt;/strong&gt; (e.g. because of their blog or Twitter or other things they&amp;rsquo;re written)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Semantic search&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conversational chat bots&lt;/strong&gt; for exploring the knowledge in a notebase&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;the-value-of-markautomationmark-for-note-taking&#34;&gt;The Value of &lt;mark&gt;Automation&lt;/mark&gt; for Note-Taking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Share notes&lt;/strong&gt; with people via their preferred messaging platform&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Snooze notes&lt;/strong&gt; and ideas so you review them later&lt;/li&gt;
&lt;li&gt;Set pomodoros, alarms, and reminders to &lt;strong&gt;stay focused&lt;/strong&gt; and &lt;strong&gt;stay on task&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Note-taking &lt;strong&gt;via highlights&lt;/strong&gt; (e.g. with Browserflow)&lt;/li&gt;
&lt;li&gt;Note-taking &lt;strong&gt;via screenshots&lt;/strong&gt; (e.g. from YouTube)&lt;/li&gt;
&lt;li&gt;Automatic creation of &lt;strong&gt;spaced repetition from highlights&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bulk refactors&lt;/strong&gt; of note-taking&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pulling in context&lt;/strong&gt; from other sources (e.g. Warmly pulls LinkedIn info into Calendar, notes could pull info from wikipedia)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sync notes&lt;/strong&gt; between other sources and your notebase
&lt;ul&gt;
&lt;li&gt;Other people&amp;rsquo;s notes&lt;/li&gt;
&lt;li&gt;Your email client, calendar, TODO app, spaced repetition app, GitHub issues, other messaging services, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Publishing&lt;/strong&gt; of notes to a webpage (either publicly or privately), or to social media&lt;/li&gt;
&lt;li&gt;New &lt;strong&gt;data entry&lt;/strong&gt; mechanisms: &lt;strong&gt;Go Note Go&lt;/strong&gt;, terminal, email, text, browsing history, location history, terminal history, IoT devices, etc&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spaced repetition&lt;/strong&gt; for studying&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inactivity reminders&lt;/strong&gt; (e.g. &amp;ldquo;it&amp;rsquo;s been three months since you&amp;rsquo;ve done a music activity&amp;rdquo;, or &amp;ldquo;it&amp;rsquo;s been over 6 months since you&amp;rsquo;ve spoken with David Dohan&amp;rdquo;, or &amp;ldquo;it&amp;rsquo;s been over a year since you&amp;rsquo;ve written about microbiology.&amp;quot;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rough Note-taking Interop Requirements</title>
      <link>https://davidbieber.com/snippets/2021-10-10-note-taking-interop-requirements/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-10-10-note-taking-interop-requirements/</guid>
      <description>&lt;p&gt;Yesterday I mused about 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-10-09-note-taking-system-interop/&#34;&gt;the benefits an interoperability standard could provide&lt;/a&gt; to note-taking systems. Today, I extract rough requirements for such a standard from that musing.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Note entry&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note entry projects need to be able to insert notes into a notebase regardless of which note-taking system is storing the notebase.&lt;/p&gt;
&lt;p&gt;This is critical for projects like 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-07-29-note-taking-flow/&#34;&gt;my Browserflow note-taking flows&lt;/a&gt; (which only support Roam right now) and 
&lt;a href=&#34;https://davidbieber.com/projects/go-note-go/&#34;&gt;Go Note Go&lt;/a&gt; to be multi-vendor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;ldquo;Restricted note entry&amp;rdquo;&lt;/strong&gt; allows an application like Go Note Go to insert notes into an application-specific section of the notes. In a &amp;ldquo;daily notes&amp;rdquo; oriented notebase like Roam, this is a &amp;ldquo;Go Note Go&amp;rdquo;-specific section on each daily notes page. In a page-oriented notebase, this can instead be an application specific page or namespace (e.g. &amp;ldquo;Go Note Go/*&amp;quot;) that notes can be inserted into. When using restricted note entry, an application can only insert notes into their own region of the notebase. This prevents the application from performing disruptive insertions that lower the quality of the notes outside of this region.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unrestricted note entry&lt;/strong&gt; allows an application to perform a broader set of inserts, not limited to a specific region of the notes. For a note-taking entry system that also allows browsing the notes, where a user might want to insert new notes alongside an existing note they&amp;rsquo;ve pulled up, this becomes important.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Note reading&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Individual note reading&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Batch note reading:&lt;/strong&gt; When notes are just text, reading large quantities of notes at a time becomes inexpensive. Often an entire text notebase is small enough to be kept in memory or transmitted over a network.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Incremental export&lt;/strong&gt; is critical for real-time features, such as collaborative note-taking across systems. Also necessary for this is support for a &lt;strong&gt;note view&lt;/strong&gt; and the ability to &lt;strong&gt;subscribe&lt;/strong&gt; to updates. Consider a collaborative note-taking experience. I&amp;rsquo;m taking notes in Roam, and one of my blocks is an embed of a page from your notes in Notion. As you make edits to the page in Notion, they should appear in my notes. If I have edit access on that page, I should be able to directly edit that page in my notes too, and you should see the results reflected in Notion in real time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For this to work, both note-taking systems could need to support the necessary parts of the standard. If instead, Notion lacked the real-time import capability, a half-baked experience of cross-system collaborative note-taking could still be possible. As edits in Notion get saved, they appear in real-time in Roam. When edits are made in Roam, Notion would only render them upon reloading the page.&lt;/p&gt;
&lt;p&gt;If a conflict is introduced to the intermediate representation, it could be handled gracefully through a CRDT. If instead a conflict is introduced on the note-taking system side of things, then that note-taking system is responsible for handling the conflict resolution as it sees fit.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;The above ideas taken together (and assumed idealized) can support the applications discussed yesterday: e.g. note entry systems like Go Note Go, advancements in spaced repetition, multiplayer spaced repetition, multiplayer note-taking, summarization features, highlight extraction features. What they don&amp;rsquo;t support is the development of UI widgets that can be developed once and deployed across any note-taking system. Supporting that type of integration would require a greater degree / different type of standardization.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;Consider someone wanting to implement a summarization feature for note-taking systems, agnostic to the specific note-taking system being used. They train a machine learning model that can take a bunch of text notes and produce a quality summary. They implement a way for a user to efficiently select a collection of notes. The UI they choose allows searching by tags and keywords, navigating through the search results with the arrow keys and marking notes and their children for inclusion by pressing enter.&lt;/p&gt;
&lt;p&gt;When the user indicates they&amp;rsquo;ve selected the notes for summarization, they submit them to the feature&amp;rsquo;s ML system, which produces a summary.
if the user likes the summary, they accept it. When accepted, the feature inserts the summary into a dedicated Summarization specific section of the notes, complete with references to each of those notes used to produce the summary.&lt;/p&gt;
&lt;p&gt;This toy feature relies on having batch read access to the notes on the basis of a query, as well as restricted note entry permissions for writing notes back to the system. Using the hypothetical standard we are brainstorming toward in this snippet, such a system could be implemented once, but used by anyone with their notes in any of the note-taking systems that conform to these parts of the standard.&lt;/p&gt;
&lt;p&gt;An even better summarization feature would be one that doesn&amp;rsquo;t require the user to select the notes to summarize. It would automatically identify chunks of notes on a related topic, and summarize those. When it generates a summary, it would offer it to the user, along with mentioning which notes were used in the generation of the summary. The user could choose to accept the summary (in which case it would be saved as explained above), or not to. This version of the features requires whole-notebase access to implement, a slightly more permissive requirement than query-based access.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What does such a &lt;em&gt;standard&lt;/em&gt; look like in practice? Maybe a useful analogy is thinking of it as an &amp;ldquo;LLVM&amp;rdquo; for notebases &amp;ndash; an &amp;ldquo;LLNB&amp;rdquo; if you will (unofficially standing for low level notebase, but not officially standing for anything&amp;hellip;)&lt;/p&gt;
&lt;p&gt;For each note-taking system we could implement a lossless bidirectional transform to a standard &amp;ldquo;intermediate representation&amp;rdquo;. Tools and plugins could be written to operate on this shared representation, and they could then be deployed against any note-taking system with supported transformations to and from the shared representation.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;intermediate representation&amp;rdquo; compiler analogy isn&amp;rsquo;t perfect though, since I don&amp;rsquo;t think it captures the desired incremental export, view, and subscription features we&amp;rsquo;d like in the LLNB system. We don&amp;rsquo;t want to have to process an entire notebase to get it&amp;rsquo;s LLNB form, and we don&amp;rsquo;t want to have to overwrite an entire notebase to update it from a modified LLNB. Critical to this working is having the LLNB track its own updates and be able to export just what has changed, and similarly having the note-taking systems able to report either a full update (if no state about the notebase is known), or just an incremental update (if the notebase state was already exported recently). One way to achieve this would be to have an API that gives a diff between an earlier state of a notebase (say, indicated by a commit hash or timestamp) and the current state.&lt;/p&gt;
&lt;p&gt;How about system-specific features? When features of a specific note-taking system X are used, they can appear in the intermediate representation as metadata. This metadata can be constituted appropriately when transferred back to X, or can be included as text if instead transferred to system Y. To make this concrete, support Notion has a geographic map feature that someone has used in their notes, but that is not supported by Roam. If the export their notes to LLNB, the map state is saved as e.g. {location: new jersey, zoom: 5}. If the notes are then imported back into Notion, the map will be restored. If instead the notes are imported into Roam, which lacks the map feature, the data about how the map feature will be included instead. So, if the notes are later exported from Roam and imported back into Notion, the map will be restored.&lt;/p&gt;
&lt;p&gt;If the state of some feature is complicated and not practically serializable as a note, it can be stored outside the notebase, e.g. in Dropbox or Google Drive or whatever is appropriate, with a reference to that external storage medium used as the state.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Note-taking System Interoperability</title>
      <link>https://davidbieber.com/snippets/2021-10-09-note-taking-system-interop/</link>
      <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-10-09-note-taking-system-interop/</guid>
      <description>&lt;p&gt;What would be a good &lt;em&gt;standard&lt;/em&gt; for note-taking software to use to support development of system-agnostic tools like Go Note Go? In this snippet I discuss the value such a standard could provide; I expect it will be useful in future brainstorming for what exactly would go into such a standard.&lt;/p&gt;
&lt;p&gt;I am building Go Note Go as a note-taking entry point, possibly with some basic retrieval features (e.g. &amp;ldquo;read back the last two notes I took&amp;rdquo;). I currently use Roam Research as my main note-taking system, but I&amp;rsquo;m not wedded to it forever.&lt;/p&gt;
&lt;p&gt;So, I&amp;rsquo;m building Go Note Go to work with any note-taking system. To do so, I need a distinct uploader implementation for every note-taking system that I support. I&amp;rsquo;m reaching out to the developers at the note-taking systems to assist with this effort. It would be lovely if there was a standard, to reduce the amount of work required here.&lt;/p&gt;
&lt;p&gt;For Go Note Go, only note &lt;em&gt;entry&lt;/em&gt; is required. If Go Note Go wanted to interact with the notes in a deeper way while continuing to support multiple note-taking systems (e.g. to support spaced repetition, or grocery lists, or reviewing a topic), then a standard would be even more important. Specialized implementations for each note-taking system would become largely untenable.&lt;/p&gt;
&lt;p&gt;It is both common and important that hobbyists develop tools for interacting with their notes. Roam Research has 
&lt;a href=&#34;https://roamjs.com/extensions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hundreds&lt;/a&gt; 
&lt;a href=&#34;https://roamresearch.com/#/app/roam-depot-developers/page/8yTj7WxQi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;of&lt;/a&gt; 
&lt;a href=&#34;https://bjosephburch.com/ultimate-roam-tool-kit/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;extensions&lt;/a&gt; developed by the Roam community. Obsidian has hundreds of 
&lt;a href=&#34;https://obsidian.md/plugins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plugins&lt;/a&gt;. This is part of what makes these tools so powerful.&lt;/p&gt;
&lt;p&gt;To my knowledge, no one has written a tool for both Roam and Obsidian simultaneously. I want people to be able to make tools for all of Roam, Obsidian, IdeaFlow, Mem, RemNote, Notion, Logseq, Athens, Dendron, all the ones I don&amp;rsquo;t know about, and whatever comes next.&lt;/p&gt;
&lt;p&gt;Some of these tools will live inside the note-taking editor. Others, like Go Note Go, merely have to interact with the note-taking system, but do not need to become &lt;em&gt;part&lt;/em&gt; of the note-taking system.&lt;/p&gt;
&lt;p&gt;Some key areas where standards could provide value are: note representation, entry, navigation, editing, and search. Also valuable, but conceptually separate, would be a standard for UI extension.&lt;/p&gt;
&lt;p&gt;Standards would make the development of system-agnostic tools easier. This includes novel note entry systems (e.g. 
&lt;a href=&#34;https://davidbieber.com/projects/shh-shell&#34;&gt;shh-shell&lt;/a&gt; and 
&lt;a href=&#34;https://davidbieber.com/projects/go-note-go&#34;&gt;Go Note Go&lt;/a&gt;, but also note entry systems for new domains, such as for doctor&amp;rsquo;s offices or for while you&amp;rsquo;re cooking, or for use in virtual reality). It also would support advancements in spaced repetition, multiplayer note-taking, and would enable new features like note summarization and highlight extraction to become available in all the different note-taking systems at once.&lt;/p&gt;
&lt;p&gt;In addition to all these applications, standards will make import/export/backup tools easier to build. This can reduce vendor lock in, and more importantly can reduce data loss by enabling robust backups. Today, switching my notes to another system would be a small hassle (e.g. Handling block references in the transfer might require some specialized treatment. And I&amp;rsquo;d need to do some work to set up a spaced repetition system like the one I&amp;rsquo;m currently using in Roam.)&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll say a few words about some of these ideas that would benefit from standards.&lt;/p&gt;
&lt;p&gt;(1) &lt;strong&gt;Advancements in spaced repetition.&lt;/strong&gt; Having a spaced repetition system inside of a note-taking system is far lower friction than a separate app. Improvements to SRS that work across all note-taking systems would be warmly welcomed. I believe there are also significant advances to be made in community-scale spaced repetition, where cards and knowledge are drawn from not just your own notes, but from your community&amp;rsquo;s notes (including peers and teachers), and where your review schedule is similarly influenced not only by your own learning progress, but also by the progress of your community. This deserves a separate snippet, but I&amp;rsquo;ll note here a possibility that community-scale spaced repetition enables: it allows for community-level learning priorities, which may include diversity of topic. For example the members of a community might decide they want to ensure that all of its history is adequately studied (or any other collection of topics), not just the most interesting parts. Deciding individually, the members of the community might choose to study overly overlapping parts of its history. Using a community-scale spaced repetition algorithm, the choice of what to study can still predominantly be left up to individuals, but with small guidance from the centralized algorithm the community can ensure complete coverage of all the desired topics.&lt;/p&gt;
&lt;p&gt;(2) &lt;strong&gt;Multiplayer Note-taking&lt;/strong&gt; Let&amp;rsquo;s say I&amp;rsquo;m doing research on a topic, and a colleague is doing research on a related topic. I might want to search through my colleague&amp;rsquo;s notes, and reference some of them from my own notes. This isn&amp;rsquo;t even possible in most note-taking systems today, but I think is either a future or work-in-progress feature of Roam, Athens, and Obsidian. Being able to do this cross-system would be so much better than only being able to do it within a system. A standard agreed upon by the different note-taking system developers would be necessary to support this.&lt;/p&gt;
&lt;p&gt;(3) &lt;strong&gt;Summarization and highlight extraction&lt;/strong&gt; Summarization is a feature not yet present in any note-taking system, but surely one that will be added to many systems in the future. It is the ability to get a (machine generated) summary of a large chunk of notes automatically. This is marginally useful when reviewing your own notes, but is even more useful in conjunction with multiplayer features. Being able to view a summary of other people&amp;rsquo;s notes or an entire community&amp;rsquo;s notes will allow multiplayer systems to scale to larger groups of people while remaining useful. Highlight extraction is a related future feature, enabling users to quickly find the most important parts of a notebase. As with summarization, this is useful for an individuals notes, and doubly useful for a multiplayer notebase.&lt;/p&gt;
&lt;p&gt;For each of these ideas, standards would be useful for allowing feature development to benefit users of all systems simultaneously, and for allowing users of one note-taking system to benefit from notes taken in another system. The space of possible applications is also much larger than my brainstorming above indicates. Specifically, the set of domain-specific activities one might want to perform with their notes is quite large (planning a family gathering, studying for a med school exam, writing a novel, etc.) Specialized applications could be built for each of these, and it should not matter where the relevant notes were taken. Different systems will always have their pros and cons for different types of content, but we don&amp;rsquo;t need to reinvent the wheel so frequently for use-cases that make sense in the context of all these different systems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go Note Go is public</title>
      <link>https://davidbieber.com/snippets/2021-09-26-go-note-go/</link>
      <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-09-26-go-note-go/</guid>
      <description>&lt;p&gt;Go Note Go is public! I&amp;rsquo;ve been working on this for two weeks now, and today I made it public!&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://davidbieber.com/projects/go-note-go&#34;&gt;Read all about it here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What is it? Go Note Go is a note-taking system for when you‚Äôre on the go, with a focus on driving and camping.&lt;/p&gt;
&lt;p&gt;In short, it&amp;rsquo;s a portable keyboard with a microphone and speakers and a beautiful handheld button that you can use to take notes anywhere at all. Driving? Push the button and speak your notes. Camping? Type on the keyboard, powered by a battery pack. The battery lasts all day, and the notes will be uploaded to your central note-taking system as soon as internet becomes available.&lt;/p&gt;
&lt;p&gt;Have a look. Let me know what you think! I&amp;rsquo;ve been using it as I develop it over the last two weeks and I &lt;em&gt;really love&lt;/em&gt; it. I keep it by my computer during the work day. I took it with me to my table tennis tournament yesterday. I&amp;rsquo;ve brought it to the beach. There&amp;rsquo;s no cognitive overhead. There&amp;rsquo;s no latency to slow down your thinking. Just speak, or type, and it works.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Browserflow Note-taking Flow</title>
      <link>https://davidbieber.com/snippets/2021-07-29-note-taking-flow/</link>
      <pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-07-29-note-taking-flow/</guid>
      <description>&lt;p&gt;Quick update on the note-taking Browserflow flow I&amp;rsquo;ve been building: 
&lt;a href=&#34;https://browserflow.app/shared/51b5b7af-3124-4989-9771-36e9f236e1e7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://browserflow.app/shared/51b5b7af-3124-4989-9771-36e9f236e1e7&lt;/a&gt;:&lt;/p&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How it works&lt;/h2&gt;
&lt;p&gt;When you run it, it injects some js into the page you&amp;rsquo;re viewing enabling a handful of keyboard shortcuts to enable clipping text into Roam from anywhere on the web.&lt;/p&gt;
&lt;p&gt;If you navigate to a new page, it will run that js on the new page. So it keeps the keyboard shortcuts active even if you follow links.&lt;/p&gt;
&lt;p&gt;It also removes the status overlay, so you can interact with the page more easily.&lt;/p&gt;
&lt;h2 id=&#34;the-keyboard-shortcuts-currently-are&#34;&gt;The keyboard shortcuts currently are:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enter&lt;/code&gt;: saves the current selection as a note to Roam&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q, !, @, *, &amp;gt;&lt;/code&gt;: saves the current selection as a note to Roam tagged as a {question, &amp;ldquo;Wow&amp;rdquo;, Share, key idea, or block quote} (I don&amp;rsquo;t really use these)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt;: saves the paragraph containing the selection to Roam, with the selection highlighted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt;: Asks for an element in browserflow. Saves a screenshot of the element to Roam. Doesn&amp;rsquo;t work. (hmm&amp;hellip; why not?)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;: saves the sentence containing the selection to Roam, with the selection highlighted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt;: saves the sentence containing the selection to Roam as a &amp;ldquo;cloze&amp;rdquo; (fill-in-the-blank) task for spaced repetition, with the selection as the fill-in-the-blank&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;: (big cloze) saves the paragraph containing the selection to Roam as a &amp;ldquo;cloze&amp;rdquo; (fill-in-the-blank) task for spaced repetition, with the selection as the fill-in-the-blank&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt;: quit (I use this to reenable keyboard shortcuts for tab switching)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;some-feature-requests--debug-things&#34;&gt;Some feature requests / debug things&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Would be nice to keep some status indicator, just in the corner or page title instead of blocking the full page.&lt;/li&gt;
&lt;li&gt;It depends on a couple other flows. Would be nice to be able to share just a single link.&lt;/li&gt;
&lt;li&gt;It switches to the roamresearch.com tab and back whenever you save a note. Would be nice if this worked even if roam were in a different window. The user shouldn&amp;rsquo;t have to care about exactly where roam is open.&lt;/li&gt;
&lt;li&gt;Why doesn&amp;rsquo;t the element screenshotting work?&lt;/li&gt;
&lt;li&gt;Would be nice to allow tab switching in a flow without having to quit the flow.&lt;/li&gt;
&lt;li&gt;For a note-taking flow like this, it can easily be running for hours. Doesn&amp;rsquo;t mix super well with the free tier of billing.&lt;/li&gt;
&lt;li&gt;A few of these could be solved with an &amp;ldquo;Enable interaction with page&amp;rdquo; action&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-dependency-flows-needed-to-check-it-out-are&#34;&gt;The dependency flows needed to check it out are:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://browserflow.app/shared/ba6eb2f0-a3d1-4bc3-9f21-5ca18af0b247&#34;&gt;https://browserflow.app/shared/ba6eb2f0-a3d1-4bc3-9f21-5ca18af0b247&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://browserflow.app/shared/486ef3eb-8d2b-48bf-8fee-22963dc74b88&#34;&gt;https://browserflow.app/shared/486ef3eb-8d2b-48bf-8fee-22963dc74b88&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://browserflow.app/shared/8e066128-2f87-468f-842f-3f006f0a2e71&#34;&gt;https://browserflow.app/shared/8e066128-2f87-468f-842f-3f006f0a2e71&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To try out the flow, you&amp;rsquo;ll need Browserflow, an open Roam tab, and all four flows linked in this snippet. Run the first flow (&amp;ldquo;Roam: Highlights&amp;rdquo;) on a web page (with Roam open in a different tab in the same window). Highlight some text, (say, the words &amp;ldquo;some text&amp;rdquo; in this sentence), and hit enter. You can try any of the shortcuts listed above. Notice as the flow copies your selection into your daily notes organized by time and website.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two more Browserflow flows for Roam Research</title>
      <link>https://davidbieber.com/snippets/2021-02-13-flows-for-roam-research/</link>
      <pubDate>Sat, 13 Feb 2021 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-02-13-flows-for-roam-research/</guid>
      <description>&lt;p&gt;I wrote three Browserflow flows for Roam Research today. None of them took me more than 20-30 minutes to write. The first one was for saving the current webpage to Roam. I 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-02-13-saving-urls-to-roam-with-browserflow/&#34;&gt;wrote about that flow here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next flow I wrote is for saving any link you click on to Roam. The idea behind this flow is to prevent doing depth first exploration of the web. Better to look at a bunch of links and then later choose the most interesting, than to dive head first into the first link you click on.&lt;/p&gt;
&lt;p&gt;Video of that flow here:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/KMxnws2Laww&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;And then I also wrote a flow for saving highlights from any web page to Roam. You can see that flow in action here:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MaV0GP4sZoM&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;In this flow, whenever I press enter the text I&amp;rsquo;ve highlighted is saved to my Roam Research Daily Notes page.&lt;/p&gt;
&lt;p&gt;Links to all the flows are in the video descriptions. Browserflow is currently in private beta. Looks like in the short-term DK will likely ask 
&lt;a href=&#34;https://www.notion.so/dkthehuman/Day-404-Choosing-My-Users-2a6b2c9cfc194fd3b561c370a62c60d5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;$20&lt;/a&gt; for access to the private beta. You can join the waitlist at 
&lt;a href=&#34;https://browserflow.app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browserflow.app&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Saving URLs to Roam with Browserflow</title>
      <link>https://davidbieber.com/snippets/2021-02-13-saving-urls-to-roam-with-browserflow/</link>
      <pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2021-02-13-saving-urls-to-roam-with-browserflow/</guid>
      <description>&lt;p&gt;Using the 
&lt;a href=&#34;https://davidbieber.com/snippets/2021-02-12-javascript-functions-for-inserting-blocks-in-roam/&#34;&gt;Roam JavaScript primitives I wrote yesterday&lt;/a&gt; it was extremely easy (less than 10 minutes, I think) to create a robust Browserflow flow for saving URLs to Roam Research.&lt;/p&gt;
&lt;p&gt;Now when I&amp;rsquo;m browsing the web, I can press cmd-J (Browserflow&amp;rsquo;s keyboard shortcut) and choose &amp;ldquo;Roam: Save URL&amp;rdquo; from the typeahead to save the current URL to my Roam Daily Notes page.&lt;/p&gt;
&lt;p&gt;If there&amp;rsquo;s not already a &amp;ldquo;Saved URLs:&amp;rdquo; block on daily notes, it makes it. Then it nests the URL beneath.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what the flow looks like in action:&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/ORpBuE4UYSA&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Here&amp;rsquo;s what the flow itself looks like:&lt;/p&gt;
&lt;img src=&#34;save-urls-flow.png&#34;/&gt;
&lt;p&gt;Notice there are really only two meaningful lines of code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let urls = await getOrCreateBlockOnPage($page, &#39;Saved URLs:&#39;, -1);
await createChildBlock(urls, $url)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first line creates the &amp;ldquo;Saved URLs:&amp;rdquo; block, but only if it doesn&amp;rsquo;t already exist. It returns the uid of that block. The second line saves the url. Nothing else to it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Taking Notes While Browsing the Web: An Idea for a Roam Research Plugin</title>
      <link>https://davidbieber.com/snippets/2020-05-15-roaming-the-web/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-05-15-roaming-the-web/</guid>
      <description>&lt;p&gt;As I&amp;rsquo;m browsing the web, I&amp;rsquo;d like to be able to take notes in 
&lt;a href=&#34;https://roamresearch.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Roam Research&lt;/a&gt;. In this post, I share an idea I have for a plugin or browser extension that I think would improve the experience of taking notes in Roam while browsing the web.&lt;/p&gt;
&lt;p&gt;The plugin would do two main things automatically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It would automatically insert some browsing history information into your Roam database while you browse the internet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As you navigate the web, it would automatically bring you to the Roam page that corresponds to the web page you&amp;rsquo;re reading.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;mind-the-details&#34;&gt;Mind the Details&lt;/h2&gt;
&lt;p&gt;Of course, the implementation details matter! You don&amp;rsquo;t want to be whisked away from the notes you&amp;rsquo;re taking just because you&amp;rsquo;ve clicked a link in a different window.&lt;/p&gt;
&lt;p&gt;So, here I&amp;rsquo;ll explain a few of the details I think would make this a good note taking experience.&lt;/p&gt;
&lt;p&gt;As I&amp;rsquo;m browsing the internet, all the websites I visit will get added to a page &amp;ldquo;{Date} Browsing History&amp;rdquo;. A new Roam page will be created for each new website visited. And there will be a Roam window that always stays open to the Roam page for the current website I have open in my browser.&lt;/p&gt;
&lt;p&gt;What qualifies as a website?&lt;/p&gt;
&lt;p&gt;By default there would be one Roam page per &lt;em&gt;domain&lt;/em&gt; visited. However, there are several exceptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;strong&gt;Wikipedia&lt;/strong&gt; it would be one Roam page per Wikipedia entry&lt;/li&gt;
&lt;li&gt;For websites reached from &lt;strong&gt;HackerNews&lt;/strong&gt;, &lt;strong&gt;Twitter&lt;/strong&gt;, and &lt;strong&gt;Reddit&lt;/strong&gt;, it would be one Roam page per link followed from the aggregator (but links followed within the reached website would not count as new websites)&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;GitHub&lt;/strong&gt; it would be one Roam page per user, organization, or repo visited&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;Arxiv&lt;/strong&gt; it would be one Roam page per paper&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;Roam&lt;/strong&gt; it would be one Roam page per Roam database&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It will be great to have a window that always stays open to the Roam page for the current website I have open in my browser. This way if I visit a website I&amp;rsquo;ve been to before, I will see my notes from that website. And the websites I visit will be linked to the day I visit them on, and also to any other pages my notes reference.&lt;/p&gt;
&lt;p&gt;Additionally, the tool should add a little bit of metadata to the pages it&amp;rsquo;s generating. On each of the autogenerated Roam pages, it would be great to see &lt;em&gt;when&lt;/em&gt; I visited the website, and what was the referring page. For websites visited multiple times, seeing the earliest and most recent visit times, and the number of times I visited that website would be useful too. Total time spent on the website would be a nice bonus.&lt;/p&gt;
&lt;h2 id=&#34;making-this-a-reality&#34;&gt;Making this a Reality&lt;/h2&gt;
&lt;p&gt;In the previous section I shared the details that I think would make this work well from a user experience perspective. How about from the technical side?&lt;/p&gt;
&lt;p&gt;I think it would make sense to implement this as a browser extension (though a 
&lt;a href=&#34;http://www.tampermonkey.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;user script&lt;/em&gt;&lt;/a&gt; could work too).

&lt;a href=&#34;http://dkthehuman.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DK the Human&lt;/a&gt;, author of the 
&lt;a href=&#34;https://chrome.google.com/webstore/detail/intention/dladanhaondcgpahgiflodhckhoeohoe&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Intention&lt;/a&gt; browser extension
has made his 
&lt;a href=&#34;https://github.com/dkthehuman/extension-starter-kit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browser extension starter kit&lt;/a&gt; freely available.
To notice when what web page you&amp;rsquo;re browsing and determine whether it constitutes a new page, the extension would need to request permission to view your activity on all websites.
For making additions to a Roam database automatically, I expect the extension would have to navigate to the appropriate Roam page in the background, and would then mimic the user actions to make the desired changes.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re interested in turning this idea into a reality or want to discuss it further, don&amp;rsquo;t hesitate to 
&lt;a href=&#34;mailto:david810&amp;#43;blog@gmail.com&#34;&gt;reach out&lt;/a&gt;! I&amp;rsquo;d be excited to try a workflow like this, but don&amp;rsquo;t anticipate building it myself in the near future.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
