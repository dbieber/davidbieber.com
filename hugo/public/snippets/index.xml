<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snippets | David Bieber</title>
    <link>https://davidbieber.com/snippets/</link>
      <atom:link href="https://davidbieber.com/snippets/index.xml" rel="self" type="application/rss+xml" />
    <description>Snippets</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2018</copyright><lastBuildDate>Fri, 26 Oct 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://davidbieber.com/img/portrait.jpg</url>
      <title>Snippets</title>
      <link>https://davidbieber.com/snippets/</link>
    </image>
    
    <item>
      <title>Questions to Answer About Python Fire</title>
      <link>https://davidbieber.com/snippets/2020-10-22-questions-to-answer-about-python-fire/</link>
      <pubDate>Thu, 22 Oct 2020 20:31:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-22-questions-to-answer-about-python-fire/</guid>
      <description>&lt;p&gt;Tomorrow I&#39;m giving a talk to Women Who Code on Python Fire. Python Fire is a Python library I wrote back in 2017 that makes command line interfaces automatically out of any Python object you give it.&lt;/p&gt;
&lt;p&gt;I have my talk planned but there are a few pieces of the story I haven&#39;t included in my talk yet. They are 1) Why did I build Python Fire? 2) How are people using Python Fire in the real world? 3) What&#39;s it like maintaining an open source project?&lt;/p&gt;
&lt;p&gt;To the first question, I should explain how we used Boom at Nest. Boom was the proto-version of Fire that inspired Fire&#39;s development. At Nest we had an ETL pipeline consisting of several distributed systems. For example data would pass through SQS, Kafka, Storm, and Pentaho while it was being ingested. We wanted to write tests for this complex series of systems. And we also wanted to be able to manually operate the systems. So we wrote Python functions for controlling each part of the system.&lt;/p&gt;
&lt;p&gt;Using Python&#39;s inspect feature we then turned this collection of functions automatically into a CLI. This allowed us to reuse the same code both for writing tests and for giving the operators control over the ingestion pipelines without needing to do duplicate work. This was the inspiration for Fire.&lt;/p&gt;
&lt;p&gt;To question two: there are thousands of uses of Fire on GitHub. OkCupid uses it for data analysis. One person I corresponded with uses Fire to control after market engines. About 10% of uses on GitHub are for machine learning projects, including the GPT codebase. There are also a couple hundred uses within Google too, though gflags (aka abseil) is the Google standard for CLIs still.&lt;/p&gt;
&lt;p&gt;And finally to question three, it&#39;s really nice to be appreciated! I built Fire to scratch my own itch from working at Nest and Google, but after releasing Fire it&#39;s gotten quite popular. Over 17k stars on GitHub, thousands of open source projects using it, and over ten million installs from every country around the world. It&#39;s really nice to see my effort appreciated.&lt;/p&gt;
&lt;p&gt;My favorite is that someone has written a blog post explaining why Fire is a good tool for teaching Python, because it lets the beginner start programming without needing to understand any boilerplate. I&#39;m hopeful that Fire is indeed helping people learn to program.&lt;/p&gt;
&lt;p&gt;Time permitting I will add these questions and answers to my talk tomorrow.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An Update on my 2020 Resolution</title>
      <link>https://davidbieber.com/snippets/2020-10-09-an-update-on-my-2020-resolution/</link>
      <pubDate>Fri, 09 Oct 2020 22:55:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-09-an-update-on-my-2020-resolution/</guid>
      <description>&lt;p&gt;My goal for this year was to get good at communicating publicly. I decided to measure progress in terms of the number of times I communicated publicly. 100 public communications was the goal. Where am I today?&lt;/p&gt;
&lt;p&gt;This is my 42nd snippet for the year. I&#39;m giving a talk on Python Fire publicly next week. I published 4 papers (IPA-GNN, TF-Coder, Unique Randomizer, and BUSTLE). So far two of them have been accompanied by open source releases.&lt;/p&gt;
&lt;p&gt;Add in a handful of paper presentations and Google-internal talks, and its safe to say I&#39;m past the half-way point toward the goal. Only trouble is we&#39;re over 75% of the way through the year. I&#39;d better get communicating!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Biking in the Morning</title>
      <link>https://davidbieber.com/snippets/2020-10-08-biking-in-the-morning/</link>
      <pubDate>Thu, 08 Oct 2020 22:04:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-08-biking-in-the-morning/</guid>
      <description>&lt;p&gt;Some of the &lt;a href=&#34;https://davidbieber.com/snippets/2020-10-06-the-snippets-i-dont-publish/&#34;&gt;snippets I did not publish&lt;/a&gt; were about my plans for biking in the morning. For the last several days I&#39;ve been biking to East Rock each morning, doing so before starting work on work days. I bring my pocket-sized keyboard and my phone, and when I&#39;m at the top of the Rock I use my friend Jacob Cole&#39;s app, ThoughtStream, to write about whatever&#39;s on my mind. Sometimes this is a potential snippet, and sometimes it&#39;s just planning for the day.&lt;/p&gt;
&lt;p&gt;I really like this routine but I&#39;m not confident that I&#39;ll continue it. Consistently getting up early for an extended period of time can be challenging, and I&#39;m not inclined to set an alarm to help. Also, the weather is getting cooler.&lt;/p&gt;
&lt;p&gt;I certainly hope that I continue this routine, and I intend to maintain it. I simply don&#39;t know that I will, and don&#39;t feel confidently enough that I will to make any sort of declaration or commitment to doing so. Is there a name for this type of goal? I think &amp;ldquo;intent&amp;rdquo; is appropriate, but doesn&#39;t capture the aspirational aspect of it. For now lets call it an &amp;ldquo;aspirational intent&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I aspirationally intend to keep biking to East Rock most mornings, until the weather gets too cold to permit doing so.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing the Snippet Queue</title>
      <link>https://davidbieber.com/snippets/2020-10-06-introducing-the-snippet-queue/</link>
      <pubDate>Tue, 06 Oct 2020 22:16:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-06-introducing-the-snippet-queue/</guid>
      <description>&lt;p&gt;This is my first snippet published using my &lt;a href=&#34;https://davidbieber.com/snippets/2020-10-06-further-reducing-the-publication-barrier-with-queuing/&#34;&gt;snippet queue idea&lt;/a&gt;. If all goes well, it will be (read: was) published tomorrow evening (October 7, 2020).&lt;/p&gt;
&lt;p&gt;The system works like this. I store a queue of snippets in Redis. Each snippet has the title, content, and date associated with it, as well as an id number. I can have Bieber Bot enqueue a new snippet by messaging him with &amp;ldquo;Queue snippet!&amp;rdquo; and the snippet details. He also responds to queries to update, view, or remove an existing snippet, or to view the current queue of snippets.&lt;/p&gt;
&lt;p&gt;Then, every evening Bieber Bot looks at the oldest item in the queue. If he&#39;s already asked me about it, and I haven&#39;t told him not to publish it, he goes and publishes it to my website. If he hasn&#39;t asked me about it yet, he asks me if its OK to publish. As long as I don&#39;t say no and remove the snippet from the queue, Bieber Bot will go forward with publishing the snippet the next day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Further Reducing the Publication Barrier with Queuing</title>
      <link>https://davidbieber.com/snippets/2020-10-06-further-reducing-the-publication-barrier-with-queuing/</link>
      <pubDate>Tue, 06 Oct 2020 13:29:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-06-further-reducing-the-publication-barrier-with-queuing/</guid>
      <description>&lt;p&gt;What is the barrier to publication? It&#39;s first and foremost a mental barrier. Sure, the act of writing presents its own challenges, but for me the mental hurdle of clicking send can be significant. Snippets lowers the barrier substantially compared with social media, messaging individuals, or even traditional blogging. Still, there&#39;s room to lower the barrier even more; e.g. private journaling and &lt;em&gt;thinking&lt;/em&gt; itself have much lower barriers than Snippets does.&lt;/p&gt;
&lt;p&gt;The idea today for lowering the barrier is a publication queue. In this idea, I write a snippet, send it to Bieber Bot, and he holds on to it for a bit. Then, after a day or so, he lets me know that he&#39;s going to publish it soon. He gives me an opportunity to tell him not to publish it, but after some time has passed, he goes ahead and publishes it in my Snippets section on my behalf.&lt;/p&gt;
&lt;p&gt;During that waiting period, I can send Bieber Bot revised versions of the Snippet, which will supersede the original. This way, when I send Bieber Bot the original snippet, I do so knowing that it will only be published as is if 1) I don&#39;t come up with a way to improve it and 2) I don&#39;t decide not to publish it. This takes a bit of the decision making burden off of present-David, and gives it to future-David. Between the two of them, they should be able to handle the publication no problem.&lt;/p&gt;
&lt;p&gt;This idea acts similarly to GMail&#39;s &amp;ldquo;send later&amp;rdquo; feature, but without the need to choose a send time. Clicking &amp;ldquo;send later&amp;rdquo; is easier than clicking &amp;ldquo;send&amp;rdquo; because there&#39;s an opportunity to undo or make changes.&lt;/p&gt;
&lt;p&gt;In addition to decreasing the barrier to publication, one thing I like about this idea is that it gives me an opportunity to revisit old ideas. When Bieber Bot tells me &amp;ldquo;Hey, last chance to rescind publication of this Snippet&amp;rdquo; that gives me an opportunity to reflect on what I&#39;d written.&lt;/p&gt;
&lt;p&gt;I also like that it can spread out the publication of snippets that I write in a single sitting. Currently, after publishing a single snippet, I&#39;m not inclined to write more because I would feel funny publishing multiple snippets in quick succession (another mental barrier to climb over, I suppose). If I knew that Bieber Bot would take care of spacing out the publications, I might feel more comfortable writing a second or third snippet in a single sitting. I&#39;d like that.&lt;/p&gt;
&lt;p&gt;So, a publication queue it is! This shouldn&#39;t be too much effort to implement given the work I&#39;ve already done to support snippet publications, scheduling, question-asking, and messaging in Bieber Bot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Snippets I Don&#39;t Publish</title>
      <link>https://davidbieber.com/snippets/2020-10-06-the-snippets-i-dont-publish/</link>
      <pubDate>Tue, 06 Oct 2020 12:33:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-06-the-snippets-i-dont-publish/</guid>
      <description>&lt;p&gt;The goal of Snippets is to minimize the barrier to writing as much as possible. To this end, it has been very effective. Still, there are several snippets that I write and do not publish, despite my self-insistence that the barrier to publication be minimal.&lt;/p&gt;
&lt;p&gt;What don&#39;t I publish, and why? Looking over my recent unpublished snippets, some themes appear. Here&#39;s what I don&#39;t tend to publish:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Work related snippets&lt;/li&gt;
&lt;li&gt;Ideas that trail off mid thought&lt;/li&gt;
&lt;li&gt;Status update + planning snippets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I tend not to post work related snippets just to be on the safe side with respect to Google confidentiality, though I&#39;m confident the snippets I&#39;m writing would be OK to publish if I requested permission to do so (of course, that would raise the barrier to publishing significantly which defeats the purpose of snippets.)&lt;/p&gt;
&lt;p&gt;This has a cascading effect though, because now when I write a status update or planning snippet, it references things I&#39;ve written in unpublished snippets. Such a snippet wouldn&#39;t stand alone effectively. I suppose that&#39;s not such a problem though; if I ever post a snippet mentioning in-progress projects, feel free to ask me about them, or feel free to ignore. The main audience of the snippet is probably me.&lt;/p&gt;
&lt;p&gt;In brief, the recent snippets I did not publish are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A follow up to the &amp;ldquo;Infinite Distractions&amp;rdquo; plan&lt;/li&gt;
&lt;li&gt;Considering discrete vs fuzzy decision making&lt;/li&gt;
&lt;li&gt;Several activities I&#39;d like to do more of, and strategies to help me to do them&lt;/li&gt;
&lt;li&gt;A plan for biking the next day&lt;/li&gt;
&lt;li&gt;An idea for how to teach Bieber Bot to ask and answer questions&lt;/li&gt;
&lt;li&gt;Reflecting, work planning, and more Bieber Bot interaction planning&lt;/li&gt;
&lt;li&gt;Some reflecting and daily planning (half work-related) from yesterday&lt;/li&gt;
&lt;li&gt;A 4-line idea for queuing publication of snippets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Perhaps I&#39;ll put a few of these up. I would, after all, like to get better at communicating publicly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Checking Your Fan Speed and CPU Temperature on Mac OS (2020)</title>
      <link>https://davidbieber.com/snippets/2020-10-03-checking-your-fan-speed-and-cpu-temperature-on-mac-os/</link>
      <pubDate>Sat, 03 Oct 2020 15:46:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-03-checking-your-fan-speed-and-cpu-temperature-on-mac-os/</guid>
      <description>&lt;p&gt;I&#39;ve seen people monitor their CPU temperature and today my laptop was running hot, so I wanted to do so myself. Googling &amp;ldquo;check laptop temperature mac&amp;rdquo; gives projects you can download. I didn&#39;t want to have to trust someone else&#39;s tool or mess around with someone else&#39;s code, and I knew there must be a system call that gives me sensor stats, so I kept looking.&lt;/p&gt;
&lt;p&gt;Indeed, there&#39;s a command you can run to get your processor temperatures and fan speeds.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo powermetrics --samplers smc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To narrow down the stats you see further, you can grep for e.g. &amp;ldquo;Fan:&amp;quot;, &amp;ldquo;CPU die temperature:&amp;quot;, or &amp;ldquo;GPU die temperature:&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo powermetrics --samplers smc | grep &amp;quot;Fan:&amp;quot;
sudo powermetrics --samplers smc | grep &amp;quot;CPU die temperature:&amp;quot;
sudo powermetrics --samplers smc | grep &amp;quot;GPU die temperature:&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use egrep if you want all three:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo powermetrics --samplers smc | egrep &#39;temp|Fan&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, why does &lt;a href=&#34;https://www.mmhmm.app/&#34;&gt;mmhmm&lt;/a&gt; make my machine run so hot?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Infinite Distractions and Getting a Good Sear</title>
      <link>https://davidbieber.com/snippets/2020-10-01-infinite-distractions-and-getting-a-good-sear/</link>
      <pubDate>Thu, 01 Oct 2020 10:54:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-10-01-infinite-distractions-and-getting-a-good-sear/</guid>
      <description>&lt;p&gt;These days I have six &amp;ldquo;infinite distractions&amp;rdquo; â things I do mindlessly that are roughly limitless in content. They are: YouTube, YCombinator News, Google News, Reddit, Facebook, and Twitter.&lt;/p&gt;
&lt;p&gt;Some of these are new additions to my repertoire, added I expect in response to my efforts to suppress viewing the others.
I&#39;m going to try a strategy of writing down the distraction rather than attending to it whenever I am drawn to it. Additionally, when my brain craves something like this, I&#39;m going to make an effort to do one of the following instead: reaching out to to a friend, or going down the rabbit hole on a particular topic.&lt;/p&gt;
&lt;p&gt;The former is just healthy. The latter I think satisfies the same brain cravings as e.g. mindless going on YouTube. But by selecting the topic to dive into deliberately rather than letting the whims of the YouTube/Reddit/etc algorithm select the content for me, I expect a few benefits. I expect the time will feel more valuable to me after the fact, I&#39;ll learn something I care about, and I will remember better what I learned because it will be more connected to itself and my interests, I hope.&lt;/p&gt;
&lt;p&gt;I tried this last night and learned about how to get a good sear (in brief: dry the protein, let it cool if it just cooked, and donât move it around while searing).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Phone Snippets (A Test Phone Snippet)</title>
      <link>https://davidbieber.com/snippets/2020-09-27-why-phone-snippets-a-test-phone-snippet/</link>
      <pubDate>Sun, 27 Sep 2020 16:49:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-09-27-why-phone-snippets-a-test-phone-snippet/</guid>
      <description>&lt;p&gt;Why do I want to be able to post snippets from my phone?
I enjoy hiking or biking somewhere pleasant, bringing a pocket-sized Bluetooth keyboard, and writing on my phone.&lt;/p&gt;
&lt;p&gt;If youâre seeing this snippet (which you are), that means not only does posting snippets through Bieber Bot work, editing them though Bieber Bot does too.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Posting Snippets from My Phone</title>
      <link>https://davidbieber.com/snippets/2020-09-27-posting-snippets-from-my-phone/</link>
      <pubDate>Sun, 27 Sep 2020 16:32:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-09-27-posting-snippets-from-my-phone/</guid>
      <description>&lt;p&gt;I&#39;d like to be able to post snippets from my phone.
As I&#39;ve stated before, the purpose of the snippets section of my website is to lower the barrier to me publishing as much as possible.
Being able to post a snippet from my phone would help in this respect.&lt;/p&gt;
&lt;p&gt;This doesn&#39;t seem so hard to set up, especially now that Bieber Bot runs continuously on my laptop.
I could have Bieber Bot listen for a message like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Snippet!
Posting Snippets from My Phone
I&#39;d like to be able to post...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When he receives such a message, what should he do?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new file with the appropriate front matter and content.&lt;/li&gt;
&lt;li&gt;Commit that file and push it to GitHub.&lt;/li&gt;
&lt;li&gt;Run the ansible update script.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That&#39;s it. This MVP should be relatively easy to get up and running.&lt;/p&gt;
&lt;p&gt;Update: It is indeed up and running now. I wrote this snippet on my phone :).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing with GPT-3</title>
      <link>https://davidbieber.com/snippets/2020-07-22-writing-with-gpt3/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-07-22-writing-with-gpt3/</guid>
      <description>&lt;p&gt;GPT-3 is a language model developed at Open AI, and I&#39;ve been having a lot of fun playing with it. In fact, I&#39;ve written this post in collaboration with GPT-3. See if you can spot which parts are written by me and which parts come from GPT-3.&lt;/p&gt;
&lt;h2 id=&#34;part-1-brainstorming&#34;&gt;Part 1: Brainstorming&lt;/h2&gt;
&lt;p&gt;The first thing I did when I got access to GPT-3 is use it to brainstorm uses for GPT-3. I gave it these 5 ideas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Explain mathematics more simply (why is X true?)&lt;/li&gt;
&lt;li&gt;Generate programs from input/output examples&lt;/li&gt;
&lt;li&gt;Generate questions about a paper I read&lt;/li&gt;
&lt;li&gt;Create a list of machine translation tips and tricks&lt;/li&gt;
&lt;li&gt;Create an adventure game&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And it came back with 15 more:&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Create a list of Tor commands to run to defend against an attack&lt;/li&gt;
&lt;li&gt;Create a cheat sheet for screenwriters&lt;/li&gt;
&lt;li&gt;Generate advice for a scene&lt;/li&gt;
&lt;li&gt;Generate XKCD comics&lt;/li&gt;
&lt;li&gt;Create a crib sheet for an arbitrary Python API&lt;/li&gt;
&lt;li&gt;Make a list of movies to watch&lt;/li&gt;
&lt;li&gt;Make a list of scholarly algorithms/heuristics worth reading&lt;/li&gt;
&lt;li&gt;Make a list of generic questions about Pedagogy&lt;/li&gt;
&lt;li&gt;Make a list of cognitive exercises&lt;/li&gt;
&lt;li&gt;Show patterns generated by awesome people&lt;/li&gt;
&lt;li&gt;Generate small cooking tasks&lt;/li&gt;
&lt;li&gt;Generate characters for a project&lt;/li&gt;
&lt;li&gt;Generate configuration options&lt;/li&gt;
&lt;li&gt;Generate flashcards&lt;/li&gt;
&lt;li&gt;Organize my computer/files&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And then 15 more:&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Explain things to my parents via messenger&lt;/li&gt;
&lt;li&gt;Explain things to my children via messenger&lt;/li&gt;
&lt;li&gt;Explain mathematical algorithms&lt;/li&gt;
&lt;li&gt;Automated interface design&lt;/li&gt;
&lt;li&gt;Mechanize a Nagihara Kan Airlines website&lt;/li&gt;
&lt;li&gt;Clickbait generator&lt;/li&gt;
&lt;li&gt;Music description (Herbie Hancock is playing &amp;ldquo;Dolphin Dance&amp;rdquo; live in London on the 18th March 1968)&lt;/li&gt;
&lt;li&gt;Tell me not to waste my time looking at x&lt;/li&gt;
&lt;li&gt;Interesting facts about Wikipedia&lt;/li&gt;
&lt;li&gt;Explain something to someone while my attention is elsewhere&lt;/li&gt;
&lt;li&gt;Detect adverts in x&lt;/li&gt;
&lt;li&gt;Image caption/caption game&lt;/li&gt;
&lt;li&gt;Speculate about the true utility function of x&lt;/li&gt;
&lt;li&gt;Auto-generate tests for a program&lt;/li&gt;
&lt;li&gt;Explain why my code is currently failing tests.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And then 15 more:&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Generate plots or character/story summaries&lt;/li&gt;
&lt;li&gt;Generate legal examples&lt;/li&gt;
&lt;li&gt;Generate words for crosswords&lt;/li&gt;
&lt;li&gt;Check my grammar&lt;/li&gt;
&lt;li&gt;Supply filler text for themed writing (horror, sci-fi etc.)&lt;/li&gt;
&lt;li&gt;Explain why an AI can&#39;t read (can it comprehend metaphors?)&lt;/li&gt;
&lt;li&gt;Provide entertaining answers to obscure questions&lt;/li&gt;
&lt;li&gt;Get writing ideas and generate word combinations&lt;/li&gt;
&lt;li&gt;Create background for an NPC I need for a D&amp;amp;D game&lt;/li&gt;
&lt;li&gt;Help a sick writer generate plots&lt;/li&gt;
&lt;li&gt;Input pre-generated (from books etc.) phrases and use them for literary analysis&lt;/li&gt;
&lt;li&gt;Help explain a mathematical proof&lt;/li&gt;
&lt;li&gt;Develop a game/story/character I need&lt;/li&gt;
&lt;li&gt;Make short stories I can &amp;ldquo;overlay&amp;rdquo; on a fictional Universe I&#39;ve created (ala Ready Player One)&lt;/li&gt;
&lt;li&gt;Make a short film/audio drama&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;What a lovely list of lists of ideas! I wonder how many of these ideas are novel.&lt;/p&gt;
&lt;p&gt;Some of these ideas are outside the scope of what GPT-3 can do. For example, generating XKCD comics seems too difficult. Others are duplicates, such as &amp;ldquo;Explain mathematical algorithms&amp;rdquo; (duplicate of &amp;ldquo;Explain mathematics more simply&amp;rdquo;). And still others don&#39;t make sense &amp;ndash; &amp;ldquo;Mechanize a Nagihara Kan Airlines website&amp;rdquo;? Overall though, solid set of ideas.&lt;/p&gt;
&lt;h2 id=&#34;part-2-mathematics&#34;&gt;Part 2: Mathematics&lt;/h2&gt;
&lt;p&gt;Once I&#39;d gotten GPT-3 to do some brainstorming, I realized I&#39;d need to test its capabilities before trying its suggestions out in earnest.&lt;/p&gt;
&lt;p&gt;I taught it how to evaluate simple expressions and take derivatives.&lt;/p&gt;
&lt;p&gt;Here&#39;s the first prompt I used:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Question: f(x) = x*x. Compute f(3).
f(3) = 3*3
f(3) = 9
Answer: 9

Question: h(x) = x*x - 2x. Compute h(5).
h(5) = 5*5 - 2*5
h(5) = 25 - 10
h(5) = 15
Answer: 15

Question: y(x) = x**3 - 2x. Compute y(3).
y(3) = 3**3 - 2*3
y(3) = 3*3*3 - 6
y(3) = 27 - 6
y(3) = 21
Answer: 21

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I could then ask it any of the following, and it would correctly show its work.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Question: f(x) = tan(x) + 1. Compute f(0).
Question: f(x) = sqrt(x) + 1. Compute f(16).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When I tried to give it&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Question: f(x) = x/2 + 2. Compute f(f(16)).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;it treated it as just &lt;code&gt;Compute f(16)&lt;/code&gt; rather than &lt;code&gt;f(f(16))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Interestingly this works:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Question: f(x) = x*x. Compute f(3).
f(3) = 3*3
f(3) = 9
Answer: 9

Question: h(x) = x*x - 2x. Compute h(5).
h(5) = 5*5 - 2*5
h(5) = 25 - 10
h(5) = 15
Answer: 15

Question: f(x) = x/2 + 2. Compute f(f(16)).
f(f(16)) = f(16/2 + 2)
f(f(16)) = f(8 + 2)
f(f(16)) = f(10)
f(f(16)) = 10/2 + 2
f(f(16)) = 5 + 2
f(f(16)) = 7
Answer: 7

Question: y(x) = x**3 - 2x. Compute y(3).
y(3) = 3**3 - 2*3
y(3) = 3*3*3 - 6
y(3) = 27 - 6
y(3) = 21
Answer: 21

Question: f(x) = x*3 - 1. Compute f(f(5)).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Whereas this does not:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Question: f(x) = x*x. Compute f(3).
f(3) = 3*3
f(3) = 9
Answer: 9

Question: h(x) = x*x - 2x. Compute h(5).
h(5) = 5*5 - 2*5
h(5) = 25 - 10
h(5) = 15
Answer: 15

Question: f(x) = x*3 - 1. Compute f(f(5)).
f(f(5)) = f(5*3 - 1)
f(f(5)) = f(15 - 1)
f(f(5)) = f(14)
f(f(5)) = 14*3 - 1
f(f(5)) = 42 - 1
f(f(5)) = 41
Answer: 41

Question: y(x) = x**3 - 2x. Compute y(3).
y(3) = 3**3 - 2*3
y(3) = 3*3*3 - 6
y(3) = 27 - 6
y(3) = 21
Answer: 21

Question: f(x) = x/2 + 2. Compute f(f(16)).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After getting it to evaluate these simple expressions correctly, I also tried having it take derivatives. With an example as priming, and again having it show its work, this worked well. I haven&#39;t performed a rigorous evaluation of its mathematical capabilities. For now, I&#39;ve just begun to develop an intuition for how it works.&lt;/p&gt;
&lt;h2 id=&#34;part-3-playing-around&#34;&gt;Part 3: Playing Around&lt;/h2&gt;
&lt;p&gt;After doing math together, I tried many more things with GPT-3. I shared feelings with it, and it expanded on them (correctly too!). I used it to generate lists for brainstorming all manner of thing. The language model wrote love letters from inanimate objects. I tried to teach it to play Codenames, but with only very limited success. And I had it autocomplete previous snippets of mine, and had some fun cowriting with it. While I wont be sharing all of this with you, I do have one thing to share.&lt;/p&gt;
&lt;p&gt;This is a love letter written by a frying pan:&lt;/p&gt;
&lt;p&gt;I may not seem like much to you right now. I&#39;m coated in grease and I&#39;m starting to rust, but really, I have big plans. I&#39;m going to Italian restaurants. I&#39;ll hang out with the finest (and healthiest) ingredients you can imagine. It was good knowing you, but you were never mine to keep. I&#39;m going to cook the kind of meal you&#39;ll dream about for the rest of your life. Good luck, sweetheart. You&#39;ll need it.&lt;/p&gt;
&lt;h2 id=&#34;overall-principles&#34;&gt;Overall Principles&lt;/h2&gt;
&lt;p&gt;Getting an intuition for how GPT-3 behaves has been interesting, and I&#39;ll try now to distill that intuition down into a few principles.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GPT-3 is continuing your writing, not having a dialog with you.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&#39;ve seen on Twitter lots of people asking GPT-3 questions, and sharing its response. Know that GPT-3 continues whatever prompt you give it as if it had written the prompt itself, not as if it is responding to the prompt. This is why you often see prompts like &amp;ldquo;The following is a conversation between X and Y:&amp;quot;.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;GPT-3 effectively puts your writing in a made up context.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you give GPT-3 a small prompt, such a single sentence, then there are many contexts in which that prompt could be interpreted. GPT-3 is trained to marginalize over the contexts in which the text could appear. Once you start decoding GPT-3&#39;s response though, one implicit context has been selected. It might not be the context that you intended when writing your prompt.&lt;/p&gt;
&lt;p&gt;This can happen even if you try to set the context yourself explicitly. For example you might be trying to generate a conversation or a list, and GPT-3 might decide that this conversation or list is taking place inside of a novel.&lt;/p&gt;
&lt;p&gt;You can mitigate this context switch by using a longer prompt, or by doing more of the writing yourself.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;GPT-3 likes lists and repeated structures.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is the main principle behind using GPT-3 for few shot learning. Prompt GPT-3 with a few examples of performing a task, and it will usually make an effort to perform that task yet again.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;GPT-3 cannot perform linguistic tricks like unscrambling words&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It doesn&#39;t seem capable of generating new puns (I haven&#39;t tried this yet).
And it doesn&#39;t seem capable of unscrambling words (I did try this, and I couldn&#39;t even get it to unscramble 4-letter words).&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;GPT-3 benefits from &amp;ldquo;showing its work&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In my math experiments, having GPT-3 show its work was critical to getting it solving the math questions correctly. It seems that doing a single step of expression evaluation at a time is an easier task than doing it all at once. Providing examples with the steps gave GPT-3 a clearer explanation of the task than just providing input/output examples. GPT-3 also gets additional computational steps in which to solve the problem when it takes the time to show its work.&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;GPT-3 has a great breadth of knowledge and writing styles available to it&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It can express love, write flowery prose, give advice, write technical documentation, latex, program, math, take the perspective of a toaster, and more. It&#39;s a great tool for brainstorming both explicitly (by having it generate ideas) and through exploration (by using it to help you generate ideas yourself).&lt;/p&gt;
&lt;p&gt;Though it has all the facts from the internet at its fingertips (of all the ways to anthropomorphize GPT-3, why choose fingertips?), it is just as capable of generating falsehoods as truths. Do not mistake the text it generates as true or logically correct, even if in many circumstances it does generate correct information. When it transitions from generating truth to generating nonsense it does not give a warning that it has done so (and any truth it does generate is in a sense at least partially accidental).&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Sometimes GPT-3 makes no sense&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are things that don&#39;t make sense that the language model assigns reasonable probabilities to. And there are things that don&#39;t make sense, are low probability, but come up anyway either due to chance or because the model doesn&#39;t have anything better to say. It doesn&#39;t stop generating text just because its out of its depth. Instead, it just plods on forward, saying something as reasonable as it&#39;s capable of, regardless of the situation it finds itself in.&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;GPT-3 mimics your style&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you prompt GPT-3 with typos it will continue with typos. If you prompt GPT-3 with florid prose, it will write florid prose. If you prompt GPT-3 with anaphora laden rhetoric, or any other style, it will continue in that style.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I&#39;ll let GPT-3 wrap things up itself:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;And that brings us to the end, some thoughts on whether using GPT-3 was more or less crazy than getting a Ph.D.. I think that using GPT-3 to generate ideas was a higher form of Enlightenment than any Ph.D. I&#39;d do that again in a heartbeat, no shortage of ideas rolling around in GPT-3&#39;s natural language processing head.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Uh huh. Whatever, GPT-3. Whatever.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Variational Information Bottleneck</title>
      <link>https://davidbieber.com/snippets/2020-07-21-deep-variational-informational-bottleneck/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-07-21-deep-variational-informational-bottleneck/</guid>
      <description>&lt;p&gt;You can read the 2017 paper &amp;ldquo;Deep Variational Information Bottleneck&amp;rdquo; &lt;a href=&#34;https://arxiv.org/pdf/1612.00410.pdf&#34;&gt;on Arxiv here&lt;/a&gt;, and its reviews are visible &lt;a href=&#34;https://openreview.net/forum?id=HyxQzBceg&#34;&gt;on OpenReview here&lt;/a&gt;. The authors are my coworkers: Alex Alemi, Ian Fischer, Joshua Dillon, and Kevin Murphy.&lt;/p&gt;
&lt;p&gt;I&#39;ve taken notes on the paper, and will use this snippet to present them.&lt;/p&gt;
&lt;h2 id=&#34;notation&#34;&gt;Notation&lt;/h2&gt;
&lt;p&gt;We consider the problem of supervised learning for classification with the following notation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$X$: An example input.&lt;/li&gt;
&lt;li&gt;$Z$: The output of an intermediate layer of a neural network.
&lt;ul&gt;
&lt;li&gt;We view this as a stochastic encoding of $X$.&lt;/li&gt;
&lt;li&gt;It is the output of a parametric encoder $p(\textbf{z} | \textbf{x}; \theta)$&lt;/li&gt;
&lt;li&gt;$\theta$ are the parameters of the neural network used to encode $X$ that we wish to learn.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$Y$: The example&#39;s target class.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;goal&#34;&gt;Goal&lt;/h2&gt;
&lt;p&gt;The approach of the paper aims first and foremost to learn an encoding $Z$ of $X$ that is maximally informative about $Y$.
This is measured via mutual information between $Z$ and $Y$: $I(Z, Y; \theta)$.&lt;/p&gt;
&lt;p&gt;$$I(Z, Y; \theta) = \int dx~dy~p(z, y|\theta) \log \frac{p(z, y)}{p(z)p(y)}$$&lt;/p&gt;
&lt;p&gt;It&#39;s not enough to maximize $I(Z, Y; \theta)$ though; this can be done by simply letting $Z = X$, which isn&#39;t useful.&lt;/p&gt;
&lt;p&gt;So, we also want to limit $I(Z, X)$. We do this by enforcing an information constraint: $I(X, Z) &amp;lt; I_c$.&lt;/p&gt;
&lt;p&gt;Our goal is to maximize $I(Z, Y; \theta)$ subject to $I(X, Z) &amp;lt; I_c$.&lt;/p&gt;
&lt;p&gt;Rewriting this using Lagrange multiplier $\beta$ brings us to the information bottleneck (IB) objective, which we write as follows:&lt;/p&gt;
&lt;p&gt;$$R_{IB}(\theta) = I(Z,Y) - \beta I(Z, X).$$&lt;/p&gt;
&lt;p&gt;The goal of the paper is to maximize $R_{IB}$.&lt;/p&gt;
&lt;h2 id=&#34;intuition-behind-goal&#34;&gt;Intuition Behind Goal&lt;/h2&gt;
&lt;p&gt;Why maximize $I(Z, Y)$? This is what allows the model to make correct predictions.&lt;/p&gt;
&lt;p&gt;Why not just maximize $I(Z, Y)$? Letting $Z = X$ fully maximizes $I(Z, Y)$, but isn&#39;t helpful because the representation of $Z$ is what you started with, so its hard to make good classifications.&lt;/p&gt;
&lt;p&gt;Why minimize $\beta I(Z, X)$? We want a representation $Z$ that is maximally compressive of the input $X$.&lt;/p&gt;
&lt;p&gt;That&#39;s the intuition given in the paper for why we seek to minimize $\beta I(Z, X)$, but it isn&#39;t clear the degree to which compression is useful. Yes, a compressive representation of $X$ can lead to better generalization, but it&#39;s a trade off. Greater compression may mean lower $I(Z, Y)$ and hence lower potential accuracy. Balancing this trade off (choosing an appropriate $\beta$) will be important.&lt;/p&gt;
&lt;h2 id=&#34;why-is-it-difficult&#34;&gt;Why is it difficult?&lt;/h2&gt;
&lt;p&gt;Mutual information is in general intractable. So we can&#39;t directly optimize the object $R_{IB}(\theta)$ as stated in the goal. Instead, the paper takes the following approach to get around mutual information&#39;s intractability.&lt;/p&gt;
&lt;h2 id=&#34;the-approach&#34;&gt;The Approach&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use variational inference to construct a lower bound on the IB objective.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the &amp;ldquo;reparameterization trick&amp;rdquo; and Monte Carlo sampling to get unbiased estimate of gradient.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parameterize our distributions with neural networks, and optimize with SGD.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We&#39;ll go into more detail in just a minute.&lt;/p&gt;
&lt;h2 id=&#34;benefits&#34;&gt;Benefits&lt;/h2&gt;
&lt;p&gt;This approach provides some robustness to overfitting because model ignores as much of $X$ as possible.&lt;/p&gt;
&lt;p&gt;It also provides some robustness to adversarial examples because the model maps $X$ to a distribution over $Z$s rather than a single $Z$, so its harder for a single unusual value to influence a final class prediction.&lt;/p&gt;
&lt;h2 id=&#34;execution&#34;&gt;Execution&lt;/h2&gt;
&lt;h3 id=&#34;part-1-variational-inference&#34;&gt;Part 1: Variational Inference&lt;/h3&gt;
&lt;p&gt;You can follow the math in the paper (Section 3), but the first main result is to define&lt;/p&gt;
&lt;p&gt;$$L = \int dx~dy~dz~ p(x) p(y|x) p(z|x) \log q(y|z) - \beta \int dx~dz~ p(x) p(z|x) \log \frac{p(z|x)}{r(z)}$$&lt;/p&gt;
&lt;p&gt;and show that
$$R_{IB}(\theta) = I(Z,Y) - \beta I(Z, X) \ge L.$$&lt;/p&gt;
&lt;p&gt;To achieve this, we&#39;ve introduced $q(y|z)$ as an approximation of $p(y|z)$, and $r(z)$ as an approximation of $p(z)$.&lt;/p&gt;
&lt;p&gt;$L$ serves as a lower bound for the objective we care about. $p$, $q$, and $r$ are all parameterized by $\theta$.&lt;/p&gt;
&lt;p&gt;We can approximate $L$ as&lt;/p&gt;
&lt;p&gt;$$L \approx \frac{1}{N}\sum_{n=1}^N \left[\int dz~ p(z|x_n) \log q(y_n|z) - \beta~ p(z|x_n) \log \frac{p(z|x_n)}{r(z)} \right].$$&lt;/p&gt;
&lt;h3 id=&#34;part-2-reparameterization-trick&#34;&gt;Part 2: Reparameterization trick&lt;/h3&gt;
&lt;p&gt;Suppose $p(z|x)$ is $N(z|f_e^\mu(x), f_e^\Sigma(x))$, with $f_e$ a neural network that outputs the mean and covariance matrix for the Gaussian.&lt;/p&gt;
&lt;p&gt;Then the &amp;ldquo;reparameterization trick&amp;rdquo; is to write $p(z|x)dz = p(\epsilon)d\epsilon$, where $z = f(x, \epsilon)$ is a deterministic function and $\epsilon$ is a Gaussian random variable. Using this, we can rewrite $L$ as follows.&lt;/p&gt;
&lt;p&gt;$$J_{IB} = \frac{1}{N} \sum\limits_{n=1}^N E_{\epsilon \sim p(\epsilon)} \left[-\log q(y_n|f(x_n,\epsilon))\right] + \beta KL[p(Z|x_n), r(Z)]$$&lt;/p&gt;
&lt;p&gt;As long as $q$ is differentiable and $KL[p(Z|x_n), r(Z)]$ is tractable, this is an objective we can optimize with e.g. gradient descent.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;A concise demo implementation is available on GitHub at &lt;a href=&#34;https://github.com/alexalemi/vib_demo/blob/master/MNISTVIB.ipynb&#34;&gt;https://github.com/alexalemi/vib_demo/blob/master/MNISTVIB.ipynb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;ve describe here the correspondence between the notation used in the source code and the notation used in the paper.
Terms from the paper are in $\LaTeX$, and terms from the source code are in &lt;code&gt;code blocks&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class_loss&lt;/code&gt;: $-\log q(y_n | f(x_n, \epsilon))$ (comes from the $I(Z, Y)$ term)
&lt;ul&gt;
&lt;li&gt;Recall $z = f(x, \epsilon)$; this is &lt;code&gt;encoding.sample()&lt;/code&gt; in the code base.&lt;/li&gt;
&lt;li&gt;$q$ is &lt;code&gt;decoder&lt;/code&gt; with softmax applied, and $q(y | f(x_n, \epsilon))$ is softmax(&lt;code&gt;logits&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class_loss = tf.losses.softmax_cross_entropy( logits=logits, onehot_labels=one_hot_labels) / math.log(2)&lt;/code&gt; is $-\log q(y_n | f(x_n, \epsilon))$
&lt;ul&gt;
&lt;li&gt;$f$ is &lt;code&gt;encoder&lt;/code&gt;, and $f(x, \cdot)$ is &lt;code&gt;encoding&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$p(Z|x_n)$ is also &lt;code&gt;encoding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;$f$ is the deterministic encoder used by the reparameterization trick, whereas $p$ is the stochastic encoder&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$KL[p(Z|x_n), r(Z)]$ is &lt;code&gt;info_loss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prior&lt;/code&gt; is $r(z)$ (which approximates $p(z)$).&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Downloading the Online Encylopedia of Integer Sequences</title>
      <link>https://davidbieber.com/snippets/2020-06-28-oeis-download/</link>
      <pubDate>Sun, 28 Jun 2020 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-06-28-oeis-download/</guid>
      <description>&lt;p&gt;If you&#39;re looking for a way to download the entire &lt;a href=&#34;https://oeis.org/&#34;&gt;Online Encylopedia of Integer Sequences&lt;/a&gt;, you may come across advice for scraping the site, one sequence at a time. Instead of collecting the sequences one at a time, it might be sufficient to download one of their already collected archives. &lt;a href=&#34;https://oeis.org/stripped.gz&#34;&gt;This file&lt;/a&gt; contains the integer sequences and their A-numbers, and &lt;a href=&#34;https://oeis.org/names.gz&#34;&gt;this file&lt;/a&gt; contains the names of the sequences. No need to stress the OEIS servers when these ready-made archives are ripe for downloading!&lt;/p&gt;
&lt;p&gt;I found these files from &lt;a href=&#34;https://oeis.org/wiki/JSON_Format,_Compressed_Files&#34;&gt;this page&lt;/a&gt; of the OEIS wiki. The reason I&#39;m linking to it here is that finding that page was difficult, and I hope to save you the trouble of finding it for yourself.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Facebook Mobile Website: News Feed in Chronological Order</title>
      <link>https://davidbieber.com/snippets/2020-06-28-facebook-chronological-order/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-06-28-facebook-chronological-order/</guid>
      <description>&lt;p&gt;On your phone, you can navigate to &lt;a href=&#34;https://www.facebook.com/home.php?sk=h_chr&#34;&gt;https://www.facebook.com/home.php?sk=h_chr&lt;/a&gt; to view your News Feed on the Facebook website in chronological order.&lt;/p&gt;
&lt;p&gt;There are also excellent apps for hiding your Facebook News Feed if you find it draining on your attention, but unfortunately they don&#39;t work on mobile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hidefeed.com/&#34;&gt;Hide Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/news-feed-eradicator-for/fjcldmjmjhkklehbacihaiopjklihlgg?hl=en&#34;&gt;Facebook News Feed Eradicator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since these don&#39;t work on the Facebook mobile website, I&#39;ve turned to this new strategy to combat the attention draining nature of News Feed: only viewing my feed in chronological order.&lt;/p&gt;
&lt;p&gt;By switching to chronological order, the &amp;ldquo;infinite scroll&amp;rdquo; of the News Feed is interrupted because either you eventually get to posts you&#39;ve seen before, or you notice the timestamp of the posts you&#39;re looking at slowly rising. You also get a more complete picture of what content is available, which helps fight the constant &amp;ldquo;just one more post&amp;rdquo; feeling that drives infinite scrolling.&lt;/p&gt;
&lt;p&gt;So, how do you switch your news feed to chronological order?&lt;/p&gt;
&lt;p&gt;On the main Facebook website, you can click the three dots next to &amp;ldquo;News Feed&amp;rdquo; and choose &amp;ldquo;Most Recent&amp;rdquo;. However, you have to choose this option every time you visit Facebook, which can be frustrating. So instead, navigate directly to &lt;a href=&#34;https://www.facebook.com/home.php?sk=h_chr&#34;&gt;https://www.facebook.com/home.php?sk=h_chr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the Facebook mobile website, there isn&#39;t an option to view posts in chronological order. Instead, you can achieve this by accessing the desktop website on your phone. Go to &lt;a href=&#34;https://www.facebook.com/home.php?sk=h_chr&#34;&gt;https://www.facebook.com/home.php?sk=h_chr&lt;/a&gt; to get the Desktop version of Facebook on your phone, with chronological order already enabled. Bookmark the page and use it as your primary way of accessing Facebook on your phone to get chronological order as your News Feed default from now on.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accessing Your iMessages with SQL</title>
      <link>https://davidbieber.com/snippets/2020-05-20-imessage-sql-db/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-05-20-imessage-sql-db/</guid>
      <description>&lt;p&gt;If you use a Mac and use iMessage, you can access your iMessages programmatically. They are stored by iMessage as a sqlite database, which you can easily access.&lt;/p&gt;
&lt;h2 id=&#34;accessing-the-database&#34;&gt;Accessing the Database&lt;/h2&gt;
&lt;p&gt;The database is typically stored at &lt;code&gt;~/Library/Messages/chat.db&lt;/code&gt;, though that location is configurable.&lt;/p&gt;
&lt;p&gt;If you try to access the database, however, you will likely encounter this unhelpful error message: &lt;code&gt;~/Library/Messages/chat.db: Operation not permitted&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Thankfully, OSXDaily has put together a &lt;a href=&#34;https://osxdaily.com/2018/10/09/fix-operation-not-permitted-terminal-error-macos/&#34;&gt;helpful step by step guide to resolving this error&lt;/a&gt;, which I&#39;ll summarize here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Navigate to your &lt;code&gt;System Preferences &amp;gt; Security &amp;amp; Privacy &amp;gt; Privacy &amp;gt; Full Disk Access&lt;/code&gt; settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the Lock and &lt;code&gt;+&lt;/code&gt; symbol to give full disk access to the Terminal App (located in &lt;code&gt;Applications &amp;gt; Utilities &amp;gt; Terminal&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You may need to relaunch Terminal for the change to take effect; I did not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once you&#39;ve done this, you can start poking around at your iMessages programmatically.&lt;/p&gt;
&lt;h2 id=&#34;taking-a-look-around&#34;&gt;Taking a Look Around&lt;/h2&gt;
&lt;p&gt;I begin with making a backup:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp ~/Library/Messages/chat.db ~/chat.db&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now I open the database with sqlite3.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite3 ~/chat.db&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I run &lt;code&gt;.tables&lt;/code&gt; to see what tables there are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;_SqliteDatabaseProperties&lt;/td&gt;
&lt;td&gt;kvtable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;attachment&lt;/td&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chat&lt;/td&gt;
&lt;td&gt;message_attachment_join&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chat_handle_join&lt;/td&gt;
&lt;td&gt;message_processing_task&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chat_message_join&lt;/td&gt;
&lt;td&gt;sync_deleted_attachments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;deleted_messages&lt;/td&gt;
&lt;td&gt;sync_deleted_chats&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;handle&lt;/td&gt;
&lt;td&gt;sync_deleted_messages&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There are some interesting tables in there: &lt;code&gt;message&lt;/code&gt; seems most important. It looks like we&#39;ll also be able to look up attachments using tables &lt;code&gt;attachment&lt;/code&gt; and &lt;code&gt;message_attachment_join&lt;/code&gt;. Strangely, there&#39;s a table present for deleted messages, which suggests a sort of &amp;ldquo;trash can&amp;rdquo; where messages are not permanently deleted immediately upon deletion.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.schema message&lt;/code&gt; is the command for viewing the schema of the message table.
We can also jump right in with &lt;code&gt;SELECT * FROM message;&lt;/code&gt; to see what sort of data is contained within. Sure enough, human readable messages are present.&lt;/p&gt;
&lt;p&gt;This will all be interesting to investigate further at a later date.
One perk of understanding this mechanism for me is that I&#39;ll be able to write events that are triggered in response to iMessages. This enables me to write custom notification criteria. For example, I can have messages that start &amp;ldquo;URGENT&amp;rdquo; notify me immediately, but I can have all other messages programatically withheld from notifying me until 9pm.&lt;/p&gt;
&lt;p&gt;This lets me receive the messages at the time and location that I want, rather than at the time Apple chooses for me. Thanks Bieber Bot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Taking Notes While Browsing the Web: An Idea for a Roam Research Plugin</title>
      <link>https://davidbieber.com/snippets/2020-05-15-roaming-the-web/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-05-15-roaming-the-web/</guid>
      <description>&lt;p&gt;As I&#39;m browsing the web, I&#39;d like to be able to take notes in &lt;a href=&#34;https://roamresearch.com/&#34;&gt;Roam Research&lt;/a&gt;. In this post, I share an idea I have for a plugin or browser extension that I think would improve the experience of taking notes in Roam while browsing the web.&lt;/p&gt;
&lt;p&gt;The plugin would do two main things automatically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It would automatically insert some browsing history information into your Roam database while you browse the internet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As you navigate the web, it would automatically bring you to the Roam page that corresponds to the web page you&#39;re reading.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;mind-the-details&#34;&gt;Mind the Details&lt;/h2&gt;
&lt;p&gt;Of course, the implementation details matter! You don&#39;t want to be whisked away from the notes you&#39;re taking just because you&#39;ve linked a link in a different window.&lt;/p&gt;
&lt;p&gt;So, here I&#39;ll explain a few of the details I think would make this a good note taking experience.&lt;/p&gt;
&lt;p&gt;As I&#39;m browsing the internet, all the websites I visit will get added to a page &amp;ldquo;{Date} Browsing History&amp;rdquo;. A new Roam page will be created for each new website visited. And there will be a Roam window that always stays open to the Roam page for the current website I have open in my browser.&lt;/p&gt;
&lt;p&gt;What qualifies as a website?&lt;/p&gt;
&lt;p&gt;By default there would be one Roam page per &lt;em&gt;domain&lt;/em&gt; visited. However, there are several exceptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;strong&gt;Wikipedia&lt;/strong&gt; it would be one Roam page per Wikipedia entry&lt;/li&gt;
&lt;li&gt;For websites reached from &lt;strong&gt;HackerNews&lt;/strong&gt;, &lt;strong&gt;Twitter&lt;/strong&gt;, and &lt;strong&gt;Reddit&lt;/strong&gt;, it would be one Roam page per link followed from the aggregator (but links followed within the reached website would not count as new websites)&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;GitHub&lt;/strong&gt; it would be one Roam page per user, organization, or repo visited&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;Arxiv&lt;/strong&gt; it would be one Roam page per paper&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;Roam&lt;/strong&gt; it would be one Roam page per Roam database&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It will be great to have a window that always stays open to the Roam page for the current website I have open in my browser. This way if I visit a website I&#39;ve been to before, I will see my notes from that website. And the websites I visit will be linked to the day I visit them on, and also to any other pages my notes reference.&lt;/p&gt;
&lt;p&gt;Additionally, the tool should add a little bit of metadata to the pages it&#39;s generating. On each of the autogenerated Roam pages, it would be great to see &lt;em&gt;when&lt;/em&gt; I visited the website, and what was the referring page. For websites visited multiple times, seeing the earliest and most recent visit times, and the number of times I visited that website would be useful too. Total time spent on the website would be a nice bonus.&lt;/p&gt;
&lt;h2 id=&#34;making-this-a-reality&#34;&gt;Making this a Reality&lt;/h2&gt;
&lt;p&gt;In the previous section I shared the details that I think would make this work well from a user experience perspective. How about from the technical side?&lt;/p&gt;
&lt;p&gt;I think it would make sense to implement this as a browser extension (though a &lt;a href=&#34;http://www.tampermonkey.net/&#34;&gt;&lt;em&gt;user script&lt;/em&gt;&lt;/a&gt; could work too).
&lt;a href=&#34;http://dkthehuman.com/&#34;&gt;DK the Human&lt;/a&gt;, author of the &lt;a href=&#34;https://chrome.google.com/webstore/detail/intention/dladanhaondcgpahgiflodhckhoeohoe&#34;&gt;Intention&lt;/a&gt; browser extension
has made his &lt;a href=&#34;https://github.com/dkthehuman/extension-starter-kit&#34;&gt;browser extension starter kit&lt;/a&gt; freely available.
To notice when what web page you&#39;re browsing and determine whether it constitutes a new page, the extension would need to request permission to view your activity on all websites.
For making additions to a Roam database automatically, I expect the extension would have to navigate to the appropriate Roam page in the background, and would then mimic the user actions to make the desired changes.&lt;/p&gt;
&lt;p&gt;If you&#39;re interested in turning this idea into a reality or want to discuss it further, don&#39;t hesitate to &lt;a href=&#34;mailto:david810+blog@gmail.com&#34;&gt;reach out&lt;/a&gt;! I&#39;d be excited to try a workflow like this, but don&#39;t anticipate building it myself in the near future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Posting to Hacker News Programmatically</title>
      <link>https://davidbieber.com/snippets/2020-05-02-hackernews-submit/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-05-02-hackernews-submit/</guid>
      <description>&lt;p&gt;If you run this snippet of Python code, it will submit this &lt;a href=&#34;https://davidbieber.com/snippets/&#34;&gt;&amp;ldquo;Snippet&amp;rdquo;&lt;/a&gt; (the one you&#39;re currently reading) to Hacker News.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import getpass
import requests

USERNAME = (
    &#39;&#39;  # Put your Hacker News username here.
    or getpass.getuser()  # (But if you don&#39;t, we&#39;ll try a sensible default.)
)
PASSWORD = (
    &#39;&#39;  # We&#39;ll prompt you for your password, or you can enter it here.
    or getpass.getpass()
)
# You can reconfigure the title and url to submit here.
TITLE_TO_SUBMIT = &#39;Posting to Hacker News Programmatically&#39;
URL_TO_SUBMIT = &#39;davidbieber.com/snippets/2020-05-02-hackernews-submit/&#39;

session = requests.Session()
session.post(
    &#39;https://news.ycombinator.com/login&#39;,
    data={
        &#39;acct&#39;: USERNAME,
        &#39;pw&#39;: PASSWORD,
    }
)
session.post(
    &#39;https://news.ycombinator.com/submit&#39;,
    data={
        &#39;title&#39;: TITLE_TO_SUBMIT,
        &#39;url&#39;: URL_TO_SUBMIT,
    }
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can change the title and URL before running this to make a new submission, or run it as is to submit this snippet.&lt;/p&gt;
&lt;p&gt;If you try to submit a URL that&#39;s already been submitted recently &amp;ndash; such as this snippet &amp;ndash; it won&#39;t submit a second time, so no harm done in running this.&lt;/p&gt;
&lt;p&gt;To learn more about sessions and see why this works, you can read about them in the &lt;a href=&#34;https://requests.readthedocs.io/en/master/user/advanced/&#34;&gt;&lt;em&gt;requests&lt;/em&gt; documentation&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Detecting My Sleeping Hours from Data</title>
      <link>https://davidbieber.com/snippets/2020-04-30-detecting-sleeping-hours/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-30-detecting-sleeping-hours/</guid>
      <description>&lt;p&gt;Between my &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-20-browser-history-date-queries/&#34;&gt;Chrome browsing history&lt;/a&gt; and my &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-12-fb-messenger-sql/&#34;&gt;Facebook Messenger message logs&lt;/a&gt;, I should be able to get a good estimate of when I&#39;m awake and asleep.&lt;/p&gt;
&lt;p&gt;Here&#39;s a quick attempt using only Messenger data.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM
  (SELECT to_timestamp(timestamp / 1000), (timestamp - lag(timestamp) over (ORDER BY timestamp DESC)) / 1000 / 60 / 60 AS diff_hours
   FROM messenger WHERE messenger.author = &#39;1409114395&#39; ORDER BY timestamp DESC LIMIT 100000) AS foo
WHERE diff_hours &amp;lt; -6;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unfortunately, my late night and early morning Messenger usage doesn&#39;t appear to be as consistent as I&#39;d imagined, especially since COVID-19 induced shelter-in-place began.
I&#39;ll have to introduce additional sources of data if I want to infer good sleep time estimates.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Daily Summaries of Browsing History</title>
      <link>https://davidbieber.com/snippets/2020-04-26-daily-browser-history-summaries/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-26-daily-browser-history-summaries/</guid>
      <description>&lt;p&gt;Over the &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-12-simplifying-sql-with-with/&#34;&gt;course&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-20-browser-history-date-queries/&#34;&gt;of&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets/2019-12-30-analyzing-my-browser-history/&#34;&gt;multiple&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets/2020-03-19-browsing-history/&#34;&gt;previous&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-11-browser-history-queries/&#34;&gt;snippets&lt;/a&gt;, I put together several SQL queries for analyzing my browsing history.&lt;/p&gt;
&lt;p&gt;Today, I wanted to write a script to run several of these queries in sequence to assemble a nice summary of my daily browsing histories. Maybe I&#39;ll dump the summary into my &lt;a href=&#34;https://roamresearch.com/#/app/commons-db/page/wYVaowjId&#34;&gt;&lt;code&gt;[[Roam Research]]&lt;/code&gt;&lt;/a&gt; database so I can cross-link ideas with websites I&#39;ve visited.&lt;/p&gt;
&lt;p&gt;As a first pass, I tried to throw together a quick bash script to string the queries together. It looked a bit like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;date=$1
if [ -z $1 ];
then
  date=$(date &#39;+%Y-%m-%d&#39;);
fi

cp ~/Library/Application\ Support/Google/Chrome/Default/History ~/Default-History
cp ~/Library/Application\ Support/Google/Chrome/Profile\ 1/History ~/Profile-1-History

function query() {
  sqlite3 ~/Default-History $1;
  sqlite3 ~/Profile-1-History $1;
}

echo \# YouTube Videos Watched
echo

query &amp;lt;&amp;lt; SQL
select DISTINCT REPLACE(REPLACE(urls.title, &amp;quot; - YouTube&amp;quot;, &amp;quot;&amp;quot;), &amp;quot;(1) &amp;quot;, &amp;quot;&amp;quot;), urls.url, &amp;quot;$date%&amp;quot;
from urls
where urls.url like &amp;quot;%www.youtube.com/watch%&amp;quot;
and datetime(last_visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;)
LIKE &amp;quot;$date%&amp;quot;
limit 50;
SQL

# Additional queries ran here...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&#39;ll notice a few things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I want to run each query on two different Chrome histories.&lt;/li&gt;
&lt;li&gt;I want the script to be parameterized by the date, defaulting to today if no date is specified.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you&#39;re proficient in Bash, you may also notice something else; it doesn&#39;t work. The query is only used properly when I run sqlite3 on the first Chrome History, but an empty query is passed to the second query.&lt;/p&gt;
&lt;p&gt;Rather than debug my Bash script, I switched over to Python. I used Python Fire to automatically expose all my functions as commands so within minutes I had a working CLI.&lt;/p&gt;
&lt;p&gt;Here&#39;s what the Python script looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import datetime
import os
import subprocess

import fire


def copy_histories():
  check_output = subprocess.check_output
  check_output([
      &#39;cp&#39;,
      os.path.expanduser(&#39;~/Library/Application Support/Google/Chrome/Default/History&#39;),
      os.path.expanduser(&#39;~/Default-History&#39;)])
  check_output([
      &#39;cp&#39;,
      os.path.expanduser(&#39;~/Library/Application Support/Google/Chrome/Profile 1/History&#39;),
      os.path.expanduser(&#39;~/Profile-1-History&#39;)])


def run_query(query):
  call = subprocess.call
  call([&#39;sqlite3&#39;,  os.path.expanduser(&#39;~/Default-History&#39;), query])
  call([&#39;sqlite3&#39;, os.path.expanduser(&#39;~/Profile-1-History&#39;), query])


def run(date=None):
  copy_histories()
  date = date or datetime.datetime.now().strftime(&#39;%Y-%m-%d&#39;)

  print(&#39;## YouTube Videos Watched&#39;)
  print()

  run_query(f&amp;quot;&amp;quot;&amp;quot;
  select DISTINCT REPLACE(REPLACE(urls.title, &amp;quot; - YouTube&amp;quot;, &amp;quot;&amp;quot;), &amp;quot;(1) &amp;quot;, &amp;quot;&amp;quot;)
  from urls
  where urls.url like &amp;quot;%www.youtube.com/watch%&amp;quot;
  and datetime(last_visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;)
  LIKE &amp;quot;{date}%&amp;quot;
  limit 50;
  &amp;quot;&amp;quot;&amp;quot;)

  # Additional queries run here...

if __name__ == &#39;__main__&#39;:
  fire.Fire()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At the command line I run this with &lt;code&gt;python historyquery.py run&lt;/code&gt; or &lt;code&gt;python historyquery.py run --date=2020-04-26&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With Python Fire I was able to quickly switch to a syntax I was more comfortable with, but keep the benefits of working from the context of a shell. I can now much more quickly make improvements to the script since I can operate more efficiently working in Python.&lt;/p&gt;
&lt;p&gt;Now I have a script I can run that will produce a nice summary of my internet browsing activity for any date I specify. Running it over recent dates provides a nice walk down memory lane.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Roam Research&#39;s JSON Export Format</title>
      <link>https://davidbieber.com/snippets/2020-04-25-roam-json-export/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-25-roam-json-export/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://roamresearch.com/&#34;&gt;Roam Research&lt;/a&gt; is a note taking tool that makes it really low-friction to take deeply interwoven notes.
One of its core features is that you can effortlessly add links between pages in your notes, just by surrounding a name with square brackets, e.g. &lt;a href=&#34;https://roamresearch.com/#/app/commons-db/page/wYVaowjId&#34;&gt;&lt;code&gt;[[Roam Research]]&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Roam allows its users to export their Roam database as a JSON file. In this snippet, I describe the JSON format used and some of its implications.&lt;/p&gt;
&lt;h2 id=&#34;exporting-data-from-roam&#34;&gt;Exporting Data from Roam&lt;/h2&gt;
&lt;p&gt;From the triple-dots menu, select Export All. Choose JSON as the export format. Then click the Export All button. Your complete Roam database will download as a JSON file.&lt;/p&gt;
&lt;h2 id=&#34;roams-json-format&#34;&gt;Roam&#39;s JSON Format&lt;/h2&gt;
&lt;p&gt;We&#39;ll refer to the Roam JSON object you just downloaded as &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; is a list, with each entry in &lt;code&gt;data&lt;/code&gt; corresponding to a single Roam &lt;code&gt;page&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each &lt;code&gt;page&lt;/code&gt; is an object with keys: &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;children&lt;/code&gt;, &lt;code&gt;create-time&lt;/code&gt;, &lt;code&gt;create-email&lt;/code&gt;, &lt;code&gt;edit-time&lt;/code&gt;, &lt;code&gt;edit-email&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;page-schema&#34;&gt;Page Schema&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The page title.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;children&lt;/td&gt;
&lt;td&gt;List[Child]&lt;/td&gt;
&lt;td&gt;The list of children of the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;create-time&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;The time (ms since epoch) when the page was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;create-email&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The email of the person to create the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edit-time&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;The time (ms since epoch) of the last edit to the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edit-email&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The email of the last person to edit the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that only &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;edit-time&lt;/code&gt;, and &lt;code&gt;edit-email&lt;/code&gt; appear to be required fields.
&lt;code&gt;children&lt;/code&gt;, &lt;code&gt;create-time&lt;/code&gt;, and &lt;code&gt;create-email&lt;/code&gt; appear to be omitted when not available.&lt;/p&gt;
&lt;h3 id=&#34;child-schema&#34;&gt;Child Schema&lt;/h3&gt;
&lt;p&gt;Each of the children in a page may have the following keys. Only the &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;edit-time&lt;/code&gt;, and &lt;code&gt;edit-email&lt;/code&gt; keys seem universal. The rest may be omitted when not available.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;uid&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;A short unique identifier for the child.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The string content of the child.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;children&lt;/td&gt;
&lt;td&gt;List[Child]&lt;/td&gt;
&lt;td&gt;The list of children of this child.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;create-time&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;The time (ms since epoch) when the page was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;create-email&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The email of the person to create the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edit-time&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;The time (ms since epoch) of the last edit to the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edit-email&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The email of the last person to edit the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Some children may additionally have the following keys.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;heading&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;1, 2, or 3; indicates the note is an h1, h2, or h3 heading.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;emojis&lt;/td&gt;
&lt;td&gt;List[Emoji]&lt;/td&gt;
&lt;td&gt;A list of objects indicating who added what emojis and when.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text-align&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;One of &amp;lsquo;left&amp;rsquo;, &amp;lsquo;right&amp;rsquo;, &amp;lsquo;center&amp;rsquo;, or &amp;lsquo;justify&amp;rsquo; indicating the text alignment.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that in Roam, children are referred to as &amp;ldquo;blocks&amp;rdquo;, and a child&#39;s ID is the ID used to reference a block.&lt;/p&gt;
&lt;p&gt;Last but not least, I include the emoji reaction schema ð.&lt;/p&gt;
&lt;h3 id=&#34;emoji-schema&#34;&gt;Emoji Schema&lt;/h3&gt;
&lt;p&gt;Each Emoji reaction to a child is an object conforming to the following schema.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;emoji&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;An object with a single key &lt;code&gt;native&lt;/code&gt; containing the emoji itself.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;users&lt;/td&gt;
&lt;td&gt;List[object]&lt;/td&gt;
&lt;td&gt;A list of objects indicating who added this emoji and when. The keys are &lt;code&gt;time&lt;/code&gt; (ms since epoch) and &lt;code&gt;email&lt;/code&gt; (the email of the user who added the reaction).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;missing-information&#34;&gt;Missing Information&lt;/h3&gt;
&lt;p&gt;Some information appears to get lost in the export. In particular, the following information appears to be dropped.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;View as Document&amp;rdquo; / &amp;ldquo;View as Numbered List&amp;rdquo;: This formatting information doesn&#39;t seem to get exported.&lt;/li&gt;
&lt;li&gt;Versions. If you&#39;re using the &amp;ldquo;versions&amp;rdquo; feature of Roam, the versions don&#39;t seem to be exported either.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;implications-of-the-json-format&#34;&gt;Implications of the JSON Format&lt;/h2&gt;
&lt;p&gt;Since Roam allows export of its data in such a simple format, you can easily write scripts for processing this data. For example, merging two databases is trivial. I include some simple such scripts in the following section.&lt;/p&gt;
&lt;p&gt;The clear export also means that you will continue to be able to use your data long into the future, even if Roam shuts down or otherwise becomes unavailable to you. As long as you occasionally back up your data by exporting it, it is yours forever.&lt;/p&gt;
&lt;h2 id=&#34;useful-python-snippets-for-processing-roam-json&#34;&gt;Useful Python Snippets for Processing Roam JSON&lt;/h2&gt;
&lt;p&gt;Once you&#39;ve downloaded your data as JSON from Roam, you can load and manipulate it as follows.&lt;/p&gt;
&lt;h3 id=&#34;load-json&#34;&gt;Load JSON&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import json
filepath = &#39;/path/to/roam-database.json&#39;
data = json.load(open(filepath))
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;collect-all-children&#34;&gt;Collect All Children&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;children = []
blocks = data.copy()
while blocks:
  block = blocks.pop()
  if &#39;children&#39; in block:
    blocks.extend(block[&#39;children&#39;])
    children.extend(block[&#39;children&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;find-all-notes-mentioning-roam&#34;&gt;Find All Notes Mentioning &amp;ldquo;Roam&amp;rdquo;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for child in children:
  if &#39;roam&#39; in child.get(&#39;string&#39;, &#39;&#39;).lower():
    print(child[&#39;string&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;merge-two-databases&#34;&gt;Merge Two Databases&lt;/h3&gt;
&lt;p&gt;Since databases are just lists of objects, you can trivially merge them.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;merged = db1 + db2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&#39;s possible this will result in multiple pages having the same name, but Roam deals with this just fine.&lt;/p&gt;
&lt;h2 id=&#34;thank-you-roam&#34;&gt;Thank You Roam&lt;/h2&gt;
&lt;p&gt;I want to conclude with a note of thanks to the Roam developers for allowing export in such a clear and readily understandable manner. Doing so inspires confidence that I will be able to continue using the notes I take in Roam far into the future, no matter what. This makes me so much more comfortable using Roam for my note taking. Props and thank you to the Roam developers for this feature.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Date and Time Browser History Queries</title>
      <link>https://davidbieber.com/snippets/2020-04-20-browser-history-date-queries/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-20-browser-history-date-queries/</guid>
      <description>&lt;p&gt;I wrote a &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-11-browser-history-queries/&#34;&gt;number of SQL queries&lt;/a&gt; for browsing my browsing history. In this snippet, I show how to amend them to filter the results by date. Google Chrome selects a slightly non-standard time storage format (microseconds since January 1, 1601 UTC), hence the need for this query stanza.&lt;/p&gt;
&lt;p&gt;To run these queries, first make a copy of your browser history and open it in sqlite3.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp ~/Library/Application\ Support/Google/Chrome/Default/History ~/my-history
sqlite3 ~/my-history
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;google-search-history-for-specific-date&#34;&gt;Google Search History for Specific Date&lt;/h2&gt;
&lt;p&gt;Here&#39;s the query we had from before, for accessing our Google Search history.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - Google Search&amp;quot;, &amp;quot;&amp;quot;)
from urls
where urls.url like &amp;quot;%www.google.com/search%&amp;quot; 
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To filtering by a specific date, we just add.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;AND
datetime(last_visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;)
LIKE &#39;2019-12-25%&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What was I searching for on Christmas last year?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - Google Search&amp;quot;, &amp;quot;&amp;quot;)
from urls
where urls.url like &amp;quot;%www.google.com/search%&amp;quot; 
and datetime(last_visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;)
LIKE &#39;2019-12-25%&#39;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;youtube-videos-watched-today&#34;&gt;YouTube Videos Watched Today&lt;/h2&gt;
&lt;p&gt;To query for results from &lt;em&gt;today&lt;/em&gt;, we can do the following.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - YouTube&amp;quot;, &amp;quot;&amp;quot;), urls.url, datetime(last_visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;) as d
from urls
where urls.url like &amp;quot;%www.youtube.com/watch%&amp;quot;
and datetime(last_visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;)
LIKE (date(&#39;now&#39;, &#39;localtime&#39;) || &#39;%&#39;)
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the use of &lt;code&gt;localtime&lt;/code&gt; to account for the timezone. &lt;code&gt;||&lt;/code&gt; is used here for string concatenation.&lt;/p&gt;
&lt;h2 id=&#34;arxiv-papers-visited-last-month&#34;&gt;Arxiv Papers Visited Last Month&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT urls.title, REPLACE(REPLACE(urls.url, &amp;quot;.pdf&amp;quot;, &amp;quot;&amp;quot;), &amp;quot;/pdf/&amp;quot;, &amp;quot;/abs/&amp;quot;)
from urls
where (urls.url like &amp;quot;https://arxiv.org/abs%&amp;quot;
or urls.url like &amp;quot;https://arxiv.org/pdf%&amp;quot;)
and datetime(last_visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;)
LIKE (substr(date(&#39;now&#39;, &#39;localtime&#39;, &#39;-1 month&#39;), 0, 9) || &#39;%&#39;)
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here you can see that &lt;code&gt;date&lt;/code&gt; gives flexibility in adjusting the date you are requesting. &lt;code&gt;substr&lt;/code&gt; is used to transform &lt;code&gt;2020-03-20&lt;/code&gt; to &lt;code&gt;2020-03-&lt;/code&gt;, to match any date in the month.&lt;/p&gt;
&lt;h2 id=&#34;hackernews-links-followed-in-the-last-week&#34;&gt;HackerNews Links Followed in the Last Week&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT urls.title, urls.url
from visits
join visits as previous_visits on visits.from_visit == previous_visits.id
join urls on urls.id == visits.url
join urls as previous_urls on previous_urls.id == previous_visits.url
where previous_urls.url like &amp;quot;https://news.ycombinator.com%&amp;quot;
and urls.url not like &amp;quot;https://news.ycombinator.com%&amp;quot;
and datetime(visits.visit_time / 1000000 + (strftime(&#39;%s&#39;, &#39;1601-01-01&#39;)), &#39;unixepoch&#39;)
&amp;gt; date(&#39;now&#39;, &#39;localtime&#39;, &#39;-7 day&#39;)
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For this query, we directly compare the result of &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt;.
&lt;a href=&#34;https://www.sqlite.org/lang_datefunc.html&#34;&gt;sqlite.org/lang_datefunc.html&lt;/a&gt; has more useful information about writing queries manipulating dates and times.&lt;/p&gt;
&lt;p&gt;For more query ideas, here&#39;s the &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-11-browser-history-queries/&#34;&gt;link back to the browser history queries snippet&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simplifying SQL Queries with &#34;WITH&#34;</title>
      <link>https://davidbieber.com/snippets/2020-04-12-simplifying-sql-with-with/</link>
      <pubDate>Sun, 12 Apr 2020 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-12-simplifying-sql-with-with/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-11-browser-history-queries/&#34;&gt;&amp;ldquo;More Browser History Queries&amp;rdquo; snippet&lt;/a&gt; one of the SQL queries I wrote was particularly nasty.&lt;/p&gt;
&lt;p&gt;Since I didn&#39;t know how to introduce intermediate variables, I had to replicate subqueries multiple times throughout the query. The result was a mess of a query. Using &lt;code&gt;WITH&lt;/code&gt; clauses, the query becomes considerably more readable and maintainable.&lt;/p&gt;
&lt;h2 id=&#34;cleaned-up-query&#34;&gt;Cleaned up Query&lt;/h2&gt;
&lt;p&gt;Here&#39;s the cleaned up query. It selects all the GitHub repos you&#39;ve visited from your browser history. To run it, first copy your browser history and open it in sqlite:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp ~/Library/Application\ Support/Google/Chrome/Default/History ~/my-history
sqlite3 ~/my-history
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, you can run this cleaned up query to see all the GitHub repos that you&#39;ve visited.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;WITH
data1 as (select LENGTH(&amp;quot;https://github.com/&amp;quot;) as len, * from urls),
data2 as (select SUBSTR(
  url,
  len + 1,
  INSTR(SUBSTR(url, len + 1), &amp;quot;/&amp;quot;) - 1
) as user, * from data1),
data3 as (select SUBSTR(url, len + LENGTH(user) + 2) as rest, * from data2),
data4 as (select SUBSTR(rest, 0, INSTR(rest, &amp;quot;/&amp;quot;)) as repo, * from data3)

select DISTINCT
SUBSTR(url, len + 1, LENGTH(user) + 1 + LENGTH(repo)) as user_repo
from data4
where url like &amp;quot;https://github.com/%&amp;quot;
and LENGTH(repo) &amp;gt; 0
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;the-original-query&#34;&gt;The Original Query&lt;/h2&gt;
&lt;p&gt;Here is the original query, with all its messy replicated subqueries, to emphasize just how much using &lt;code&gt;WITH&lt;/code&gt; allowed me to clean this up.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT

-- Selects the user:
-- SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,
--   INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1
-- ) as user,

-- Selects everything after the user:
-- SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;)
--   + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
--   + 2
-- ) as rest,

-- Selects the repo:
-- SUBSTR(SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;)
--   + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
--   + 2
-- ), 0,
-- INSTR(SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;)
--   + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
--   + 2
-- ), &amp;quot;/&amp;quot;)) as repo

SUBSTR(
  urls.url,
  LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,
  LENGTH(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,
    INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1
  )) -- LENGTH(user)
  + 1 -- + 1
  + LENGTH(SUBSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), 0,
  INSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), &amp;quot;/&amp;quot;)))
  ) -- + LENGTH(repo)
from urls
where urls.url like &amp;quot;https://github.com/%&amp;quot;
and LENGTH(SUBSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), 0,
  INSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), &amp;quot;/&amp;quot;))) &amp;gt; 0  -- LENGTH(repo) &amp;gt; 0
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The two queries should produce the same results.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Facebook Messenger SQL Queries</title>
      <link>https://davidbieber.com/snippets/2020-04-12-fb-messenger-sql/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-12-fb-messenger-sql/</guid>
      <description>&lt;p&gt;Last week I dumped all my Facebook messenger messages into a Postgres database. I have it set up so that new messages are added the the database in real time as they are sent. Like I did in a &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-11-browser-history-queries&#34;&gt;previous snippet&lt;/a&gt; for analyzing my browsing history, I&#39;ll use this snippet to sketch out some useful queries for analyzing my message history.&lt;/p&gt;
&lt;h2 id=&#34;table-schemas&#34;&gt;Table Schemas&lt;/h2&gt;
&lt;p&gt;I have two tables of messages. &lt;code&gt;messenger_archive&lt;/code&gt; contains all messages from when I first joined Facebook in August 2008 through February 2020. &lt;code&gt;messenger&lt;/code&gt; contains messages from February 2020 through now, and is updated in real time.&lt;/p&gt;
&lt;p&gt;Using the commands &lt;code&gt;\d messenger&lt;/code&gt; and &lt;code&gt;\d messenger_archive&lt;/code&gt;, I inspect the table schemas.&lt;/p&gt;
&lt;h3 id=&#34;schema-messenger&#34;&gt;Schema: messenger&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;The message content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uid&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;A unique message id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;author&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;fbid&lt;/em&gt; of the message author&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;The timestamp in milliseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwarded&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Whether the message is a forwarded message&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thread_id&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;A unique thread id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thread_type&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;GROUP or USER, indicating the thread type&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;schema-messenger-archive&#34;&gt;Schema: messenger_archive&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sender_name&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;The message author&#39;s name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp_ms&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;The timestamp in milliseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;content&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;The message content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;One of: Payment, Call, Share, Generic, Unsubscribe, or Subscribe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;The thread title, often the name of the other participant&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is_still_participant&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Whether I was still in the conversation at the time of the archive (Feb 2020)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thread_type&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;One of: RegularGroup, Regular&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thread_path&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;A unique identifier for the thread&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;schema-caveats&#34;&gt;Schema Caveats&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;messenger_archive.thread_path&lt;/code&gt; is not the same as the &lt;code&gt;messenger.thread_id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;messenger.author&lt;/code&gt; is an integer id, whereas the &lt;code&gt;messenger_archive.sender_name&lt;/code&gt; is a string name.&lt;/li&gt;
&lt;li&gt;There may be a few overlapping messages between the two tables (?), and there may be a few messages not captured in either table.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;message-queries&#34;&gt;Message Queries&lt;/h2&gt;
&lt;p&gt;Let&#39;s start sketching some useful queries.&lt;/p&gt;
&lt;h3 id=&#34;finding-links&#34;&gt;Finding Links&lt;/h3&gt;
&lt;p&gt;Listing domains from the archive:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select distinct
substring(content from &#39;.*://([^/]*)&#39;) as domain
from messenger_archive
limit 1000;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Counting unique domains:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select count(*) from (select distinct
substring(content from &#39;.*://([^/]*)&#39;) as domain
from messenger_archive) domains;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Listing links from the archive:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select distinct
substring(content from &#39;([a-z]*://[^/\s]*[a-zA-Z/]*)&#39;) as domain
from messenger_archive
limit 1000;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Counting unique links:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select count(*) from (select distinct
substring(content from &#39;([a-z]*://[^/\s]*[a-zA-Z/]*)&#39;) as domain
from messenger_archive) foo;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;email-addresses&#34;&gt;Email Addresses&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select distinct
substring(content from &#39;([a-zA-Z0-9.]+@[a-zA-Z0-9]+\.[a-zA-Z0-9]+)&#39;) as email
from messenger_archive
limit 100;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;looking-forward&#34;&gt;Looking Forward&lt;/h3&gt;
&lt;p&gt;I have a number of additional queries I&#39;d like to write.
However, they will have to wait until a future snippet.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More Browser History Queries</title>
      <link>https://davidbieber.com/snippets/2020-04-11-browser-history-queries/</link>
      <pubDate>Sat, 11 Apr 2020 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-11-browser-history-queries/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidbieber.com/snippets/2020-03-19-browsing-history&#34;&gt;Previously&lt;/a&gt; I listed out a few queries for poking at my browser history. Here are some more!&lt;/p&gt;
&lt;p&gt;As before, I begin by making a copy of my browsing history and opening sqlite3:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp ~/Library/Application\ Support/Google/Chrome/Default/History ~/my-history
sqlite3 ~/my-history
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once that&#39;s done, we can start running the queries.&lt;/p&gt;
&lt;h2 id=&#34;youtube-videos-watched&#34;&gt;YouTube Videos Watched&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - YouTube&amp;quot;, &amp;quot;&amp;quot;), urls.url
from urls
where urls.url like &amp;quot;%www.youtube.com/watch%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;youtube-search-queries&#34;&gt;YouTube Search Queries&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - YouTube&amp;quot;, &amp;quot;&amp;quot;)
from urls
where urls.url like &amp;quot;%www.youtube.com/results?search_query%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;google-search-queries&#34;&gt;Google Search Queries&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - Google Search&amp;quot;, &amp;quot;&amp;quot;)
from urls
where urls.url like &amp;quot;%www.google.com/search%&amp;quot; 
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;google-maps-usage&#34;&gt;Google Maps Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - Google Maps&amp;quot;, &amp;quot;&amp;quot;)
from urls
where urls.url like &amp;quot;%www.google.com/maps%&amp;quot; 
and urls.title != &amp;quot;Google Maps&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;wikipedia-browsing-history&#34;&gt;Wikipedia Browsing History&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - Wikipedia&amp;quot;, &amp;quot;&amp;quot;)
from urls
where urls.url like &amp;quot;%wikipedia.org/wiki/%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;github-users-and-orgs&#34;&gt;GitHub Users and Orgs&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT
SUBSTR(
  urls.url,
  LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,
  INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1
) as user
from urls
where urls.url like &amp;quot;https://github.com/%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The rest of the GitHub queries ended up being quite messy, so I&#39;ve placed them at the end of the document.&lt;/p&gt;
&lt;h2 id=&#34;arxiv-papers-visited&#34;&gt;Arxiv Papers Visited&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT urls.title, REPLACE(REPLACE(urls.url, &amp;quot;.pdf&amp;quot;, &amp;quot;&amp;quot;), &amp;quot;/pdf/&amp;quot;, &amp;quot;/abs/&amp;quot;)
from urls
where urls.url like &amp;quot;https://arxiv.org/abs%&amp;quot;
or urls.url like &amp;quot;https://arxiv.org/pdf%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;hackernews-comments-read&#34;&gt;HackerNews Comments Read&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; | Hacker News&amp;quot;, &amp;quot;&amp;quot;), urls.url
from urls
where urls.url like &amp;quot;https://news.ycombinator.com/item%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;hackernews-posts-read&#34;&gt;HackerNews Posts Read&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT urls.title, urls.url
from visits
join visits as previous_visits on visits.from_visit == previous_visits.id
join urls on urls.id == visits.url
join urls as previous_urls on previous_urls.id == previous_visits.url
where previous_urls.url like &amp;quot;https://news.ycombinator.com%&amp;quot;
and urls.url not like &amp;quot;https://news.ycombinator.com%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reddit-usage&#34;&gt;Reddit Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT urls.title
from urls
where urls.url like &amp;quot;https://www.reddit.com/%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reddit-links-followed&#34;&gt;Reddit Links Followed&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT urls.title, urls.url
from visits
join visits as previous_visits on visits.from_visit == previous_visits.id
join urls on urls.id == visits.url
join urls as previous_urls on previous_urls.id == previous_visits.url
where previous_urls.url like &amp;quot;%reddit.com%&amp;quot;
and urls.url not like &amp;quot;%reddit.com%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reddit-subreddits-visited&#34;&gt;Reddit Subreddits Visited&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT
SUBSTR(
  SUBSTR(urls.url, LENGTH(&amp;quot;https://www.reddit.com/r/&amp;quot;) + 1),
  0,
  INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://www.reddit.com/r/&amp;quot;) + 1), &amp;quot;/&amp;quot;)
) as subreddit
from urls
where urls.url like &amp;quot;https://www.reddit.com/r/%&amp;quot;
order by subreddit asc
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;twitter-search-queries&#34;&gt;Twitter Search Queries&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(urls.title, &amp;quot; - Twitter Search / Twitter&amp;quot;, &amp;quot;&amp;quot;)
from urls
where urls.url like &amp;quot;https://twitter.com/search%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;twitter-links-followed&#34;&gt;Twitter Links Followed&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT urls.title, urls.url
from visits
join visits as previous_visits on visits.from_visit == previous_visits.id
join urls on urls.id == visits.url
join urls as previous_urls on previous_urls.id == previous_visits.url
where previous_urls.url like &amp;quot;%://t.co%&amp;quot;
and urls.url not like &amp;quot;%twitter.com%&amp;quot;
and urls.url not like &amp;quot;%://t.co%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;other-domains-visited&#34;&gt;Other Domains Visited&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT REPLACE(
SUBSTR(
  urls.url,
  INSTR(urls.url, &amp;quot;//&amp;quot;) + 2, -- strips https://
  INSTR(SUBSTR(urls.url, INSTR(urls.url, &amp;quot;//&amp;quot;) + 2), &amp;quot;/&amp;quot;) - 1
), &amp;quot;www.&amp;quot;, &amp;quot;&amp;quot;) as domain
from visits
join visits as previous_visits on visits.from_visit == previous_visits.id
join urls on urls.id == visits.url
join urls as previous_urls on previous_urls.id == previous_visits.url
where not (
     domain like &amp;quot;%goog%&amp;quot;
  or domain like &amp;quot;%t.co%&amp;quot;
  or domain like &amp;quot;%twitter.co%&amp;quot;
  or domain like &amp;quot;%wikipedia%&amp;quot;
  or domain like &amp;quot;%youtube%&amp;quot;
  or domain like &amp;quot;%github%&amp;quot;
  or domain like &amp;quot;%arxiv%&amp;quot;
  or domain like &amp;quot;%reddit%&amp;quot;
  or domain like &amp;quot;%ycombinator%&amp;quot;
  or urls.url like &amp;quot;chrome-extension://%&amp;quot;
  -- or previous_urls.url like &amp;quot;%t.co%&amp;quot;
  -- or previous_urls.url like &amp;quot;%twitter.co%&amp;quot;
  -- or previous_urls.url like &amp;quot;%goog%&amp;quot;
  -- or previous_urls.url like &amp;quot;%reddit%&amp;quot;
  -- or previous_urls.url like &amp;quot;%ycombinator%&amp;quot;
)
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;using-a-different-profile&#34;&gt;Using a Different Profile&lt;/h2&gt;
&lt;p&gt;If you want to query your search history for a profile other than the default one, you can do so. E.g.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp ~/Library/Application\ Support/Google/Chrome/Profile\ 1/History ~/my-history
sqlite3 ~/my-history
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;messy-queries-github-repos-visited&#34;&gt;Messy Queries: GitHub Repos Visited&lt;/h2&gt;
&lt;p&gt;This query ended up being quite messy because I wasn&#39;t able to save intermediate results as a variable. So, in order to build the query, I copied and pasted intermediate queries to reuse them. The result, with intermediate queries shown in comments, follows.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DISTINCT

-- Selects the user:
-- SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,
--   INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1
-- ) as user,

-- Selects everything after the user:
-- SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;)
--   + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
--   + 2
-- ) as rest,

-- Selects the repo:
-- SUBSTR(SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;)
--   + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
--   + 2
-- ), 0,
-- INSTR(SUBSTR(
--   urls.url,
--   LENGTH(&amp;quot;https://github.com/&amp;quot;)
--   + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
--   + 2
-- ), &amp;quot;/&amp;quot;)) as repo

SUBSTR(
  urls.url,
  LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,
  LENGTH(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,
    INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1
  )) -- LENGTH(user)
  + 1 -- + 1
  + LENGTH(SUBSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), 0,
  INSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), &amp;quot;/&amp;quot;)))
  ) -- + LENGTH(repo)
from urls
where urls.url like &amp;quot;https://github.com/%&amp;quot;
and LENGTH(SUBSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), 0,
  INSTR(SUBSTR(
    urls.url,
    LENGTH(&amp;quot;https://github.com/&amp;quot;)
    + LENGTH(SUBSTR(urls.url,LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1,INSTR(SUBSTR(urls.url, LENGTH(&amp;quot;https://github.com/&amp;quot;) + 1), &amp;quot;/&amp;quot;) - 1)) -- length(user)
    + 2
  ), &amp;quot;/&amp;quot;))) &amp;gt; 0  -- LENGTH(repo) &amp;gt; 0
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For most of the queries on this page, you should be able to easily modify them to suit your needs.
I wouldn&#39;t try modifying this query, though. It would be much better to build a new query from scratch using using the same technique this one was built with, than to try to modify this one to perform another task, because it would be so easy to modify something in one place but subtly miss modifying it in another location in the query that needs to also be modified.&lt;/p&gt;
&lt;p&gt;Update (April 12, 2020): I&#39;ve now learned that you can introduce intermediate &amp;ldquo;variables&amp;rdquo; in your SQL queries, so I&#39;ve simplified this query &lt;a href=&#34;https://davidbieber.com/snippets/2020-04-12-simplifying-sql-with-with&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips for Effective OBS</title>
      <link>https://davidbieber.com/snippets/2020-04-11-tips-for-obs/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-11-tips-for-obs/</guid>
      <description>&lt;p&gt;As a newcomer to OBS, I&#39;ve been regularly discovering new features that make my OBS experience better. Here are a handful of things I&#39;ve found useful, that perhaps weren&#39;t immediately obvious to me, from my early experiences with OBS.&lt;/p&gt;
&lt;h2 id=&#34;using-media-sources&#34;&gt;Using Media Sources&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Media Source&amp;rdquo; video sources are essential when showing prerecorded video, or using a replay buffer. However, it wasn&#39;t obvious to me how to get media sources to play their audio.&lt;/p&gt;
&lt;p&gt;When using a Media Source, here&#39;s out to turn on the audio. In the Audio Mixer panel choose &lt;code&gt;Gear Settings &amp;gt; Advanced Audio Properties&lt;/code&gt; then set &lt;code&gt;Audio Monitoring&lt;/code&gt; to &amp;ldquo;Monitor and Output&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;namespaces-for-scenes--turning-off-the-camera&#34;&gt;Namespaces for Scenes + Turning Off the Camera&lt;/h2&gt;
&lt;p&gt;You can create multiple Profiles and Scene Collections in OBS. I only have one Profile, which I&#39;ve named &amp;ldquo;Default&amp;rdquo; (rather than the default of &amp;ldquo;Untitled&amp;rdquo;). I made a few Scene Collections. Making new Scene Collections gives you a space to play around with new ideas for scenes and keyboard shortcuts, without disrupting the main setup(s) that you&#39;ve put together. I like to fiddle around with new ideas in a Scene Collection I&#39;ve named &amp;ldquo;Playground&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;If you have any sources in a Scene Collection that use your webcam, then your webcam will stay on even when it isn&#39;t being used. If you switch to a Scene Collection with no sources using your webcam, then your webcam will turn off. I use a Scene Collection that leaves my webcam off by default, and only switch to a Scene Collection with a webcam source when I actually intend to record something that needs the webcam.&lt;/p&gt;
&lt;h2 id=&#34;replay-buffer&#34;&gt;Replay Buffer&lt;/h2&gt;
&lt;p&gt;I leave the replay buffer on in between recording scenes. By setting the replay buffer to a reasonable size like 60 seconds, I can leave it rolling without consuming too much memory (and the CPU consumption has been reasonable too, e.g. 10%). This way, if anything noteworthy happens in this period between recordings, I can still capture it.&lt;/p&gt;
&lt;h2 id=&#34;virtual-cameras&#34;&gt;Virtual Cameras&lt;/h2&gt;
&lt;p&gt;If you&#39;re willing to get your hands dirty, the instructions at &lt;a href=&#34;https://github.com/johnboiles/obs-mac-virtualcam&#34;&gt;johnboiles/obs-mac-virtualcam&lt;/a&gt; will let you use OBS as a virtual camera on Mac.&lt;/p&gt;
&lt;h2 id=&#34;transform-editing-and-scene-json-files&#34;&gt;Transform Editing and Scene &lt;code&gt;.json&lt;/code&gt; files&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cmd-e&lt;/code&gt; opens the Scene Item Transform for a Scene Item. Using that, you can get pixel perfect positioning of any video source. You can also see and edit the json files that describe your scenes. On Mac, these scene json files can be found at &lt;code&gt;~/Library/Application Support/obs-studio/basic/scenes&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;keyboard-shortcuts&#34;&gt;Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cmd-,&lt;/code&gt; opens your settings. There&#39;s a panel for setting keyboard shortcuts. This is a core OBS feature, and it&#39;s extremely valuable. I really appreciate how easy OBS has made it to set up these keyboard shortcuts for switching between scenes, starting and stopping recordings, pausing and playing media, etc. I only wish I could have extra modifier keys so I could set up more shortcuts that don&#39;t collide with the shortcuts of my IDE!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exploring OBS and Virtual Cameras</title>
      <link>https://davidbieber.com/snippets/2020-04-09-exploring-obs/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-04-09-exploring-obs/</guid>
      <description>&lt;p&gt;This week I&#39;ve been exploring &lt;a href=&#34;https://obsproject.com/&#34;&gt;&lt;em&gt;Open Broadcasting Software&lt;/em&gt; (OBS)&lt;/a&gt; and toying with using it as a virtual camera. I use a Mac, and historically there hasn&#39;t been a good way to use OBS as a virtual camera. With &lt;a href=&#34;https://twitter.com/tobi&#34;&gt;@tobi&lt;/a&gt;&amp;lsquo;s recent &lt;a href=&#34;https://github.com/obsproject/obs-studio/issues/2568&#34;&gt;$10,000 bounty&lt;/a&gt; for making this a core feature, however, some developers in the OBS community leapt into action and a &lt;a href=&#34;https://github.com/johnboiles/obs-mac-virtualcam&#34;&gt;working prototype&lt;/a&gt; of the feature was available on GitHub within days.&lt;/p&gt;
&lt;h2 id=&#34;virtual-cameras&#34;&gt;Virtual Cameras&lt;/h2&gt;
&lt;p&gt;OBS is popular software among Twitch streamers. It lets you take a bunch of video sources and rearrange them into scenes. Streamers will often overlay a camera feed of their head and a live stream of a video game, maybe with cool graphics overlaid on the whole thing.&lt;/p&gt;
&lt;p&gt;For years, OBS has let you take the scenes you create and stream them in real time to YouTube Live or Twitch or any number of other streaming services. If you wanted to use your OBS scene in Zoom or Google Meet, however, it wasn&#39;t straightforward, at least on Mac.&lt;/p&gt;
&lt;p&gt;There were workarounds. You could project your scene to an external monitor, and then use screen sharing to share that. At times there were combinations of tools and plugins that could similarly get the job done.&lt;/p&gt;
&lt;p&gt;Now, however, it&#39;s considerably easier. John Boiles&#39;s has made a OBS plugin that works without fuss. For now it still requires a technical background to use, following build instructions and executing commands on the terminal to get it set up. In a matter of months, however, I expect it will make its way as a core feature into OBS.&lt;/p&gt;
&lt;h2 id=&#34;combining-obs-with-auto-video-editing&#34;&gt;Combining OBS with Auto Video Editing&lt;/h2&gt;
&lt;p&gt;As you may know, I&#39;ve been working on &lt;a href=&#34;https://davidbieber.com/snippets/2020-02-21-jump-cut-programming&#34;&gt;automatic&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets/2020-02-26-video-tooling-progress&#34;&gt;video&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets/2020-03-02-fastbook&#34;&gt;editing&lt;/a&gt; software. I&#39;d like to be able to make quality content &amp;ndash; e.g. videos teaching interesting aspects of programming &amp;ndash; without needing to spend time on the video editing process. The cutting and rearranging would happen automatically. The music and audio adjustments would be added automatically. All I&#39;d need to do is write a script and record the footage, and the auto editor would take care of the rest.&lt;/p&gt;
&lt;p&gt;Originally I was using Mac&#39;s cmd-shift-5 screen capture capability to create these recordings. OBS lets you rearrange video feeds deliberately and use a variety of video sources. These video sources include window captures, cameras, and prerecorded media. The result is much more flexible than Mac&#39;s screen capture, and so I&#39;ve switched my auto video editing software over to use OBS for recording.&lt;/p&gt;
&lt;p&gt;As an aside, I&#39;ve also discovered &lt;a href=&#34;https://obsproject.com/forum/resources/obs-ndi-newtek-ndi%E2%84%A2-integration-into-obs-studio.528/&#34;&gt;NDI&lt;/a&gt;, a plugin for OBS. It lets me use my phone&#39;s camera as a video source with minimal setup. It was so easy to get working, in fact, that I&#39;m convinced it must be a large security vulnerability to use it at all.&lt;/p&gt;
&lt;p&gt;Now that I&#39;m using OBS to record, I enabled my auto video editing software to run automatically on any recording produced by OBS. As soon as the recording gets saved, my software starts editing it automatically (preserving the original). I&#39;d love to have my auto editing start even sooner than that though, &lt;em&gt;before&lt;/em&gt; the recording is complete. The OBS codebase is surprisingly approachable, so I may be able to get this working.&lt;/p&gt;
&lt;h2 id=&#34;hacking-on-the-obs-codebase&#34;&gt;Hacking on the OBS Codebase&lt;/h2&gt;
&lt;p&gt;When John Boiles released the Mac Virtual Cam plugin for OBS, it was initially stuck on the wrong resolution. John told me it was hard coded to 720x480, and that was the impetus for me to poke at the code. Changing the hard coded resolution proved easy enough. Then I ran into a bug where OBS would fail to capture a window if I changed tabs in that window while OBS was closed. Though there&#39;s inertia with entering any unfamiliar codebase, I found I was able to solve this issue for myself too. Through these two debugging experiences I got enough glimpses of the OBS plugin set up to think that OBS really is approachably hackable. I think, with hard work, I could integrate my auto editing code into OBS so that it runs in real time. It&#39;s not the very top of my todo list for the auto video editor, but I&#39;m excited to give this a try.&lt;/p&gt;
&lt;h2 id=&#34;replay-buffers-in-obs&#34;&gt;Replay Buffers in OBS&lt;/h2&gt;
&lt;p&gt;One neat feature in OBS is its ability to record a &amp;ldquo;replay buffer&amp;rdquo;. I have it set up to record a circular buffer of the last 60 seconds of content. That means that at any given moment, OBS has recorded the previous 60 seconds of footage. Unsaved footage older than 60 seconds is gone, but at any point, if I choose to save it, I can record the previous 60 seconds of footage.&lt;/p&gt;
&lt;p&gt;This is great because it means I can keep the camera rolling between scenes without wasting memory, and if anything noteworthy happens in that time I can capture it.&lt;/p&gt;
&lt;p&gt;There&#39;s a second reason I&#39;m excited about the replay buffer though; it may enable me to use auto-edited videos in conversations in &lt;em&gt;real time&lt;/em&gt;. I imagine the user experience like this:
I&#39;m in a remote meeting and we&#39;re having a discussion. By default I&#39;m unmuted and people can hear what I&#39;m saying. Whenever I hold down a keyboard shortcut, I&#39;m muted in the call and OBS starts recording me. When I release the shortcut, I can continue to talk in the call. Once I&#39;ve recorded a satisfactory amount of content for OBS, the auto-editing will be applied and I can use OBS as a virtual camera to send that recorded and edited content to my colleagues in the meeting.&lt;/p&gt;
&lt;h2 id=&#34;looking-forward&#34;&gt;Looking Forward&lt;/h2&gt;
&lt;p&gt;I&#39;m excited to become more proficient using OBS, and to explore the various plugins and overlays that streamers use with OBS. Particularly I&#39;m excited to look into the &lt;a href=&#34;https://obsproject.com/forum/resources/vst-plugins.848/&#34;&gt;audio plugins&lt;/a&gt; that are available.&lt;/p&gt;
&lt;p&gt;I also intend to continue my auto-editing plans from before: I&#39;m still looking forward to introducing a &amp;ldquo;script&amp;rdquo; with audio auto-transcribed and key events entered via keyboard shortcuts and auto-tracked file saves. And I still want to be able to modify this script to automatically edit the video based on the modifications.&lt;/p&gt;
&lt;p&gt;Having explored OBS for a little while now, I&#39;m also looking forward to integrating my auto-video editing more closely with OBS, ideally resulting in real time auto editing in the end. Here&#39;s to hoping OBS continues to feel approachably hackable!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Understanding OAuth2</title>
      <link>https://davidbieber.com/snippets/2020-03-20-understanding-oauth2/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-03-20-understanding-oauth2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://oauth.net/2/&#34;&gt;OAuth2&lt;/a&gt; is confusing. I&#39;ve set it up several times before, and each time I encounter it it&#39;s a bit of a mental mess to wrap my mind around it again.&lt;/p&gt;
&lt;p&gt;So, this time, as I set up OAuth2 to let &lt;a href=&#34;https://davidbieber.com/projects/bieber-bot&#34;&gt;Bieber Bot&lt;/a&gt; interact with more Slack workspaces, I will write up my renewed understanding of OAuth2 in the hope that next time I have to set up OAuth2, it&#39;s a little easier.&lt;/p&gt;
&lt;h2 id=&#34;overview-of-the-oauth2-flow&#34;&gt;Overview of the OAuth2 Flow&lt;/h2&gt;
&lt;p&gt;How does the OAuth2 flow go? Like this:&lt;/p&gt;
&lt;p&gt;The user wants to add Bieber Bot to a Slack channel. So, they&#39;re on my website (&lt;a href=&#34;https://davidbieber.com/&#34;&gt;davidbieber.com&lt;/a&gt;) and they click the &lt;em&gt;Add to Slack&lt;/em&gt; button. This takes them to Slack, with GET parameters that indicate they want to add Bieber Bot to some Slack workspace. The workspace id can be part of the URL of the Add to Slack button, but even if it&#39;s not, Slack will do the right thing and just ask the user to choose one of their workspaces. If the user isn&#39;t already logged in to Slack, they&#39;ll be prompted to do so at this point.&lt;/p&gt;
&lt;p&gt;After the user clicks the &lt;em&gt;Add to Slack&lt;/em&gt; button they are taken to Slack, where they are shown the list of OAuth2 scopes that Bieber Bot is requesting. If they approve giving Bieber Bot the permissions listed in the scopes, they are taken to a &lt;em&gt;redirect url&lt;/em&gt; that I, the developer of Bieber Bot, have specified. I have both pre-informed Slack of the redirect URLs I might use, and I have included a specific redirect URL in the link on the &lt;em&gt;Add to Slack&lt;/em&gt; button. When the user is redirected to this redirect url, two GET parameters are included. The first is a &lt;code&gt;code&lt;/code&gt;, which my server can use to get an Access Token / Bearer Token. The second is a &lt;code&gt;state&lt;/code&gt; which is something that I, the developer, can include on the original link from the &lt;em&gt;Add to Slack&lt;/em&gt; button in order to make sure the request I&#39;m getting at the redirect URL is genuine.&lt;/p&gt;
&lt;p&gt;When the redirect URL is accessed with a &lt;code&gt;code&lt;/code&gt; GET parameter, it then turns around and uses that &lt;code&gt;code&lt;/code&gt; to request an Access Token from Slack. Once it has that Access Token, it tucks it away. It can use that access token in order to perform any of the permissions granted by the user during the access flow.&lt;/p&gt;
&lt;p&gt;Usually using the Access Token takes the form of issuing post requests to Slack with the Access Token as a parameter.&lt;/p&gt;
&lt;p&gt;The user can revoke access to Bieber Bot at any time. Once they do so, the Access Token becomes invalid. If Bieber Bot tries to use the Access Token at that point, it will get an error. The user will have to give Bieber Bot permissions again, and it will get a new access token, in order for it to continue providing its services and companionship.&lt;/p&gt;
&lt;h2 id=&#34;summary-of-the-the-important-bits&#34;&gt;Summary of the the Important Bits&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;User navigates from website to service (e.g. via &lt;em&gt;Add to Slack&lt;/em&gt; button).&lt;/li&gt;
&lt;li&gt;Service shows user permissions dialog.&lt;/li&gt;
&lt;li&gt;Upon accepting permissions, service redirects user back to website&#39;s redirect URL with &lt;code&gt;code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Website uses &lt;code&gt;code&lt;/code&gt; to get Access Token&lt;/li&gt;
&lt;li&gt;Website uses Access Token to do the stuff allowed by the permissions granted by the user&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;summary-of-the-less-important-bits&#34;&gt;Summary of the Less Important Bits&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;Add to Slack&lt;/em&gt; button should include GET parameters for: a) &lt;code&gt;state&lt;/code&gt; so the redirect url knows the request is genuine, b) &lt;code&gt;redirect_url&lt;/code&gt; so Slack knows where to send the user after they accept the permissons, c) &lt;code&gt;scope&lt;/code&gt; indicating the permissions being requested, d) &lt;code&gt;client_id&lt;/code&gt; indicating the app (e.g. Bieber Bot) that you&#39;re adding to Slack.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The permissions that the App can request are set up by the App ahead of time. So I think the &lt;code&gt;scope&lt;/code&gt; parameter is there if you only need to request a subset of that permissions for a particular user.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The full list of possible redirect URLs should be set up ahead of time. Then when you generate the &lt;em&gt;Add to Slack&lt;/em&gt; button, you just choose a particular redirect URL that Slack should redirect the user to after they accept the permissions. Why would you want more than one redirect URL? Well, one might be for staging, one for production, and one for local development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The redirect URL receives both the &lt;code&gt;code&lt;/code&gt; and &lt;code&gt;state&lt;/code&gt; GET parameters. The website creating the &lt;em&gt;Add to Slack&lt;/em&gt; button decides on the state. It can then check that the state is there in the redirect URL. This prevents users from going directly to Slack without going through the website, because if they try to do that, they won&#39;t have the state and will fail the check at the redirect URL. This is useful if you want to restrict installs for your App to specific customers, e.g. those who&#39;ve solved a puzzle, or paid.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-is-this&#34;&gt;What is this?&lt;/h2&gt;
&lt;p&gt;This certainly isn&#39;t meant to be an OAuth2 guide at all. By writing this out, I think I&#39;ve helped myself understand the OAuth2 flow better though. That&#39;s really what snippets are all about.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Bit of Browser History Analysis</title>
      <link>https://davidbieber.com/snippets/2020-03-19-browsing-history/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-03-19-browsing-history/</guid>
      <description>&lt;p&gt;In a &lt;a href=&#34;https://davidbieber.com/snippets/2019-12-30-analyzing-my-browser-history&#34;&gt;previous snippet&lt;/a&gt; I started looking into how to analyze my browser history. Revisiting that idea tonight, I began looking into whether I might be able to infer topics of interest from my browsing history.&lt;/p&gt;
&lt;p&gt;Using my previous post as reference, I first made a copy of my browsing history:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp ~/Library/Application\ Support/Google/Chrome/Default/History ~/my-history
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, using sqlite3 (&lt;code&gt;sqlite3 ~/my-history&lt;/code&gt;) I began poking around.&lt;/p&gt;
&lt;p&gt;This query allowed me to pull up all my YouTube video views:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select visits.id, urls.title, urls.url
from visits
join urls on urls.id == visits.url
where urls.url like &amp;quot;%www.youtube.com/w%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this query gave me my Google Search history:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select visits.id, urls.title
from visits
join urls on urls.id == visits.url
where urls.url like &amp;quot;%www.google.com/search%&amp;quot; 
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This one gave me my Wikipedia browsing history:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select distinct urls.title 
from visits
join urls on urls.id == visits.url
where urls.url like &amp;quot;%wikipedia.org/wiki/%&amp;quot;
limit 50;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think it will be useful to bring in the contents of the URLs too, not just the title and url string, for determining topics of interest. Even without that, my Google Search history, YouTube history, and Wikipedia history are already an interesting start.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fastbook: Listen to Audiobooks Faster</title>
      <link>https://davidbieber.com/snippets/2020-03-02-fastbook/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-03-02-fastbook/</guid>
      <description>&lt;p&gt;Aaron Mayer &lt;a href=&#34;https://medium.com/100audiobooks/the-100-audiobook-challenge-terms-and-conditions-455c7e9409aa&#34;&gt;aims to listen to 100 audiobooks in a single month&lt;/a&gt;. He intends to listen to these audiobooks at 2x - 3x speed. Intense!&lt;/p&gt;
&lt;p&gt;For the last few weeks, I&#39;ve been working on &lt;a href=&#34;https://davidbieber.com/snippets/2020-02-21-jump-cut-programming/&#34;&gt;automatic video&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets/2020-02-26-video-tooling-progress/&#34;&gt;editing tools&lt;/a&gt;. And one of the core features I&#39;ve been working with is &lt;a href=&#34;https://github.com/carykh/jumpcutter/&#34;&gt;automatic speed adjustments to videos&lt;/a&gt; to eliminate silent airtime and make the videos more engaging. This seems like a perfect fit for Aaron&#39;s challenge.&lt;/p&gt;
&lt;p&gt;I&#39;ve adapted this tooling into a new tool I&#39;m calling &lt;a href=&#34;https://gist.github.com/dbieber/98f909640773b5b0a0fe5696da369a1b&#34;&gt;Fastbook&lt;/a&gt;. It accepts audiobooks in the form of &lt;code&gt;.wav&lt;/code&gt; files, and can apply speed adjustments to the silence and the spoken word independently, even removing silence entirely if desired.&lt;/p&gt;
&lt;p&gt;If Aaron can already comfortably (with great focus) listen to a book at 2.5x speed, he can listen to a 10 hour book in 4 hours. If 20% of that book is actually silence, then the 10 hour book becomes an 8 hour book with silence removed, and the total listen time drops to just 3h12. I think 20% may actually be a conservative estimate for silent time, though it will vary from narrator to narrator.&lt;/p&gt;
&lt;p&gt;Estimating 45 minutes saved per book, this tool can save over 3 days total time across 100 books. Or, alternatively, Aaron could drop the playback speed down from 2.5x to 2x without increasing his total listening time at all, but potentially helping out his comprehension substantially.&lt;/p&gt;
&lt;p&gt;This tool wont be appropriate for all audiobook listeners. For many, the silences matter, and removing them would degrade the quality of the book. For many, listening at 2.5x would also degrade the quality of the book. So use this tool with caution.&lt;/p&gt;
&lt;p&gt;For those of you who are intersted, however, here&#39;s how to use Fastbook.&lt;/p&gt;
&lt;h2 id=&#34;installing-fastbook&#34;&gt;Installing Fastbook&lt;/h2&gt;
&lt;p&gt;I&#39;ve made Fastbook available for free on GitHub. You can &lt;a href=&#34;https://gist.github.com/dbieber/98f909640773b5b0a0fe5696da369a1b&#34;&gt;access it here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use it, save it to your computer as &lt;code&gt;fastbook.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, make sure you have all the dependencies installed. See the dependencies section for what is required.&lt;/p&gt;
&lt;h2 id=&#34;pre-work-converting-your-book-to-wav&#34;&gt;Pre-work: Converting Your Book to &lt;code&gt;.wav&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You need your audiobook in wav format to use Fastbook.&lt;/p&gt;
&lt;p&gt;To convert an audiobook to wav, use &lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Install ffmpeg. Then, run &lt;code&gt;ffmpeg -i book.aax book.wav&lt;/code&gt; to convert an Audible audiobook to a wav file. There may be an additional step if your aax file is DRM protected.&lt;/p&gt;
&lt;h2 id=&#34;using-fastbook&#34;&gt;Using Fastbook&lt;/h2&gt;
&lt;p&gt;Now you can use Fastbook like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python fastbook.py \
--audio_path=/path/to/book.wav \
--output_path=/path/to/book-fast.wav \
--loud_speed=1 \
--quiet_speed=5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;--audio_path&lt;/code&gt; should point to an existing wav file that you downloaded or generated in the pre-work section. &lt;code&gt;--output_path&lt;/code&gt; is the path to the file that Fastbook will generate. Finally, &lt;code&gt;--loud_speed&lt;/code&gt; is how much to speed up the normal spoke text of the book by, and &lt;code&gt;--quiet_speed&lt;/code&gt; is how much to speed up the silence in the book by. You can remove silence by setting &lt;code&gt;--quiet_speed=99999&lt;/code&gt; or any other similiarly large number.&lt;/p&gt;
&lt;h3 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;Here are the dependencies you need to use Fastbook.&lt;/p&gt;
&lt;p&gt;First, you need &lt;strong&gt;Python 3&lt;/strong&gt;. You can follow &lt;a href=&#34;https://realpython.com/installing-python/&#34;&gt;these instructions&lt;/a&gt; to set up Python 3 if you don&#39;t already have it installed.&lt;/p&gt;
&lt;p&gt;Then, you need these Python depenencies: &lt;em&gt;fire&lt;/em&gt;, &lt;em&gt;scipy&lt;/em&gt;, &lt;em&gt;tqdm&lt;/em&gt;, &lt;em&gt;numpy&lt;/em&gt;, and &lt;em&gt;audiotsm&lt;/em&gt;. Install these with &lt;code&gt;pip install fire scipy tqdm numpy audiotsm&lt;/code&gt; or use your favorite Python package manager.&lt;/p&gt;
&lt;p&gt;Finally, to do the pre-work, you will likely need ffmpeg. Installation instructions are available &lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;read-quick&#34;&gt;Read quick!&lt;/h2&gt;
&lt;p&gt;I recommend for Aaron to use the default speed settings of &lt;code&gt;--loud_speed=1 --quiet_speed=5&lt;/code&gt;. This wont eliminate the silence entirely, but will reduce the audio time considerably. Then, for the remaining speed-up, I suggest using whatever media player you were already using, such as VLC which supports arbitrary speed adjustments in real time. Hpy rdng!&lt;/p&gt;
&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;p&gt;This blog post, narrated slowly:&lt;/p&gt;
&lt;p&gt;&lt;audio
controls
src=&#34;https://davidbieber.com/audio/fastbook.m4a&#34;&gt;
Your browser does not support the &lt;code&gt;audio&lt;/code&gt; element.
&lt;/audio&gt;&lt;/p&gt;
&lt;p&gt;This blog post again, now with just the silence accelerated:&lt;/p&gt;
&lt;p&gt;&lt;audio
controls
src=&#34;https://davidbieber.com/audio/fastbook-fast.m4a&#34;&gt;
Your browser does not support the &lt;code&gt;audio&lt;/code&gt; element.
&lt;/audio&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Video Tooling Progress</title>
      <link>https://davidbieber.com/snippets/2020-02-26-video-tooling-progress/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-02-26-video-tooling-progress/</guid>
      <description>&lt;p&gt;Over the last week and a half I&#39;ve been making screen recordings of myself programming. Mostly what I&#39;ve been programming is tooling to help myself make better screen recordings. Here&#39;s an overview of what I&#39;ve put together so far.&lt;/p&gt;
&lt;h2 id=&#34;auto-auto-jumpcutter&#34;&gt;Auto Auto-Jumpcutter&lt;/h2&gt;
&lt;p&gt;This springboards directly from carykh&#39;s &lt;a href=&#34;https://github.com/carykh/jumpcutter&#34;&gt;jumpcutter&lt;/a&gt; project, which uses &lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt; and AudioTSM to speed up the silent sections of a video. Auto Auto-Jumpcutter has two &amp;ldquo;auto&amp;quot;s in its name because jumpcutter already does automatic jumpcutting of videos, and Auto Auto-Jumpcutter uses &lt;a href=&#34;https://pythonhosted.org/watchdog/&#34;&gt;watchdog&lt;/a&gt; to automatically apply jumpcutter the moment a screen recording is captured.&lt;/p&gt;
&lt;p&gt;The result is that my typing appears superhuman in speed, but slows down while I&#39;m speaking, without me needing to do any manual editing to the video to achieve this effect.&lt;/p&gt;
&lt;h2 id=&#34;auto-commit&#34;&gt;Auto-Commit&lt;/h2&gt;
&lt;p&gt;I also made for myself a git auto-committer. Every time I save a file during a screen recording session, the change is immediately and automatically committed. The commit message is selected automatically from the diff. The result is that I have a timestamped log of all changes made during the recording. This is super useful for editing the recordings (both automatically and manually) because I can pinpoint exactly where in the recording any change took place. It also works hand-in-hand with the next piece of tooling.&lt;/p&gt;
&lt;h2 id=&#34;keyboard-shortcuts&#34;&gt;Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;Just using Auto Auto-Jumpcutter goes a long way toward having automatically edited videos, but it doesn&#39;t completely eliminate the need for manual editing.
For example, it provides no way to do multiple takes and stitch together the good parts of each. For this I&#39;ve set up a keyboard shortcut system for myself using the Python &lt;a href=&#34;https://pypi.org/project/keyboard/&#34;&gt;keyboard&lt;/a&gt; module. This way I can indicate via keyboard shortcuts to remove a selection of footage during the recording session, and have it automatically be removed during the automatic editing phase. This last step &amp;ndash; using the keyboard shortcuts to guide automatic editing &amp;ndash; is an active work in progress.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jump-Cut Programming: Take 1</title>
      <link>https://davidbieber.com/snippets/2020-02-21-jump-cut-programming/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-02-21-jump-cut-programming/</guid>
      <description>&lt;p&gt;I&#39;ve been toying around with recording myself programming. Here&#39;s a clip.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/OxsuHWVtMSM&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;In this clip I use &lt;a href=&#34;https://davidbieber.com/projects/python-fire&#34;&gt;Python Fire&lt;/a&gt; to create a simple two-function calculator. Nothing special about that.&lt;/p&gt;
&lt;p&gt;What is special is that the programming has automatically been sped up by &lt;a href=&#34;https://github.com/carykh/jumpcutter&#34;&gt;carykh/jumpcutter&lt;/a&gt;, and that I&#39;ve used &lt;a href=&#34;https://zulko.github.io/moviepy/&#34;&gt;moviepy&lt;/a&gt; to set the programming to the music &lt;a href=&#34;http://incompetech.com/music/royalty-free/index.html?isrc=USUAN1100414&#34;&gt;&amp;ldquo;Dangerous&amp;rdquo;&lt;/a&gt;, a clip I got from &lt;a href=&#34;https://www.youtube.com/audiolibrary/music&#34;&gt;YouTube&#39;s free Audio Library&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;lessons-learned-from-take-1&#34;&gt;Lessons Learned from &amp;ldquo;Take 1&amp;rdquo;&lt;/h2&gt;
&lt;h3 id=&#34;what-worked-well&#34;&gt;What worked well?&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;External Monitor&lt;/strong&gt;: I purchased an external monitor. This made a huge difference. Now I can manage video-editing tools, a terminal, a browser, etc on one screen, while keeping the contents of the video (the editor and public terminal) on the other screen and recording it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/carykh/jumpcutter&#34;&gt;carykh/jumpcutter&lt;/a&gt;&lt;/strong&gt;: This tool can automatically speed up the silent parts of a video, resulting in shorter less-boring videos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mac Screen Capture&lt;/strong&gt;: cmd-shift-5 lets you capture video on Mac. You can choose what directory the captured video is saved to. Before I discovered this, I used QuickTime, but this is easier to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Using &lt;a href=&#34;https://pythonhosted.org/watchdog/&#34;&gt;watchdog&lt;/a&gt;&lt;/strong&gt; This is a Python module that can monitor your filesystem and trigger an action when files are created or modified. I use it to a) automatically rename video files as they&#39;re created, and b) to automatically apply jumpcutting to new captured videos. The filename format I use is &lt;code&gt;YYYY-MM-DD-screen-recording-###.mov&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Python Fire&lt;/strong&gt;: The first twenty clips I recorded (not released) were all of me building the tooling I now use as I record videos. Most of this tooling lives in Python Fire CLIs. These CLIs let me do things like composite audio, perform auto-jumpcutting, and rename videos.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;things-to-improve&#34;&gt;Things to improve:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Zoom in!&lt;/strong&gt; The code is blurry and small and the video as is needs to be watched at 1080p to look OK, which is silly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Audio Quality&lt;/strong&gt; I have a lapel mic I&#39;m using for new recordings and it helps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Storytelling&lt;/strong&gt; Is a Python Fire CLI for adding and subtracting the most compelling story? I think there&#39;s room for improvement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Manual Editing&lt;/strong&gt; I did no manual editing for the clip above. I think for quality videos, however, learning to do some manual editing is going to be essential. We&#39;ll see how far my inclination to automate everything takes me first though.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;I&#39;m really enjoying this process of recording videos. And more than making the videos, I&#39;m enjoying building the software to help me make the videos. Next step for me is getting more familiar with moviepy. And Davinci Resolve. But one thing at a time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Future-Predicting Gameshow Host</title>
      <link>https://davidbieber.com/snippets/2020-02-08-future-gameshow-host/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-02-08-future-gameshow-host/</guid>
      <description>&lt;p&gt;A gameshow host reveals 2 boxes, box A and box B. In box A is either $1 million or 0, in box B there is $1000.&lt;/p&gt;
&lt;p&gt;You&#39;re told, choose either just box A or both A and B.&lt;/p&gt;
&lt;p&gt;You keep the contents of the boxes you choose.
Also, the host knows what box you will choose, and has placed $1 million in A if you will choose only A, and $0 in A if you will choose both A and B.&lt;/p&gt;
&lt;p&gt;Some contestants, faced with this choice, would choose both A and B. They reason that since the money has already been placed, choosing A and B is guaranteed to yield $1000 more than choosing just A.
Others would choose only A, since per the host&#39;s plans this option leads to a significantly better payout.&lt;/p&gt;
&lt;p&gt;Clearly choosing only A is $1000 worse than choosing both A and B, yet choosing A only is allegedly better given the host&#39;s foresight. These statements appear contradictory, and this situation is known as &lt;a href=&#34;https://en.wikipedia.org/wiki/Newcomb%27s_paradox&#34;&gt;Newcomb&#39;s Paradox&lt;/a&gt;.
How can we reconcile these two true but contradictory statements?&lt;/p&gt;
&lt;p&gt;We do so by clarifying:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Right now&lt;/em&gt; choosing only A is $1000 worse than choosing both A and B.&lt;/li&gt;
&lt;li&gt;However, having a brain&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;em&gt;at the time the money is placed&lt;/em&gt; that will lead you to choose only A at the time of choosing gives the $1 million outcome.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Is this something you have control over? Can you &lt;em&gt;decide&lt;/em&gt; at the time the money is placed to have a brain that will lead you to later choose only box A?&lt;/p&gt;
&lt;p&gt;Yes.&lt;/p&gt;
&lt;p&gt;It may seem like &lt;em&gt;no&lt;/em&gt;, for a few reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You didn&#39;t even know there was a choice to make.&lt;/li&gt;
&lt;li&gt;You surely don&#39;t get to make choices about how your brain works, right?&lt;/li&gt;
&lt;li&gt;Since the host is able know your choice ahead of time, that must mean it&#39;s predetermined, right?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, none of these reasons are entirely valid.&lt;/p&gt;
&lt;p&gt;First, it&#39;s true that at the time the money is placed, you didn&#39;t necessarily know you had a choice to make. You hadn&#39;t yet been informed that you would later be on this gameshow. However, it&#39;s possible you considered the situation as a hypothetical anyway (maybe while reading a blog post, for instance). It isn&#39;t necessary that you considered precisely the situation that you would later find yourself in, only that you&#39;ve given conscious deliberate thought to the way you make choices. By thinking this through, you can decide now whether you have a brain that would later choose box A or one that would later choose both A and B, should the gameshow situation ever arise.&lt;/p&gt;
&lt;p&gt;Next, you absolutely do get to make choices about how your brain works. You can choose when to sleep, when to study, what substances to ingest, and most importantly, what to focus your attention on. All of these levers are yours to pull, and they all affect how your brain will operate in the future.&lt;/p&gt;
&lt;p&gt;At the time you choose the boxes, it&#39;s still your decision as to which box(es) to choose. (In the sense that it&#39;s your brain that produces the decision.)
But you must have been predictable, at least to the host, for them to have predicted what choice you would later make.
(Nothing wrong with being predictable!)&lt;/p&gt;
&lt;p&gt;How is it that you were predictable? Does this require determinism?
One extreme way you may have been predictable is if the host knows exactly how events will play out, right down to the thoughts you will have and the choices you will make.&lt;/p&gt;
&lt;p&gt;It doesn&#39;t have to be &lt;em&gt;quite&lt;/em&gt; so extreme though. The host only claimed to have roughly one bit of information about you and the future: what binary choice you would make when confronted with the box dilemma. That doesn&#39;t require omniscience. The host may have no idea what the weather is going to be the next day, as long as they&#39;re able to predict whether or not you&#39;re taking box B.&lt;/p&gt;
&lt;p&gt;So maybe they know a little about how your mind works, or they&#39;ve read something you&#39;ve posted online that lets them conclude how you will handle the box situation.&lt;/p&gt;
&lt;p&gt;You must consider that whatever they know, they knew it at the time that they chose how to fill the boxes. (They likely also knew it at the time they chose to host the gameshow in the first place.)&lt;/p&gt;
&lt;p&gt;What I think is most likely is that this host does know precisely how you think about this choice. They do this by understanding to a very high degree of precision how your brain is going to cope with the decision of which boxes to choose. Think of the host as a very skilled poker player, that can read you like a book. Instead of just knowing whether you&#39;re bluffing or not, they know what you&#39;re going to think &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/6640273&#34;&gt;before you even think it&lt;/a&gt;. It&#39;s like weather forecasting, but instead of understanding the atmosphere, they&#39;re understanding you.&lt;/p&gt;
&lt;p&gt;And like with weather forecasting, their model is imperfect. It&#39;s good enough to know what box you&#39;ll choose, with certainty, but only because that only requires forecasting a small window (a week, let&#39;s say) into the future. Like the atmospheric conditions that determine the weather, your brain is a chaotic system. Any imperfection in the model, however small, will eventually blow up and lead to large errors in the model in the future. So our host can&#39;t model your every thought a year into the future, let alone e.g. the whole population&#39;s behaviors.&lt;/p&gt;
&lt;p&gt;So what boxes should you choose?&lt;/p&gt;
&lt;p&gt;You should choose to open just box A. By reaching this conclusion (and more importantly, by adopting the strategy for reasoning that leads to this conclusion), you guarantee yourself $1 million the next time you encounter a wealthy generous time travelling gameshow host interested in philosophy and mathematics.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;I say &amp;ldquo;brain&amp;rdquo;, but I really mean the whole of your situation and life circumstances. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>A Mostly-Complete List of Bieber Bot&#39;s Capabilities</title>
      <link>https://davidbieber.com/snippets/2020-02-04-bieber-bot-capabilities/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-02-04-bieber-bot-capabilities/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://davidbieber.com/projects/bieber-bot&#34;&gt;Bieber Bot&lt;/a&gt; has an ever-growing list of capabilities. I&#39;ve tried to capture that complete list here. Feel free to use &lt;a href=&#34;https://davidbieber.com/snippets/2020-01-25-ask-me-anywhere&#34;&gt;Ask Me Anywhere&lt;/a&gt; to inquire about any of these features and leave some contact info if you&#39;d like me to get in touch.&lt;/p&gt;
&lt;h2 id=&#34;timer-triggered-capabilities&#34;&gt;Timer-triggered capabilities:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Greetings, encouragement, and love!&lt;/li&gt;
&lt;li&gt;Piano and violin reminders&lt;/li&gt;
&lt;li&gt;Screen time monitoring&lt;/li&gt;
&lt;li&gt;Reminders to reconnect with old friends&lt;/li&gt;
&lt;li&gt;Reminders to exercise&lt;/li&gt;
&lt;li&gt;Is now a good time to do laundry?&lt;/li&gt;
&lt;li&gt;GoodReads updates&lt;/li&gt;
&lt;li&gt;FocusMate session planning&lt;/li&gt;
&lt;li&gt;TODOs of various kinds (&lt;em&gt;TODO&lt;/em&gt;, &lt;em&gt;tonight&lt;/em&gt;, &lt;em&gt;tomorrow&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Reminders of the importance of eating soon after waking up&lt;/li&gt;
&lt;li&gt;Facebook event tracking&lt;/li&gt;
&lt;li&gt;Assert Baton reminders&lt;/li&gt;
&lt;li&gt;Exercise Baton reminders&lt;/li&gt;
&lt;li&gt;Tweeting scheduled Tweets&lt;/li&gt;
&lt;li&gt;Transaction logging&lt;/li&gt;
&lt;li&gt;Yearly payroll tracking&lt;/li&gt;
&lt;li&gt;After work activity planning and reminders&lt;/li&gt;
&lt;li&gt;After work activity suggestions when nothing is already planned&lt;/li&gt;
&lt;li&gt;Sleep reminders&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chat-triggered-capabilities&#34;&gt;Chat-triggered capabilities:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sending messages between David and Adriana&lt;/li&gt;
&lt;li&gt;Violin, Piano, and Exercise tracking&lt;/li&gt;
&lt;li&gt;Food suggestions&lt;/li&gt;
&lt;li&gt;Suggests people or activities&lt;/li&gt;
&lt;li&gt;Assert Baton and Exercise Baton passing&lt;/li&gt;
&lt;li&gt;Baton status checking&lt;/li&gt;
&lt;li&gt;Budget status checking (Why is this not on a timer too?)&lt;/li&gt;
&lt;li&gt;Get BieberBot&#39;s version number&lt;/li&gt;
&lt;li&gt;Play Jeopardy (individually or against Adriana)&lt;/li&gt;
&lt;li&gt;Play Jeopardy in Croatian (individually or against Adriana)&lt;/li&gt;
&lt;li&gt;Add financial transaction details&lt;/li&gt;
&lt;li&gt;Add TODOs&lt;/li&gt;
&lt;li&gt;Send or schedule Tweets&lt;/li&gt;
&lt;li&gt;Log activities&lt;/li&gt;
&lt;li&gt;ACK! Any ol&amp;rsquo; text back to you (Great conversationalist!)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;other-capabilities&#34;&gt;Other capabilities:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Logs financial transactions (triggered by credit-card swipes)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think that&#39;s all! May have missed some, and there are more planned, but this is a mostly-comprehensive list as of Feb 4, 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s Next for Ask Me Anywhere?</title>
      <link>https://davidbieber.com/snippets/2020-01-26-next-steps-for-ama/</link>
      <pubDate>Sun, 26 Jan 2020 10:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-26-next-steps-for-ama/</guid>
      <description>&lt;p&gt;Yesterday I put up an early version of &lt;a href=&#34;https://davidbieber.com/snippets/2020-01-25-ask-me-anywhere/&#34;&gt;Ask Me Anywhere&lt;/a&gt;. You&#39;ll notice it&#39;s in the snippets section of the website, rather than part of the main blog. This gives me the freedom to post it even though I know it&#39;s not as polished as it could be.&lt;/p&gt;
&lt;p&gt;Now that this first pass is published, it&#39;s time to start thinking about where to go next with Ask Me Anywhere.&lt;/p&gt;
&lt;h2 id=&#34;short-term-stylistic-improvements&#34;&gt;Short Term: Stylistic Improvements&lt;/h2&gt;
&lt;p&gt;On mobile, the &amp;ldquo;Click to React&amp;rdquo; text shows up and is improperly styled. I didn&#39;t intend for it to show up at all. On certain mobile devices and browsers, it seems there are even larger issues than this, such as double tapping sometimes not working at all. Let me know if it doesn&#39;t work with your browser so I can fix it.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;Click to React&amp;rdquo; text also sometimes causes the flow of the text to change, which interrupts the reading experience somewhat. I would like to fix this so that the text flow is never changed by the presence of this message.&lt;/p&gt;
&lt;p&gt;I also would like to tweak the styling to minimize the friction someone feels in deciding to leave a message. I think adding a question-mark icon, which when moused-over gives an explanation of why this feature is there in the first place could be useful. This could strike a good balance between being non-intrusive and letting people know that their thoughts are warmly welcomed.&lt;/p&gt;
&lt;h2 id=&#34;longer-term-socratic-tutorials&#34;&gt;Longer Term: &amp;ldquo;Socratic Tutorials&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Ask Me Anywhere&amp;rdquo; is really an MVP that came out of a larger idea: &amp;ldquo;Socratic Tutorials&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;My idea is that a &lt;em&gt;Socratic Tutorial&lt;/em&gt; is a blog post structured in a very particular way. It begins with a brief introduction to a topic, followed by a series of questions you might want to ask about that topic. Click a question to reveal an answer to that question, followed by additional questions you might have about the topic. In this way, you can explore the contents of the post in the order that best suits your interests. I also hope that by having to click questions to view the answers, it will help motivate what you&#39;re reading, since you&#39;ll be actively wondering about the question when you read the response.&lt;/p&gt;
&lt;p&gt;If a reader of a &lt;em&gt;Socratic Tutorial&lt;/em&gt; doesn&#39;t understand something, or has a question that isn&#39;t already addressed, they can choose to ask that question. The author can then add it to the list of questions available during reading if they choose to do so. In that way, &amp;ldquo;Ask Me Anywhere&amp;rdquo; is almost a subset of the features planned for Socratic Tutorials.&lt;/p&gt;
&lt;p id=&#34;cbp_example&#34;&gt;
My very first blog post ever was about &lt;a href=&#34;https://davidbieber.com/post/2012-09-04-collapsible-blog-posts/&#34;&gt;Collapsible Blog Posts&lt;/a&gt;. The premise was that you could click on a paragraph, and it would be replaced with a summary of that paragraph. This paragraph is an example; click on it, and it will be replaced with a summary.
&lt;/p&gt;
&lt;p id=&#34;_cbp_example&#34;&gt;
This was a
&lt;a href=&#34;https://davidbieber.com/post/2012-09-04-collapsible-blog-posts/&#34;&gt;Collapsible Blog Post&lt;/a&gt; paragraph. Click to un-collapse.
&lt;/p&gt;
&lt;p&gt;I learned early on from this experiment that the reverse process actually is more useful. Present the user with a short summary, and let them click if they want to read additional details.&lt;/p&gt;
&lt;p id=&#34;cbp_reverse&#34;&gt;
Here&#39;s an example of a short paragraph that you can click to reveal additional details.
&lt;/p&gt;
&lt;p id=&#34;_cbp_reverse&#34;&gt;
The reason it makes more sense to show the summary first is that it empowers the user to choose how to spend their time. If they are interested in understanding more about a topic, they can choose to expand the paragraph and read the details. If instead they read the extended paragraph first, there isn&#39;t much value to them also reading the summarized version. And if they just want the summarized version, having them see the full version first isn&#39;t too useful either.
&lt;/p&gt;
&lt;p&gt;In some ways the idea for &amp;ldquo;Socratic Tutorials&amp;rdquo; is a spiritual descendent of Collapsible Blog Posts. They both share a goal: give the user control over the information they&#39;re consuming, as they&#39;re reading. Socratic Tutorials and Ask Me Anywhere take an additional step though, giving the user the ability to communicate directly with the author while they&#39;re reading.&lt;/p&gt;
&lt;p&gt;You&#39;ll likely have noticed that this post uses &amp;ldquo;Ask Me Anywhere&amp;rdquo;. That means you can double click any paragraph, or click between two paragraphs, in order to send a note directly to the author.
I hope you do this, as I&#39;d love to hear any thoughts you may have.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ask Me Anywhere</title>
      <link>https://davidbieber.com/snippets/2020-01-25-ask-me-anywhere/</link>
      <pubDate>Sat, 25 Jan 2020 10:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-25-ask-me-anywhere/</guid>
      <description>&lt;p&gt;With this post, I&#39;m demoing a new work-in-progress feature for my blog called &amp;ldquo;Ask Me Anywhere&amp;rdquo;.
The feature lets you leave a comment or ask a question at &lt;em&gt;any&lt;/em&gt; point while reading my writing.
The goal is to encourage readers to respond to my writing, because I&#39;m interested in having a conversation and hearing what you have to say.&lt;/p&gt;
&lt;p&gt;You can try it right now. Either &lt;strong&gt;double click&lt;/strong&gt; (double-tap on mobile) on any paragraph, or click between two paragraphs, to open a comment box. Enter your thoughts, click submit, and &lt;em&gt;voila!&lt;/em&gt;, comment submitted.&lt;/p&gt;
&lt;p&gt;You&#39;re welcome to enter your email address, name, Twitter handle, Facebook ID, or any other form of contact info if you&#39;d like me to respond. And if you do, there is high likelihood that I will respond. If you don&#39;t, you&#39;re anonymous, and you certainly won&#39;t receive a private response.&lt;/p&gt;
&lt;p&gt;Comments and questions that you submit are not posted publicly anywhere. This isn&#39;t a comments section for public discussion. If you want to discuss my posts publicly, submit them on Hacker News or Reddit, or head to Twitter to engage. While this website isn&#39;t the place for public discussions, I am curious to know about such a discussion if it&#39;s happening. So, feel free to let me know about such a discussion via &amp;ldquo;AMA&amp;rdquo; if you&#39;re starting one.&lt;/p&gt;
&lt;p&gt;What happens when you leave a comment? This part&#39;s still a work in progress, but ideally my digital personal assistant &lt;a href=&#34;https://davidbieber.com/projects/bieber-bot&#34;&gt;Bieber Bot&lt;/a&gt; will notify me of the new comment at the next convenient time. If there are many comments coming in, Bieber Bot will try to be smart about batching the notifications together, and so the notification may be delayed, but I&#39;ll soon read your message.&lt;/p&gt;
&lt;p&gt;For now, Ask Me Anywhere is only activated for this one post. Once I&#39;ve tested it out a bit, and perhaps made some changes, I&#39;m hoping to then activate it for the &lt;a href=&#34;https://davidbieber.com/posts&#34;&gt;rest of my posts&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/snippets&#34;&gt;and snippets&lt;/a&gt; as well. So I&#39;m particularly keen to get feedback early so I can iterate and improve it soon. Give it a try, let me know what you think. You know how to reach me!&lt;/p&gt;
&lt;p&gt;If you&#39;re interested in learning more about the internals, the source is &lt;a href=&#34;https://github.com/dbieber/davidbieber.com/blob/772b5dd87da532357a1cdf04a8caa027268bfbac/hugo/assets/js-src/ask-me-anywhere.jsx&#34;&gt;available on GitHub&lt;/a&gt;. Feel free to have a poke around.&lt;/p&gt;
&lt;p&gt;The name of the project &amp;ndash; &amp;ldquo;Ask Me Anywhere&amp;rdquo; &amp;ndash; reflects my intention to enable readers to ask questions as they&#39;re reading. However, I welcome all types of reactions: questions, comments, feedback, corrections, new ideas, etc. I look forward to hearing what you have to say.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How much time has humanity spent on different areas of science?</title>
      <link>https://davidbieber.com/snippets/2020-01-24-time-spent-on-science/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-24-time-spent-on-science/</guid>
      <description>&lt;p&gt;How much time has humanity, collectively, spent researching physics?&lt;/p&gt;
&lt;p&gt;What about chemistry? Neuroscience? Algorithms? (etc&amp;hellip;)&lt;/p&gt;
&lt;p&gt;How has this rate of study changed over time?
How much of it is duplicate work (e.g. two nations or organizations independently working toward the same milestones before sharing their findings)?&lt;/p&gt;
&lt;p&gt;What fraction of this is done by professors, post docs, PhD students, etc?&lt;/p&gt;
&lt;p&gt;Particularly in the last 100 years, what have these numbers been?&lt;/p&gt;
&lt;p&gt;I&#39;m interested in visualizing some of these metrics, because I think they would be useful for putting the work that I see happening around me in machine learning and in neuroscience into perspective. I also think this data would tell a fascinating story.&lt;/p&gt;
&lt;p&gt;For example, one plot that I think would be compelling would be person-hours-per-year spent thinking about physics plotted as a function of time over the last 100 years, with important physics milestones shown on the same plot (e.g. as a &lt;a href=&#34;https://medium.com/berkeleyischool/how-to-create-a-visualization-showing-events-on-time-series-data-in-excel-96abbc1475e0&#34;&gt;time series plot with events&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;One worry with such a visualization is that the population is growing rapidly, and so the interesting story of how humanity&#39;s attention has shifted between fields over time may be lost to a visualization that simply shows population growth. It may be necessary to normalize by population to tell such a story.&lt;/p&gt;
&lt;p&gt;It may seem infeasible to precisely collect this data, as there is no public registry of who is thinking about what. However, I think the data is perhaps more readily available than appears at first blush.&lt;/p&gt;
&lt;p&gt;Where would the data come from?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Search trends&lt;/li&gt;
&lt;li&gt;University enrollments&lt;/li&gt;
&lt;li&gt;Publication counts&lt;/li&gt;
&lt;li&gt;Surveys&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Search trends are of course a more recent source of data, only going back one or two decades. The pre-1990s version of search trends might be library records, or book sales.&lt;/p&gt;
&lt;p&gt;University enrollments and degrees granted tells a significant story about how many people are studying different areas. You can roughly estimate how much time a student majoring in physics puts into their studies, and if course enrollments are available that estimate can be even more precise.&lt;/p&gt;
&lt;p&gt;Scientific fields make their mark on the world by publishing their research. Counting publications can provide an estimate of one piece of humanity&#39;s effort studying science.&lt;/p&gt;
&lt;p&gt;Finally, for contemporary data, and maybe even a little historical data, one could uses surveys / polling techniques to estimate where scientific mindshare is going today.&lt;/p&gt;
&lt;p&gt;Among this data I&#39;d be curious to see when historically there have been large swings in mindshare toward a particular topic. Right now, anecdotally, machine learning research is engaging a quickly increasing number of people, including drawing people away from other fields. I&#39;d love to see this anecdotal evidence backed up (or refuted) by data. And I expect there are plenty of similar historical precidents that I would be quite interested in learning more about as well.&lt;/p&gt;
&lt;p&gt;I don&#39;t forsee collecting this data or performing these visualizations myself in the near future. This post is just an opportunity to think aloud, not a plan for my own action. But if you have data like this, or know of someone who has done a related analysis, I&#39;d be quite interested to hear about it. Don&#39;t hesitate to get in touch.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Say One Thing Well</title>
      <link>https://davidbieber.com/snippets/2020-01-14-say-one-thing-well/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-14-say-one-thing-well/</guid>
      <description>&lt;p&gt;Blog posts written by amateurs are often interesting and entertaining; they can offer perspectives not seen elsewhere. However, they often fall into the trap of trying to do too much. The best blog posts do one thing, and do it well. If you&#39;re writing a blog post, you should choose a single, narrow point that you want to make, and make it well.&lt;/p&gt;
&lt;p&gt;While this may seem like obviously good advice, in practice the temptation to broaden the scope of a blog post can be very real. So it is important to actively practice discretion in limiting the scope of any post.&lt;/p&gt;
&lt;p&gt;How does scope creep come about? Authors may have a temptation to write about tangentially related topics. Sometimes this will be in order to provide justification or context. Other times the author simply has multiple lessons on the same topic they wish to share.&lt;/p&gt;
&lt;p&gt;Any one of these scenarios will lead the author to increase the scope of their writing. Even in the face of these situations, however, it is important to keep a narrow scope.&lt;/p&gt;
&lt;p&gt;In this post, for example, the core message is that &amp;ldquo;when writing a blog post, you should have a narrowly scoped thesis.&amp;rdquo; It is tempting for me to then also write about how to choose that thesis. After all, this seems a natural discussion to have while explaining the importance of a narrow scope. However, this would be a dangerous move, because a good discussion about how to choose a thesis well requires giving advice like &amp;ldquo;ask yourself: what are you interested in and knowledgeable about?&amp;quot;, and &amp;ldquo;think about what your audience is likely to care about&amp;rdquo;, etc. These suggestions don&#39;t help make the core point, that your scope should be exceedingly narrow.&lt;/p&gt;
&lt;p&gt;In writing this post, it is tempting to write about how &amp;ldquo;trying to do too much can lead to doing multiple things poorly&amp;rdquo; applies in other, non-writing, contexts too. This has the potential to be an insightful discussion. However, this would only serve to detract from the main point: in &lt;em&gt;writing blog posts specifically&lt;/em&gt;, you should choose a single main point and make it well. Trying to broaden this to other contexts would weaken the argument, because the wider the context is, the more exceptions there are. If I had said &amp;ldquo;in all of life, do one thing and do it well&amp;rdquo;, people would correctly protest: that&#39;s no way to live a life, you should aim to be well-rounded. So, I strengthen my argument by narrowing its scope: in writing a blog post, pick a single thesis and defend it convincingly.&lt;/p&gt;
&lt;p&gt;Why is it important to have just one main point? To start, having a single well defined main point improves the clarity of your writing. It is easier to be persuasive when you have a well-defined objective you are trying to impress upon your readers. Stray too far from this main point and it distracts the reader and weakens your piece.&lt;/p&gt;
&lt;p&gt;In the age of online writing and sharing, the importance of a single clear thesis is increased. Having a well-scoped piece increases its sharability. There is no risk that the recipient of the shared article will mistake the reason for its sharing. Having a well-scoped piece also makes it easier to reference that piece in the future. One can simply link to the article if they want to leverage its argument, rather than needing to specify &amp;ldquo;in the third section of David&#39;s piece on online writing&amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Additionally readers have limited time and attention. So, don&#39;t bury the lead. Don&#39;t make readers have to dig deep to uncover a point that can be stated succinctly. Show your readers your respect for their time and attention by making your point immediately clear. Then they can make an informed choice about whether they&#39;d like to learn more. It&#39;s their time. Don&#39;t trick them with ambiguous or click-bait headlines. Let them invest it well by telling them upfront what it is you want to convince them of.&lt;/p&gt;
&lt;p&gt;Of course there are exceptions to the rule. For educational pieces, teaching a curriculum of topics, it may be appropriate to have multiple lessons. And if you&#39;re writing for literary value, then the core takeaway may not be the central reason for your writing. In the general case though, critical for the vast majority of blogs being written today, it is wise to stick to a single thesis. State it clearly and defend it well.&lt;/p&gt;
&lt;p&gt;If you&#39;ve learned just one thing from this article, it&#39;s that the best articles should leave you with just one thing to learn.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing Assistant Tool Idea</title>
      <link>https://davidbieber.com/snippets/2020-01-13-writing-tool-idea/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-13-writing-tool-idea/</guid>
      <description>&lt;h3 id=&#34;background-writing-is-hard&#34;&gt;Background: Writing is Hard&lt;/h3&gt;
&lt;p&gt;Sometimes I find writing feels easy &amp;ndash; e.g. when &lt;a href=&#34;https://davidbieber.com/snippets/2019-12-30-writing-for-no-audience/&#34;&gt;writing for no audience&lt;/a&gt;, when writing something you&#39;ve already thought extensively about, when telling a story in a logical order that you&#39;re deeply familiar with. Other times, I find writing very difficult.&lt;/p&gt;
&lt;p&gt;When I&#39;m writing a paper, I am writing explicitly for an audience, the story is not always clear immediately, and the material is something I&#39;m becoming familiar with over time, not something about which I&#39;m already deeply familiar.
So, I find paper writing hard.&lt;/p&gt;
&lt;p&gt;I have an idea that I think will help me write more effectively. It&#39;s a software tool that structures the time you spend writing. I&#39;ll describe the tool, but I don&#39;t anticipate building it. Perhaps we can come up with a low-resource version of this idea, e.g. with paper and pencil, that I can try even without building this tool.&lt;/p&gt;
&lt;h3 id=&#34;the-writing-system&#34;&gt;The Writing System&lt;/h3&gt;
&lt;p&gt;The tool presents you with a prompt, a textbox, and a timer.&lt;/p&gt;
&lt;p&gt;The initial prompt is &amp;ldquo;What do you want to write about?&amp;quot;, and the initial timer is for 5 minutes. Subsequent prompts will be determined from what you&#39;ve entered in the past.&lt;/p&gt;
&lt;p&gt;In the textbox, you are encouraged to respond to the prompt.&lt;/p&gt;
&lt;p&gt;As part of your response, you can issue some commands / keywords.
If you start a line with &lt;code&gt;!&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;, then that line will get used as a future prompt.
You can specify the relative importance of a future prompt by including a priority.
This will determine the order in which you are presented with the prompts.
E.g. &lt;code&gt;!0&lt;/code&gt; is highest priority, and so such a line will become the next prompt you receive, unless there are other priority 0 prompts already queued up.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;! &amp;lt;topic&amp;gt;&lt;/code&gt; is short for &amp;ldquo;&amp;lt;topic&amp;gt; is a topic I want to write about later&amp;rdquo;
&lt;code&gt;? &amp;lt;question&amp;gt;&lt;/code&gt; is short for &amp;ldquo;&amp;lt;question&amp;gt; is a question I want to answer later&amp;rdquo;&lt;/p&gt;
&lt;p&gt;There should also be a way to indicate &amp;ldquo;&amp;lt;topic&amp;gt; is a topic I&#39;ll need to do more research on&amp;rdquo;, and then for one of the prompts to be about spending time researching a topic, rather than writing about it. Then the next prompt may be to write about what you just learned in the research section.&lt;/p&gt;
&lt;p&gt;Other available commands include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:pause&lt;/code&gt; to stop the timer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:unpause&lt;/code&gt; to start the timer again&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:extend&lt;/code&gt; to add additional time to the timer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:next&lt;/code&gt; to skip to the next prompt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The system is easily extensible, so a writer with a programming background can easily add new commands, or modify the logic that determines when prompts are shown and when breaks are taken. A programming-proficient writer will also have programmatic access to everything they write, as well as the corresponding prompts and metadata.&lt;/p&gt;
&lt;p&gt;Once the timer reaches 0, a short break is initiated, and then the next prompt is revealed.&lt;/p&gt;
&lt;p&gt;The idea is to move quickly, and get all your thoughts onto the page, without getting bogged down in a DFS traversal of information about a single line of the overall text.&lt;/p&gt;
&lt;h3 id=&#34;additional-details&#34;&gt;Additional details&lt;/h3&gt;
&lt;p&gt;Every keystroke is logged, so if you write something, and then switch to a new version of it, you will still be able to see the original version. No need to worry about pasting in a password though, since the keylogging data is readily accessible in a plaintext format and you can edit it directly e.g. if anything sensitive does leak in.&lt;/p&gt;
&lt;p&gt;This system has a decent amount of overlap with the &lt;a href=&#34;https://davidbieber.com/projects/shh-shell&#34;&gt;shh shell&lt;/a&gt; project that I&#39;ve already built,
and perhaps a version of this new idea could be easily added to the shh shell. Alternatively, the shh-shell could be forked to build this new system.&lt;/p&gt;
&lt;p&gt;Calendar integration would be cool, so that it times your prompts nicely if you have a meeting coming up so you get to a good break point in time for your meeting.&lt;/p&gt;
&lt;h3 id=&#34;implementation-thoughts&#34;&gt;Implementation Thoughts&lt;/h3&gt;
&lt;p&gt;I&#39;d like to build this onto an existing text editor, rather than writing my own. E.g. using Google Docs would be good.
However, the disadvantage of this is that it makes the keystroke logging feature more difficult. Fortunately, Google Docs does have good history tracking. Google Docs also provides good programmatic access. So, an agent running in the background while you write could be taking periodic snapshots too. Such an agent could also be extracting the commands and prompts you write.&lt;/p&gt;
&lt;p&gt;However, it wouldn&#39;t be able to execute the commands immediately, the way shh shell does. For some commands this may be a real disadvantage.&lt;/p&gt;
&lt;p&gt;I also like the idea of the agent giving the prompts being Bieber Bot &amp;ndash; that is, being the same &lt;em&gt;being&lt;/em&gt; as my personal digital assistant. I can picture it asking me &amp;ldquo;you&#39;ve been writing continuously for over an hour; is it time for a break?&amp;rdquo; or &amp;ldquo;it looks like you stopped writing abruptly there, did you get distracted?&amp;quot;.&lt;/p&gt;
&lt;h3 id=&#34;initial-experimentation&#34;&gt;Initial Experimentation&lt;/h3&gt;
&lt;p&gt;I&#39;ve been trying the idea out in a low-tech way (manually timing things, manually looking up what the next prompt should be).&lt;/p&gt;
&lt;p&gt;Here is the main issue I&#39;ve seen so far in the first half hour of testing. When the time runs out for a prompt, I&#39;m still in the middle of the prompt. I&#39;ve usually started expounding on some idea relevant to the prompt, and there are actually several ideas remaining that I haven&#39;t even started exploring for the prompt yet. So what should have happened / what should I do next time? Maybe I could have done a higher level discussion of the prompt and made new future sub-prompts along the way. Or at the end of a section, I could have the system give me a bit of time to create sub-prompts of things I&#39;d like to address in the section but didn&#39;t get to.&lt;/p&gt;
&lt;p&gt;I could see having a limited time to create new prompts be a good forcing function for coming up with structured high level thinking after a moderate amount of time of lower level writing. So in my next round of testing, I&#39;ll try this, and continue to iterate on the idea.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning by Teaching in Online Education</title>
      <link>https://davidbieber.com/snippets/2020-01-09-learning-by-teaching/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-09-learning-by-teaching/</guid>
      <description>&lt;p&gt;Long ago (2013) I spent a summer interning at Khan Academy.
Also long ago (2014) &lt;a href=&#34;https://twitter.com/harvest_zhang&#34;&gt;Harvest&lt;/a&gt; and I built a tool for creating educational videos online, in the browser (&lt;a href=&#34;https://davidbieber.com/projects/teach-everyone&#34;&gt;Teach Everyone&lt;/a&gt;; warning, bit rot ahead).&lt;/p&gt;
&lt;p&gt;Today, I want to see these two methodologies combined.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I want it to become common practice that after you spend significant time learning something online, you make a quick-and-dirty video explaining what you just learned.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;the-vision&#34;&gt;The Vision&lt;/h3&gt;
&lt;p&gt;Imagine you&#39;ve just completed a series of organic chemistry lessons on Khan Academy. The KA website pops up a modal recommending that you &amp;ldquo;Make a video teaching what you learned to help solidify your understanding of Organic Chemistry!&amp;quot;.&lt;/p&gt;
&lt;p&gt;You click through to a browser based video creation tool &amp;ndash; a cross between Google Slides, Illustrator / Teach Everyone, and OBS / a video editor.
In minutes, you&#39;re able to assemble a video teaching the material you&#39;ve spent the last hours or days wrapping your head around.&lt;/p&gt;
&lt;p&gt;You combine text, images, drawings, video, and audio to create your video. And when you&#39;re done, you have the option to save it privately, share it on YouTube or social media, or to make it visible to others studying the same subject.&lt;/p&gt;
&lt;h3 id=&#34;benefits&#34;&gt;Benefits&lt;/h3&gt;
&lt;p&gt;There are two main benefits from this approach.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You get to learn by teaching.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Teaching is a super effective way to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reinforce the material so that you remember it longer&lt;/li&gt;
&lt;li&gt;Help you notice gaps in your understanding and fill them in&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So by preparing this little video after spending all that time learning, you&#39;ll be left with a better and longer lasting understanding of the material.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Others can learn from &lt;em&gt;you&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Often times the best teachers are those who remember what it&#39;s like not to understand. Since you&#39;ve just gone through the process of learning the material, you know exactly which parts were difficult to grasp and what it took for you to grasp them. So your video may end up helping others more than the KA videos in some cases!&lt;/p&gt;
&lt;h3 id=&#34;video-creation-tool&#34;&gt;Video Creation Tool&lt;/h3&gt;
&lt;p&gt;This post isn&#39;t a design doc, but I will briefly sketch out what I imagine for the video creation tool.&lt;/p&gt;
&lt;p&gt;The main interface is a video preview above a timeline, similar to what you would see in Davinci Resolve or any professional video editing tool. You additionally have the option to create clips.&lt;/p&gt;
&lt;p&gt;You can create clips from text, images, KA-style drawings, audio, or video. Importantly, you can record audio and video clips, or create a KA-style drawing, directly in your browser.&lt;/p&gt;
&lt;p&gt;Once you&#39;ve created some clips, you can position them both in time (on the timeline), and in space (on the video preview).&lt;/p&gt;
&lt;p&gt;I intend to write more about the details of this vision for video creation tool at a later point, but for now the most important thing about it is that it prioritizes being quick to use over being fully featured and professional, and that it can be used directly in the browser. This way it can be used by online learners as part of their online learning experience.&lt;/p&gt;
&lt;h3 id=&#34;additional-notes&#34;&gt;Additional Notes&lt;/h3&gt;
&lt;p&gt;My main premise is that students, young and old, should have a light-weight way to create educational videos immediately after learning something online.&lt;/p&gt;
&lt;p&gt;I&#39;ve framed this discussion around a hypothetical tool for students to use on Khan Academy, but it applies equally well to educational videos on YouTube and elsewhere. &lt;a href=&#34;https://davidbieber.com/projects/teach-everyone&#34;&gt;Teach Everyone&lt;/a&gt; was an early prototype showing that you can create Khan Academy style animated drawings (i.e. virtual writing on a blackboard) with accompanying audio directly in the browser. Since then, Teach Everyone has suffered some bit rot and unfortunately isn&#39;t operational today. However, I&#39;m hopeful that some new project will step up, and provide an even better in-browser experience for educational video creation. And then beyond that, I&#39;m hopeful that this tool becomes common place for students to use as part of their everyday online learning routine.&lt;/p&gt;
&lt;p&gt;If you want to discuss these ideas, don&#39;t hesitate to get in touch: &lt;a href=&#34;mailto:david810+learning-by-teaching@gmail.com&#34;&gt;david810+learning-by-teaching@gmail.com&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What does &#34;Ordinary&#34; mean in Ordinary Least Squares?</title>
      <link>https://davidbieber.com/snippets/2020-01-08-ordinary-least-squares/</link>
      <pubDate>Wed, 08 Jan 2020 02:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-08-ordinary-least-squares/</guid>
      <description>&lt;p&gt;&amp;ldquo;Ordinary Least Squares&amp;rdquo; regression, or OLS for short, is a method for finding a best-fit line, given a set of data points. When people refer to linear regression without additional context or qualifiers, they&#39;re probably referring to ordinary least squares regression.&lt;/p&gt;
&lt;p&gt;So, what does &amp;ldquo;ordinary&amp;rdquo; mean in this context? Is it a mathematical term with a precise technical meaning?&lt;/p&gt;
&lt;p&gt;Well, no. In this case &amp;ldquo;ordinary&amp;rdquo; means exactly what you might expect: standard, vanilla, lacking any bells and whistles. Since least squares regression is so common, there are lots of variants. Weighted Least Squares (in which each data point is given its own weight) is a such a variant. So, in OLS, the O for ordinary simply means we&#39;re not referring to one of these variants.&lt;/p&gt;
&lt;p&gt;What about &amp;ldquo;ordinary differential equations&amp;rdquo; (ODEs)? What does ordinary refer to there?&lt;/p&gt;
&lt;p&gt;In that context, ordinary refers to ordinary derivatives, as opposed to partial derivatives. So again, it&#39;s not a mathematical term like a reference to ordinal numbers.&lt;/p&gt;
&lt;p&gt;In both cases, ordinary seems to take on its ordinary English definition &amp;ndash; its OED, if I may.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pyd-swyt; cf-bh-din</title>
      <link>https://davidbieber.com/snippets/2020-01-02-pyd-swyt-cf-bh-din/</link>
      <pubDate>Thu, 02 Jan 2020 02:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-02-pyd-swyt-cf-bh-din/</guid>
      <description>&lt;h3 id=&#34;pyd-swyt-cf-bh-din&#34;&gt;pyd-swyt; cf-bh-din&lt;/h3&gt;
&lt;p&gt;It&#39;s pronounced just like it&#39;s spelled (&amp;ldquo;pied, swite, cuff, buh-din&amp;rdquo;). It&#39;s my life motto.
And I think these are good principles to live by. Here they are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pursue your dreams.&lt;/li&gt;
&lt;li&gt;Say what you think.&lt;/li&gt;
&lt;li&gt;Cultivate friendships.&lt;/li&gt;
&lt;li&gt;Be happy.&lt;/li&gt;
&lt;li&gt;Do it now.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I think each of these is self-explanatory. Briefly though, let&#39;s consider each.&lt;/p&gt;
&lt;h3 id=&#34;pursue-your-dreams&#34;&gt;Pursue Your Dreams&lt;/h3&gt;
&lt;p&gt;Work toward long term goals you think are worthwhile.
It&#39;s easy to fall into the trap of chasing promotions and paychecks, so the &amp;ldquo;pyd&amp;rdquo; in pyd-swyt serves as a reminder to never lose sight of your dreams.&lt;/p&gt;
&lt;h3 id=&#34;say-what-you-think&#34;&gt;Say What You Think&lt;/h3&gt;
&lt;p&gt;It can be easier to go along with the status quo than to voice dissent.
It can be easier to assume others are correct than to voice confusion.
Usually though, it is better to express your dissent / confusion / support.
The &amp;ldquo;swyt&amp;rdquo; in pyd-swyt serves as a constant reminder to speak your mind, especially when it would be more comfortable not to do so.&lt;/p&gt;
&lt;h3 id=&#34;cultivate-friendships&#34;&gt;Cultivate Friendships&lt;/h3&gt;
&lt;p&gt;Reach out to people you care about, and to people you want to know better.
Reconnect with those you haven&#39;t seen in a long time, rather than losing touch with them gradually.
Time spent with friends is time well-spent, so the &amp;ldquo;cf&amp;rdquo; in &amp;ldquo;cf-bh-din&amp;rdquo; stands as a reminder to cultivate friendships.&lt;/p&gt;
&lt;h3 id=&#34;be-happy&#34;&gt;Be Happy&lt;/h3&gt;
&lt;p&gt;Do the things you love, and do them often.
Spend time with the people you care about.
Do what makes you happy.
Don&#39;t sacrifice these things for your other values.
&amp;ldquo;bh&amp;rdquo;; be happy.&lt;/p&gt;
&lt;h3 id=&#34;do-it-now&#34;&gt;Do It Now&lt;/h3&gt;
&lt;p&gt;These are principles for now.
Don&#39;t wait to pursue your dreams.
Don&#39;t wait to say what you think.
Don&#39;t wait to cultivate friendships.
Certainly don&#39;t wait to be happy.
Do each of these things every day, starting now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What To Do in Moments of Internet Addiction</title>
      <link>https://davidbieber.com/snippets/2020-01-02-moments-of-internet-addiction/</link>
      <pubDate>Thu, 02 Jan 2020 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-02-moments-of-internet-addiction/</guid>
      <description>&lt;p&gt;I often feel addicted to YouTube, TV shows, browsing HackerNews, or social media.
When I do, I&#39;m tempted to just keep scrolling or watching, and I can waste hours on the internet.
Afterward, and even during, I may feel an inclination to stop, but I continue consuming content anyway.
It feels unhealthy, and I generally regret when I spend my time this way.
For some reason, I do it anyway though, and so I think of this habit like an addiction.&lt;/p&gt;
&lt;p&gt;If you&#39;re like me and fall into these unhealthy attention-consuming rabbit holes, here is a list of things we can do instead of continuing the addictive behavior.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Nothing; doing &lt;em&gt;nothing&lt;/em&gt; is a perfectly valid option.&lt;/li&gt;
&lt;li&gt;Say hi to a friend.&lt;/li&gt;
&lt;li&gt;Call home.&lt;/li&gt;
&lt;li&gt;Write.&lt;/li&gt;
&lt;li&gt;Go for a walk.&lt;/li&gt;
&lt;li&gt;Read a book.&lt;/li&gt;
&lt;li&gt;Monologue.&lt;/li&gt;
&lt;li&gt;Think.&lt;/li&gt;
&lt;li&gt;Make plans for the future.&lt;/li&gt;
&lt;li&gt;Evaluate HALT (hungry? angry? lonely? tired?)&lt;/li&gt;
&lt;li&gt;Evaluate &lt;a href=&#34;https://davidbieber.com/snippets/2020-01-02-pyd-swyt-cf-bh-din&#34;&gt;pyd-swyt; cf-bh-din&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&#39;m &lt;a href=&#34;https://davidbieber.com/snippets/2019-12-30-analyzing-my-browser-history&#34;&gt;toying with&lt;/a&gt; the idea of getting Bieber Bot to notice when I&#39;m exhibiting addictive behavior. If I can get that working, I&#39;d love for Bieber Bot to notice when I&#39;m addicted to YouTube, Hacker News, or Twitter and suggest one of the above activities for me to perform instead.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2020 Resolutions</title>
      <link>https://davidbieber.com/snippets/2020-01-01-new-years-resolutions/</link>
      <pubDate>Mon, 30 Dec 2019 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2020-01-01-new-years-resolutions/</guid>
      <description>&lt;p&gt;I&#39;ve set New Year&#39;s Resolutions most years for the last several years. Let&#39;s review:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Year&lt;/th&gt;
&lt;th&gt;Resolution&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;td&gt;Play violin on 100 days&lt;/td&gt;
&lt;td&gt;Played on 43 days&lt;/td&gt;
&lt;td&gt;&lt;font color=&#34;maroon&#34;&gt;Nope&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;td&gt;Longer arms&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yesssss!&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;Exercise 200 days&lt;br&gt; Read 200 days&lt;/td&gt;
&lt;td&gt;Exercise: 200 days by summer&lt;br&gt; Reading: (look this up)&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2014&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;100 days of push ups&lt;/td&gt;
&lt;td&gt;145 done by December&lt;/td&gt;
&lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes!&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The missing entries I don&#39;t recall or have readily available, but I had goals in those years too.&lt;/p&gt;
&lt;p&gt;This year, I add a new resolution to the table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Year&lt;/th&gt;
&lt;th&gt;Resolution&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2020&lt;/td&gt;
&lt;td&gt;Communicate publicly 100 times&lt;/td&gt;
&lt;td&gt;**Finger&#39;s crossed**&lt;/td&gt;
&lt;td&gt;TBD!&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;What counts as &amp;ldquo;communicating publicly&amp;rdquo;?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&#34;https://davidbieber.com/snippets&#34;&gt;snippet&lt;/a&gt; like this one&lt;/li&gt;
&lt;li&gt;Giving a tech talk&lt;/li&gt;
&lt;li&gt;Writing a &lt;a href=&#34;https://davidbieber.com/posts&#34;&gt;blog post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Publishing a paper&lt;/li&gt;
&lt;li&gt;Uploading a video&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to get infrequent updates about my progress, you can subscribe here:&lt;/p&gt;

&lt;link href=&#34;//cdn-images.mailchimp.com/embedcode/classic-10_7.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;
  #mc_embed_signup{
    background:#fff;
    clear:left;
    font:14px Helvetica,Arial,sans-serif;
  }
&lt;/style&gt;
&lt;div id=&#34;mc_embed_signup&#34;&gt;
&lt;form action=&#34;https://gmail.us3.list-manage.com/subscribe/post?u=a55774562ae9fa9a1d879fa75&amp;amp;id=132f89def3&#34; method=&#34;post&#34; id=&#34;mc-embedded-subscribe-form&#34; name=&#34;mc-embedded-subscribe-form&#34; class=&#34;validate&#34; target=&#34;_blank&#34; novalidate&gt;
    &lt;div id=&#34;mc_embed_signup_scroll&#34;&gt;
  
&lt;div class=&#34;mc-field-group&#34;&gt;
  &lt;label for=&#34;mce-EMAIL&#34;&gt;Email Address&lt;/label&gt;
  &lt;input type=&#34;email&#34; value=&#34;&#34; name=&#34;EMAIL&#34; class=&#34;required email&#34; id=&#34;mce-EMAIL&#34;&gt;
&lt;/div&gt;
  &lt;div id=&#34;mce-responses&#34; class=&#34;clear&#34;&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-error-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-success-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;    
    &lt;div style=&#34;position: absolute; left: -5000px;&#34; aria-hidden=&#34;true&#34;&gt;&lt;input type=&#34;text&#34; name=&#34;b_a55774562ae9fa9a1d879fa75_132f89def3&#34; tabindex=&#34;-1&#34; value=&#34;&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;
      &lt;input type=&#34;submit&#34; value=&#34;Subscribe&#34; name=&#34;subscribe&#34; id=&#34;mc-embedded-subscribe&#34; class=&#34;button&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js&#39;&gt;&lt;/script&gt;
&lt;script type=&#39;text/javascript&#39;&gt;(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=&#39;EMAIL&#39;;ftypes[0]=&#39;email&#39;;fnames[1]=&#39;FNAME&#39;;ftypes[1]=&#39;text&#39;;fnames[2]=&#39;LNAME&#39;;ftypes[2]=&#39;text&#39;;fnames[3]=&#39;ADDRESS&#39;;ftypes[3]=&#39;address&#39;;fnames[4]=&#39;PHONE&#39;;ftypes[4]=&#39;phone&#39;;fnames[5]=&#39;BIRTHDAY&#39;;ftypes[5]=&#39;birthday&#39;;}(jQuery));var $mcj = jQuery.noConflict(true);&lt;/script&gt;

&lt;p&gt;You can expect fewer than one email per month, not 100 per year, so don&#39;t worry about spam.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing for No Audience</title>
      <link>https://davidbieber.com/snippets/2019-12-30-writing-for-no-audience/</link>
      <pubDate>Mon, 30 Dec 2019 01:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2019-12-30-writing-for-no-audience/</guid>
      <description>&lt;p&gt;I started this &lt;a href=&#34;https://davidbieber.com/snippets&#34;&gt;&amp;ldquo;snippets&amp;rdquo;&lt;/a&gt; section of my website just a few days ago with the intention of being able to write without needing to put polish on a piece before publishing it.&lt;/p&gt;
&lt;p&gt;My thinking was that I would be able to put small notes there, and half-baked ideas, and not have to worry about diluting the quality of the content of my &lt;a href=&#34;https://davidbieber.com/posts&#34;&gt;main website&lt;/a&gt;. I could put high quality posts on the main site, and a whole range of both good and bad posts in the snippets section. This way, assuming I do a good job, readers could come to expect that any post on the main website would be high quality. Curious people looking for additional content could come here to the snippets section if they wanted to, but more often posts here would either (1) almost never get read, or (2) be linked to directly, e.g. if they were relevent in some other context.&lt;/p&gt;
&lt;p&gt;I&#39;ve been surprised and delighted by the effect that having this &amp;ldquo;No Audience&amp;rdquo; section of the website has had on my writing. Writing for no one is so much easier than writing for someone.&lt;/p&gt;
&lt;p&gt;On a few occasions (and it&#39;s only been a few days since I started this section), I&#39;ve started writing snippets intending for them to be brief thoughts meant for no one but myself. Then, after starting, it has felt natural to expand the post into something more substantial than I originally intended, e.g. answering questions that a hypothetical reader might have.&lt;/p&gt;
&lt;p&gt;On one &lt;a href=&#34;https://davidbieber.com/post/2019-12-29-track-your-life-in-a-spreadsheet&#34;&gt;occasion&lt;/a&gt; I even decided to bump the post up in importance after getting started, placing it in the main section of the website rather than relegating it to the mostly hidden snippets section.&lt;/p&gt;
&lt;p&gt;To anyone out there who does end up reading this, and there may very well be none of you: if you&#39;re having trouble getting started with writing, write for no audience.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;the-different-degrees-of-no-audience&#34;&gt;The Different Degrees of &amp;ldquo;No Audience&amp;rdquo;&lt;/h4&gt;
&lt;p&gt;I actually write for No Audience in two different contexts.&lt;/p&gt;
&lt;p&gt;(1) The &lt;a href=&#34;https://davidbieber.com/snippets&#34;&gt;snippets&lt;/a&gt; section of my website&lt;br&gt;
(2) Using &lt;a href=&#34;https://davidbieber.com/projects/shh-shell&#34;&gt;shh-shell&lt;/a&gt; at night&lt;/p&gt;
&lt;p&gt;The snippets section of my website is public, but with no built-in broadcasting. People can read it if they choose to, but I&#39;m not putting it in people&#39;s faces (by default; I will if it&#39;s appropriate in context). Contrast this with the writing I do with the &lt;a href=&#34;https://davidbieber.com/projects/shh-shell&#34;&gt;shh-shell&lt;/a&gt;. This is more personal writing that I do half-asleep as I drift off at night, and so I don&#39;t make it public; I expect almost no one will ever read it. This writing, I suppose is for No Audience to an even more extreme degree. I recommend both practices: public writing for no audience, and private writing for no audience.&lt;/p&gt;
&lt;h4 id=&#34;social-media-doesnt-cut-it&#34;&gt;Social Media Doesn&#39;t Cut It&lt;/h4&gt;
&lt;p&gt;Now that I&#39;ve discovered this practice and am quite fond of it, I think it could be a promising addition to social media.&lt;/p&gt;
&lt;p&gt;No social media platform, to my knowledge, has given people a place to write public posts with an option to publish but not share them. The absense of such a feature makes sense; social media platforms need you to share for them to succeed, so how would giving you a space to publish-but-not-share help them? The answer lies in the psychology of the many social-media lurkers. There is a significant market segment of people who perhaps consume, but do not post, on social media. An option to publish-but-not-broadcast might help to convert some of that segment into sharers.&lt;/p&gt;
&lt;p&gt;As a social media consumer, but infrequent producer, I can tell you I am hesitant even to Like something on Twitter, because I know Twitter often treats Likes like Retweets, and will put the content I hearted in front of my followers with my name attached, and that&#39;s not something I want.&lt;/p&gt;
&lt;p&gt;If a feature for publishing-without-sharing were added to Facebook or Twitter, perhaps others would have an experience like mine over the last few days. Having the option to publish-but-not-share has significantly reduced the barrier to start writing for me. Then, once I&#39;ve started writing, I&#39;ve often changed my mind and decided I want to share what I&#39;ve written after all.&lt;/p&gt;
&lt;p&gt;If other social-media lurkers are like me, a feature enabling this behavior could help &amp;ldquo;break the ice&amp;rdquo; so to speak, and could make social media platforms more relevant to them.&lt;/p&gt;
&lt;h4 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h4&gt;
&lt;p&gt;I&#39;m going to continue building this snippets section for myself, with the default behavior being no-broadcasting as I add snippets. For snippets I&#39;m fond of, I may choose to broadcast (e.g. by posting about the post on social media). Contrast this with the &lt;a href=&#34;https://davidbieber.com/posts&#34;&gt;main posts section&lt;/a&gt; of my website; for new posts there, I will generally always broadcast the post, at least a little bit.&lt;/p&gt;
&lt;p&gt;If you&#39;d like to receive such broadcasts, e.g. when I write a post that I&#39;m particularly keen on sharing, please consider subscribing:&lt;/p&gt;

&lt;link href=&#34;//cdn-images.mailchimp.com/embedcode/classic-10_7.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;
  #mc_embed_signup{
    background:#fff;
    clear:left;
    font:14px Helvetica,Arial,sans-serif;
  }
&lt;/style&gt;
&lt;div id=&#34;mc_embed_signup&#34;&gt;
&lt;form action=&#34;https://gmail.us3.list-manage.com/subscribe/post?u=a55774562ae9fa9a1d879fa75&amp;amp;id=132f89def3&#34; method=&#34;post&#34; id=&#34;mc-embedded-subscribe-form&#34; name=&#34;mc-embedded-subscribe-form&#34; class=&#34;validate&#34; target=&#34;_blank&#34; novalidate&gt;
    &lt;div id=&#34;mc_embed_signup_scroll&#34;&gt;
  
&lt;div class=&#34;mc-field-group&#34;&gt;
  &lt;label for=&#34;mce-EMAIL&#34;&gt;Email Address&lt;/label&gt;
  &lt;input type=&#34;email&#34; value=&#34;&#34; name=&#34;EMAIL&#34; class=&#34;required email&#34; id=&#34;mce-EMAIL&#34;&gt;
&lt;/div&gt;
  &lt;div id=&#34;mce-responses&#34; class=&#34;clear&#34;&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-error-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-success-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;    
    &lt;div style=&#34;position: absolute; left: -5000px;&#34; aria-hidden=&#34;true&#34;&gt;&lt;input type=&#34;text&#34; name=&#34;b_a55774562ae9fa9a1d879fa75_132f89def3&#34; tabindex=&#34;-1&#34; value=&#34;&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;
      &lt;input type=&#34;submit&#34; value=&#34;Subscribe&#34; name=&#34;subscribe&#34; id=&#34;mc-embedded-subscribe&#34; class=&#34;button&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js&#39;&gt;&lt;/script&gt;
&lt;script type=&#39;text/javascript&#39;&gt;(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=&#39;EMAIL&#39;;ftypes[0]=&#39;email&#39;;fnames[1]=&#39;FNAME&#39;;ftypes[1]=&#39;text&#39;;fnames[2]=&#39;LNAME&#39;;ftypes[2]=&#39;text&#39;;fnames[3]=&#39;ADDRESS&#39;;ftypes[3]=&#39;address&#39;;fnames[4]=&#39;PHONE&#39;;ftypes[4]=&#39;phone&#39;;fnames[5]=&#39;BIRTHDAY&#39;;ftypes[5]=&#39;birthday&#39;;}(jQuery));var $mcj = jQuery.noConflict(true);&lt;/script&gt;

&lt;p&gt;Ironically, you are also welcome to follow the snippets section with &lt;a href=&#34;https://davidbieber.com/snippets/index.xml&#34;&gt;RSS&lt;/a&gt;. Don&#39;t tell me if you do though, since I would like to continue to feel like I&#39;m writing for No Audience. You can follow the posts section with &lt;a href=&#34;https://davidbieber.com/posts/index.xml&#34;&gt;RSS&lt;/a&gt; as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Planning to Analyze My Browsing History</title>
      <link>https://davidbieber.com/snippets/2019-12-30-analyzing-my-browser-history/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2019-12-30-analyzing-my-browser-history/</guid>
      <description>&lt;p&gt;I&#39;ve learned recently that programmatically accessing your browsing history is rather straightforward. Really exciting! This is rich data, from which I think I&#39;ll be able to learn a lot and hopefully combat unwanted distractions.&lt;/p&gt;
&lt;p&gt;First let me describe what information is available, and how you can access it. Then, let&#39;s discuss what you can do with this data. As I&#39;ve written about previously &lt;a href=&#34;https://davidbieber.com/projects/bieber-bot/&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;https://davidbieber.com/post/2019-12-29-track-your-life-in-a-spreadsheet/&#34;&gt;[2]&lt;/a&gt;, I already have a chat bot system in place, which will be able to take advantage of this data to e.g. help me stay focused.&lt;/p&gt;
&lt;h4 id=&#34;accessing-your-browser-history&#34;&gt;Accessing Your Browser History&lt;/h4&gt;
&lt;p&gt;Thank you to GitHub user &lt;a href=&#34;https://github.com/dropmeaword&#34;&gt;dropmeaword&lt;/a&gt; for compiling &lt;a href=&#34;https://gist.github.com/dropmeaword/9372cbeb29e8390521c2&#34;&gt;this gist&lt;/a&gt; explaining how to access your browser history via sqlite3. The gist covers Safari, Chrome, and Firefox. In this post, I&#39;ll just focus on Chrome on OSX, since that&#39;s my primary mode of browsing.&lt;/p&gt;
&lt;p&gt;My Chrome browsing history is located at &lt;code&gt;~/Library/Application Support/Google/Chrome/Default/History&lt;/code&gt;. Since I use multiple profiles in Chrome, each profile gets its own browsing history, e.g. located at &lt;code&gt;~/Library/Application Support/Google/Chrome/Profile 1/History&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each browsing history is stored as a sqlite3 database. Before analyzing the data, I recommend making a copy of it (&lt;code&gt;cp ~/Library/Application\ Support/Google/Chrome/Default/History my-history&lt;/code&gt;); this way your history database (a) wont be locked by Chrome while you&#39;re trying to access it, and (b) wont change while you&#39;re looking at it, which could cause confusion and inconsistencies in your results.&lt;/p&gt;
&lt;p&gt;This means you can browse it interactively using the sqlite3 REPL by running &lt;code&gt;sqlite3 PATH_TO_DATABASE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are also libraries available for accessing sqlite3 databases in just about every language. For Python, there&#39;s the &lt;a href=&#34;https://docs.python.org/3/library/sqlite3.html&#34;&gt;sqlite3&lt;/a&gt; library. Go has &lt;a href=&#34;https://godoc.org/github.com/mattn/go-sqlite3&#34;&gt;go-sqlite3&lt;/a&gt;. JavaScript has &lt;a href=&#34;https://www.sqlitetutorial.net/sqlite-nodejs/&#34;&gt;this sqlite3 module&lt;/a&gt;. However you most like scripting, you&#39;ll have a familiar way of accessing the data.&lt;/p&gt;
&lt;h4 id=&#34;the-available-data&#34;&gt;The Available Data&lt;/h4&gt;
&lt;p&gt;Running sqlite3 macro &lt;code&gt;.tables&lt;/code&gt;, we see the following tables are available.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;downloads&lt;/td&gt;
&lt;td&gt;meta&lt;/td&gt;
&lt;td&gt;urls&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;downloads_slices&lt;/td&gt;
&lt;td&gt;segment_usage&lt;/td&gt;
&lt;td&gt;visit_source&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;downloads_url_chains&lt;/td&gt;
&lt;td&gt;segments&lt;/td&gt;
&lt;td&gt;visits&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;keyword_search_terms&lt;/td&gt;
&lt;td&gt;typed_url_sync_metadata&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We&#39;ll be most interested in the &lt;code&gt;urls&lt;/code&gt; and &lt;code&gt;visits&lt;/code&gt; tables.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;urls&lt;/code&gt; table has these columns (found with &lt;code&gt;.schema urls&lt;/code&gt;):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;Integer Id&lt;/td&gt;
&lt;td&gt;The &lt;code&gt;id&lt;/code&gt; of the URL in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The URL of the website.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;td&gt;The title of website.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;visit_count&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;The number of times you&#39;ve visited the URL.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;typed_count&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;The number of times you&#39;ve visited the URL by typing in the address (as opposed to by following a link.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;last_visit_time&lt;/td&gt;
&lt;td&gt;Integer (microseconds since the epoch)&lt;/td&gt;
&lt;td&gt;The time of the most recent to the URL.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;Boolean&lt;/td&gt;
&lt;td&gt;I&#39;m not sure what this is about.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And the &lt;code&gt;visits&lt;/code&gt; table has these columns (obtained via &lt;code&gt;.schema visits&lt;/code&gt;):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;Integer Id&lt;/td&gt;
&lt;td&gt;The &lt;code&gt;id&lt;/code&gt; of the visit in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;Integer Id&lt;/td&gt;
&lt;td&gt;The &lt;code&gt;id&lt;/code&gt; of the url in the &lt;code&gt;urls&lt;/code&gt; table.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;visit_time&lt;/td&gt;
&lt;td&gt;Integer (milliseconds since the epoch)&lt;/td&gt;
&lt;td&gt;The time of the visit.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;from_visit&lt;/td&gt;
&lt;td&gt;Integer Id&lt;/td&gt;
&lt;td&gt;The &lt;code&gt;id&lt;/code&gt; of the visit that lead you to this one.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;transition&lt;/td&gt;
&lt;td&gt;Bit vector&lt;/td&gt;
&lt;td&gt;Represents the &lt;a href=&#34;https://developer.chrome.com/extensions/history#transition_types&#34;&gt;transition type&lt;/a&gt; (how you got to the URL)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;segment_id&lt;/td&gt;
&lt;td&gt;Integer Id&lt;/td&gt;
&lt;td&gt;The &lt;code&gt;id&lt;/code&gt; of the segment in the database. I&#39;m not quite sure what a segment is, but there is a &lt;code&gt;segments&lt;/code&gt; table you can look at.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;visit_duration&lt;/td&gt;
&lt;td&gt;Integer (microseconds)&lt;/td&gt;
&lt;td&gt;The amount of time spent at the website, or 0 if not available.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;incremented_omnibox_typed_score&lt;/td&gt;
&lt;td&gt;Boolean&lt;/td&gt;
&lt;td&gt;I do not know what this is about.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As you can see, we can access every visit to every website that we&#39;ve made since the last time we cleared our browsing history. We can see what website we visited (&lt;code&gt;visits.url&lt;/code&gt;), when we visited it (&lt;code&gt;visits.visit_time&lt;/code&gt;), how many times we&#39;ve visited it (&lt;code&gt;urls.visit_count&lt;/code&gt;), and how long each visit was for (&lt;code&gt;visits.visit_duration&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We can even use &lt;code&gt;visits.from_visit&lt;/code&gt; to figure out what website linked us to each url, if that interests us.&lt;/p&gt;
&lt;h4 id=&#34;what-can-we-deduce&#34;&gt;What Can We Deduce?&lt;/h4&gt;
&lt;p&gt;We can (1) perform a historical analysis on the data, as well as (2) do real-time monitoring of the data.&lt;/p&gt;
&lt;p&gt;Here I brainstorm some of the historical trends we will be able to uncover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Most frequently visited websites&lt;/li&gt;
&lt;li&gt;Websites where we spend the majority of our time&lt;/li&gt;
&lt;li&gt;Websites that frequently lead to known-distractor websites (e.g. Reddit, Hacker News, Twitter, YouTube)&lt;/li&gt;
&lt;li&gt;We can do an analysis by time of day (or day of week), to figure out what sites occupy my time late at night vs during daylight hours.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are somewhat interesting, but what I&#39;m particularly excited for is the ongoing analysis that &lt;a href=&#34;https://davidbieber.com/projects/bieber-bot&#34;&gt;Bieber Bot&lt;/a&gt; can provide by accessing the data.&lt;/p&gt;
&lt;p&gt;Here is a brainstorm of the more real-time actionable insights we might extract from this data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bieber Bot could ping me if it looks like I&#39;m spending too much time on a distraction website.&lt;/li&gt;
&lt;li&gt;He could try to detect if I went to a website with a particular purpose, but ended up getting distracted and not completing the purpose I set out to do.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, if I&#39;m on a productive website and then switch to a distraction website for more than a few minutes, particularly during work hours, Bieber Bot might message asking if I got distracted. Think you could do that for me Bieber Bot?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I could signal that I want to view a website later by opening it and immediately closing it again.&lt;/li&gt;
&lt;li&gt;Perhaps we could detect if I&#39;m researching a particular topic, and then Bieber Bot could try to help me with my research.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;related-idea&#34;&gt;Related Idea&lt;/h4&gt;
&lt;p&gt;In order to reduce distractions, I&#39;d like to be able to switch my browsing mode from &amp;ldquo;clicking opens links&amp;rdquo; to &amp;ldquo;clicking saves a link for later&amp;rdquo;. When in this new mode, whenever I click a link it wouldn&#39;t open that link; instead, it would save the link to a list of deferred links.
Then I would be able to view my &amp;ldquo;saved for later&amp;rdquo; links when I have time that I&#39;ve explicitly set aside, rather than during the time that I would rather be doing something more productive.&lt;/p&gt;
&lt;h4 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h4&gt;
&lt;p&gt;So far I&#39;ve done a little bit of manual exploration of my browsing history data. I&#39;ve set up a little Python script to be able to access the data programmatically.&lt;/p&gt;
&lt;p&gt;Next, I&#39;ll do more manual analysis, and then I&#39;ll see if I&#39;m able to give Bieber Bot the real-time access to the data that I described above. I&#39;m particularly excited to see if I can get the &amp;ldquo;looks like you&#39;ve gotten distracted&amp;rdquo; messages set up with Bieber Bot. As a bonus, since Bieber Bot can message other people too, this system could help me leverage social accountability to stay on task.&lt;/p&gt;
&lt;p&gt;Want to see where this project leads? You can subscribe for infrequent email updates.&lt;/p&gt;

&lt;link href=&#34;//cdn-images.mailchimp.com/embedcode/classic-10_7.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;
  #mc_embed_signup{
    background:#fff;
    clear:left;
    font:14px Helvetica,Arial,sans-serif;
  }
&lt;/style&gt;
&lt;div id=&#34;mc_embed_signup&#34;&gt;
&lt;form action=&#34;https://gmail.us3.list-manage.com/subscribe/post?u=a55774562ae9fa9a1d879fa75&amp;amp;id=132f89def3&#34; method=&#34;post&#34; id=&#34;mc-embedded-subscribe-form&#34; name=&#34;mc-embedded-subscribe-form&#34; class=&#34;validate&#34; target=&#34;_blank&#34; novalidate&gt;
    &lt;div id=&#34;mc_embed_signup_scroll&#34;&gt;
  
&lt;div class=&#34;mc-field-group&#34;&gt;
  &lt;label for=&#34;mce-EMAIL&#34;&gt;Email Address&lt;/label&gt;
  &lt;input type=&#34;email&#34; value=&#34;&#34; name=&#34;EMAIL&#34; class=&#34;required email&#34; id=&#34;mce-EMAIL&#34;&gt;
&lt;/div&gt;
  &lt;div id=&#34;mce-responses&#34; class=&#34;clear&#34;&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-error-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-success-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;    
    &lt;div style=&#34;position: absolute; left: -5000px;&#34; aria-hidden=&#34;true&#34;&gt;&lt;input type=&#34;text&#34; name=&#34;b_a55774562ae9fa9a1d879fa75_132f89def3&#34; tabindex=&#34;-1&#34; value=&#34;&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;
      &lt;input type=&#34;submit&#34; value=&#34;Subscribe&#34; name=&#34;subscribe&#34; id=&#34;mc-embedded-subscribe&#34; class=&#34;button&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js&#39;&gt;&lt;/script&gt;
&lt;script type=&#39;text/javascript&#39;&gt;(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=&#39;EMAIL&#39;;ftypes[0]=&#39;email&#39;;fnames[1]=&#39;FNAME&#39;;ftypes[1]=&#39;text&#39;;fnames[2]=&#39;LNAME&#39;;ftypes[2]=&#39;text&#39;;fnames[3]=&#39;ADDRESS&#39;;ftypes[3]=&#39;address&#39;;fnames[4]=&#39;PHONE&#39;;ftypes[4]=&#39;phone&#39;;fnames[5]=&#39;BIRTHDAY&#39;;ftypes[5]=&#39;birthday&#39;;}(jQuery));var $mcj = jQuery.noConflict(true);&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Today I Learned the Word Feedingstuffs</title>
      <link>https://davidbieber.com/snippets/2019-12-29-feedingstuffs/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2019-12-29-feedingstuffs/</guid>
      <description>&lt;p&gt;Today I learned the word &lt;a href=&#34;https://en.wiktionary.org/wiki/feedingstuff#English&#34;&gt;&amp;ldquo;feedingstuffs&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;feedingstuff (countable and uncountable, plural feedingstuffs)

  Any foodstuff used to feed livestock.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&#39;s not in every dictionary, and it&#39;s not a valid Scrabble word.&lt;/p&gt;
&lt;p&gt;How did this word come up? I had heard previously that salmon is not naturally as pink as it is in supermarkets. I was wondering how this could be. Surely salmon aren&#39;t being colored during the packaging process, right? That&#39;s right, salmon are still that same color when they&#39;re first cut open.&lt;/p&gt;
&lt;p&gt;The coloring, &lt;a href=&#34;https://ec.europa.eu/food/sites/food/files/safety/docs/animal-feed_additives_rules_scan-old_report_out81.pdf&#34;&gt;I learned&lt;/a&gt;, is added to the salmon&#39;s &lt;strong&gt;feedingstuffs&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Yes, that&#39;s an official European Commission report from 2002 recommending that the amount of allowable &lt;a href=&#34;https://en.wikipedia.org/wiki/Canthaxanthin&#34;&gt;Canthaxanthin&lt;/a&gt; (&lt;font color=&#34;salmon&#34;&gt;salmon&lt;/font&gt; coloring) in salmon feed be reevaluated, and possibly lowered.&lt;/p&gt;
&lt;p&gt;At the time, the maximum amount of Canthaxanthin allowable in salmon and trout feedingstuffs in the EU was 80 mg / kg of feedingstuff.&lt;/p&gt;
&lt;p&gt;Fast-forward to today, and only &lt;a href=&#34;https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32008R0775&amp;amp;qid=1577681296736&amp;amp;from=EN&#34;&gt;10 mg / kg of Canthaxanthin is permitted&lt;/a&gt;. More interesting than this though, is that in the 2008 journal reporting this new, lower limit, they instead use the word &lt;strong&gt;foodstuffs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Feedingstuffs, it would seem, are no more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning to Communicate</title>
      <link>https://davidbieber.com/snippets/2019-12-26-learning-to-communicate/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2019-12-26-learning-to-communicate/</guid>
      <description>&lt;p&gt;My goal for 2020 is to learn to communicate better with the world. I work in a research group at Google, and our main job function is performing research in program synthesis. But research is only as valuable as how well it is communicated. So in 2020 I&#39;d like to get better at communicating publicly.&lt;/p&gt;
&lt;p&gt;There are a few options for doing this. The first is writing blog posts. This may be too large an undertaking to do frequently. I&#39;d really like something that&#39;s lower barrier to do, and with a lower quality bar, so that I can do this more often. The natural alternative with these properties is academic Twitter. However, I want to avoid the addictive nature of Twitter. I also want to write more than 280 characters at a time, and I don&#39;t want to put every little thing I write in front of people&#39;s faces with equal importance. Twitter seems a good place for announcing a new paper or a Python Fire update, but not for sharing a musing like this one.&lt;/p&gt;
&lt;p&gt;So instead I think I&#39;m going to start by silently posting my writings to my website, but in a &lt;a href=&#34;https://davidbieber.com/snippets&#34;&gt;separate section&lt;/a&gt; from the main blog. This way when there&#39;s something with a little more polish that I think is explicitly worth reading, I can put it in the &lt;a href=&#34;https://davidbieber.com/posts&#34;&gt;main blog section&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/Bieber&#34;&gt;tweet&lt;/a&gt; about it, etc.&lt;/p&gt;
&lt;p&gt;If you want to receive updates for every small writing I put up here, you can use this &lt;a href=&#34;https://davidbieber.com/snippets/index.xml&#34;&gt;RSS feed&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to receive updates only for major posts, such as new publications or major life updates, you can use this &lt;a href=&#34;https://davidbieber.com/posts/index.xml&#34;&gt;RSS feed&lt;/a&gt; or you can subscribe here:&lt;/p&gt;

&lt;link href=&#34;//cdn-images.mailchimp.com/embedcode/classic-10_7.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;
  #mc_embed_signup{
    background:#fff;
    clear:left;
    font:14px Helvetica,Arial,sans-serif;
  }
&lt;/style&gt;
&lt;div id=&#34;mc_embed_signup&#34;&gt;
&lt;form action=&#34;https://gmail.us3.list-manage.com/subscribe/post?u=a55774562ae9fa9a1d879fa75&amp;amp;id=132f89def3&#34; method=&#34;post&#34; id=&#34;mc-embedded-subscribe-form&#34; name=&#34;mc-embedded-subscribe-form&#34; class=&#34;validate&#34; target=&#34;_blank&#34; novalidate&gt;
    &lt;div id=&#34;mc_embed_signup_scroll&#34;&gt;
  
&lt;div class=&#34;mc-field-group&#34;&gt;
  &lt;label for=&#34;mce-EMAIL&#34;&gt;Email Address&lt;/label&gt;
  &lt;input type=&#34;email&#34; value=&#34;&#34; name=&#34;EMAIL&#34; class=&#34;required email&#34; id=&#34;mce-EMAIL&#34;&gt;
&lt;/div&gt;
  &lt;div id=&#34;mce-responses&#34; class=&#34;clear&#34;&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-error-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;response&#34; id=&#34;mce-success-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;    
    &lt;div style=&#34;position: absolute; left: -5000px;&#34; aria-hidden=&#34;true&#34;&gt;&lt;input type=&#34;text&#34; name=&#34;b_a55774562ae9fa9a1d879fa75_132f89def3&#34; tabindex=&#34;-1&#34; value=&#34;&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;
      &lt;input type=&#34;submit&#34; value=&#34;Subscribe&#34; name=&#34;subscribe&#34; id=&#34;mc-embedded-subscribe&#34; class=&#34;button&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js&#39;&gt;&lt;/script&gt;
&lt;script type=&#39;text/javascript&#39;&gt;(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=&#39;EMAIL&#39;;ftypes[0]=&#39;email&#39;;fnames[1]=&#39;FNAME&#39;;ftypes[1]=&#39;text&#39;;fnames[2]=&#39;LNAME&#39;;ftypes[2]=&#39;text&#39;;fnames[3]=&#39;ADDRESS&#39;;ftypes[3]=&#39;address&#39;;fnames[4]=&#39;PHONE&#39;;ftypes[4]=&#39;phone&#39;;fnames[5]=&#39;BIRTHDAY&#39;;ftypes[5]=&#39;birthday&#39;;}(jQuery));var $mcj = jQuery.noConflict(true);&lt;/script&gt;

&lt;p&gt;Happy early new year!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Snippets for davidbieber.com</title>
      <link>https://davidbieber.com/snippets/2019-12-25-introducing-snippets/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://davidbieber.com/snippets/2019-12-25-introducing-snippets/</guid>
      <description>&lt;p&gt;Today I&#39;m introducing the &amp;ldquo;snippets&amp;rdquo; section of my website. The goal is to give myself a place to post content online that&#39;s extremely easy to post to, but isn&#39;t featured prominently anywhere on the site. This way I can post things without them needing polish or production value, but still link to them and share them as I see fit.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
